Bridge.assembly("BrainAI",function($asm,globals){"use strict";Bridge.define("BrainAI.AI.BehaviorTrees.Behavior$1",function(T){return{fields:{Status:0},ctors:{init:function(){this.Status=BrainAI.AI.BehaviorTrees.TaskStatus.Invalid}},methods:{Invalidate:function(){this.Status=BrainAI.AI.BehaviorTrees.TaskStatus.Invalid},OnStart:function(){},OnEnd:function(){},Tick:function(context){return this.Status===BrainAI.AI.BehaviorTrees.TaskStatus.Invalid&&this.OnStart(),this.Status=this.Update(context),this.Status!==BrainAI.AI.BehaviorTrees.TaskStatus.Running&&this.OnEnd(),this.Status}}}});Bridge.define("BrainAI.AI.IAITurn",{$kind:"interface"});Bridge.define("BrainAI.AI.BehaviorTrees.BehaviorTreeBuilder$1",function(T){return{statics:{methods:{Begin:function(context){return new(BrainAI.AI.BehaviorTrees.BehaviorTreeBuilder$1(T))(context)}}},fields:{context:Bridge.getDefaultValue(T),currentNode:null,parentNodeStack:null},ctors:{init:function(){this.parentNodeStack=new(System.Collections.Generic.Stack$1(BrainAI.AI.BehaviorTrees.Behavior$1(T)).ctor)},ctor:function(context){this.$initialize();this.context=context}},methods:{AddChildBehavior:function(child){if(this.parentNodeStack.Count===0)throw new System.InvalidOperationException.$ctor1("Can't create an unnested Behavior node. It must be a leaf node.");var parent=this.parentNodeStack.Peek();return Bridge.is(parent,BrainAI.AI.BehaviorTrees.Composites.Composite$1(T))?Bridge.as(parent,BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)).AddChild(child):Bridge.is(parent,BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T))&&(Bridge.as(parent,BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T)).Child=child,this.EndDecorator()),this},PushParentNode:function(composite){return this.parentNodeStack.Count>0&&this.AddChildBehavior(composite),this.parentNodeStack.Push(composite),this},EndDecorator:function(){this.currentNode=this.parentNodeStack.Pop()},Action:function(func){return this.AddChildBehavior(new(BrainAI.AI.BehaviorTrees.Actions.ExecuteAction$1(T))(func))},Action$1:function(func){return this.Action(function(t){return func(t)?BrainAI.AI.BehaviorTrees.TaskStatus.Success:BrainAI.AI.BehaviorTrees.TaskStatus.Failure})},Conditional:function(func){return this.AddChildBehavior(new(BrainAI.AI.BehaviorTrees.Conditionals.ExecuteActionConditional$1(T))(func))},Conditional$1:function(func){return this.Conditional(function(t){return func(t)?BrainAI.AI.BehaviorTrees.TaskStatus.Success:BrainAI.AI.BehaviorTrees.TaskStatus.Failure})},SubTree:function(subTree){return this.AddChildBehavior(new(BrainAI.AI.BehaviorTrees.Actions.BehaviorTreeReference$1(T))(subTree))},ConditionalDecorator:function(func,shouldReevaluate){shouldReevaluate===void 0&&(shouldReevaluate=!0);var conditional=new(BrainAI.AI.BehaviorTrees.Conditionals.ExecuteActionConditional$1(T))(func);return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Decorators.ConditionalDecorator$1(T).$ctor1)(conditional,shouldReevaluate))},ConditionalDecorator$1:function(func,shouldReevaluate){return shouldReevaluate===void 0&&(shouldReevaluate=!0),this.ConditionalDecorator(function(t){return func(t)?BrainAI.AI.BehaviorTrees.TaskStatus.Success:BrainAI.AI.BehaviorTrees.TaskStatus.Failure},shouldReevaluate)},AlwaysFail:function(){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Decorators.AlwaysFail$1(T)))},AlwaysSucceed:function(){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Decorators.AlwaysSucceed$1(T)))},Inverter:function(){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Decorators.Inverter$1(T)))},Repeater:function(count){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Decorators.Repeater$1(T).$ctor1)(count))},UntilFail:function(){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Decorators.UntilFail$1(T)))},UntilSuccess:function(){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Decorators.UntilSuccess$1(T)))},Parallel:function(){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Composites.ParallelSequence$1(T)))},ParallelSelector:function(){return this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Composites.ParallelSelector$1(T)))},Selector:function(abortType){return abortType===void 0&&(abortType=0),this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Composites.Selector$1(T))(abortType))},Sequence:function(abortType){return abortType===void 0&&(abortType=0),this.PushParentNode(new(BrainAI.AI.BehaviorTrees.Composites.Sequence$1(T))(abortType))},EndComposite:function(){if(!Bridge.is(this.parentNodeStack.Peek(),BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)))throw new System.InvalidOperationException.$ctor1("attempting to end a composite but the top node is not a composite");return this.currentNode=this.parentNodeStack.Pop(),this},Build:function(){if(this.currentNode==null)throw new System.InvalidOperationException.$ctor1("Can't create a behaviour tree with zero nodes");return new(BrainAI.AI.BehaviorTrees.BehaviorTree$1(T))(this.context,this.currentNode)}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Composites.AbortTypes",{$kind:"enum",statics:{fields:{None:0,LowerPriority:1,Self:2,Both:3}},$flags:!0});Bridge.define("BrainAI.AI.BehaviorTrees.Composites.AbortTypesExt",{statics:{methods:{Has:function(self,check){return(self&check)===check}}}});Bridge.definei("BrainAI.AI.BehaviorTrees.Conditionals.IConditional$1",function(T){return{$kind:"interface",$variance:[2]}});Bridge.define("BrainAI.AI.BehaviorTrees.TaskStatus",{$kind:"enum",statics:{fields:{Invalid:0,Success:1,Failure:2,Running:3}}});Bridge.define("BrainAI.AI.FSM.State$1",function(T){return{fields:{Machine:null,Context:Bridge.getDefaultValue(T)},methods:{SetMachineAndContext:function(machine,context){this.Machine=machine;this.Context=context;this.OnInitialized()},OnInitialized:function(){},Begin:function(){},End:function(){}}}});Bridge.define("BrainAI.AI.GOAP.ActionPlanner",{statics:{fields:{MaxConditions:0},ctors:{init:function(){this.MaxConditions=64}}},fields:{ConditionNames:null,actions:null,viableActions:null,preConditions:null,postConditions:null,numConditionNames:0},ctors:{init:function(){this.ConditionNames=System.Array.init(BrainAI.AI.GOAP.ActionPlanner.MaxConditions,null,System.String);this.actions=new(System.Collections.Generic.List$1(BrainAI.AI.GOAP.GOAPAction).ctor);this.viableActions=new(System.Collections.Generic.List$1(BrainAI.AI.GOAP.GOAPAction).ctor);this.preConditions=System.Array.init(BrainAI.AI.GOAP.ActionPlanner.MaxConditions,function(){return new BrainAI.AI.GOAP.WorldState},BrainAI.AI.GOAP.WorldState);this.postConditions=System.Array.init(BrainAI.AI.GOAP.ActionPlanner.MaxConditions,function(){return new BrainAI.AI.GOAP.WorldState},BrainAI.AI.GOAP.WorldState)},ctor:function(){this.$initialize();this.numConditionNames=0;for(var i=0;i<BrainAI.AI.GOAP.ActionPlanner.MaxConditions;i=i+1|0)this.ConditionNames[System.Array.index(i,this.ConditionNames)]=null,this.preConditions[System.Array.index(i,this.preConditions)]=BrainAI.AI.GOAP.WorldState.Create(this),this.postConditions[System.Array.index(i,this.postConditions)]=BrainAI.AI.GOAP.WorldState.Create(this)}},methods:{CreateWorldState:function(){return BrainAI.AI.GOAP.WorldState.Create(this)},AddAction:function(goapAction){var $t,$t1,actionId=this.FindActionIndex(goapAction),preCondition,conditionId,postCondition,conditionId1;if(actionId===-1)throw new System.Collections.Generic.KeyNotFoundException.$ctor1("could not find or create Action");$t=Bridge.getEnumerator(goapAction.PreConditions);try{while($t.moveNext()){if(preCondition=$t.Current,conditionId=this.FindConditionNameIndex(preCondition.Item1),conditionId===-1)throw new System.Collections.Generic.KeyNotFoundException.$ctor1("could not find or create conditionName");this.preConditions[System.Array.index(actionId,this.preConditions)].Set$1(conditionId,preCondition.Item2)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}$t1=Bridge.getEnumerator(goapAction.PostConditions);try{while($t1.moveNext()){if(postCondition=$t1.Current,conditionId1=this.FindConditionNameIndex(postCondition.Item1),conditionId1===-1)throw new System.Collections.Generic.KeyNotFoundException.$ctor1("could not find conditionName");this.postConditions[System.Array.index(actionId,this.postConditions)].Set$1(conditionId1,postCondition.Item2)}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}},Plan:function(startState,goalState,selectedNodes){selectedNodes===void 0&&(selectedNodes=null);this.viableActions.clear();for(var i=0;i<this.actions.Count;i=i+1|0)this.actions.getItem(i).Validate()&&this.viableActions.add(this.actions.getItem(i));return BrainAI.AI.GOAP.GOAPWorld.Plan(this,startState.$clone(),goalState.$clone(),selectedNodes)},Describe:function(){for(var pre,pst,i,v,i1,v1,sb=new System.Text.StringBuilder,a=0;a<this.actions.Count;a=a+1|0){for(sb.appendLine(Bridge.Reflection.getTypeName(Bridge.getType(this.actions.getItem(a)))),pre=this.preConditions[System.Array.index(a,this.preConditions)].$clone(),pst=this.postConditions[System.Array.index(a,this.postConditions)].$clone(),i=0;i<BrainAI.AI.GOAP.ActionPlanner.MaxConditions;i=i+1|0)pre.DontCare.and(System.Int64(1).shl(i)).equals(System.Int64(0))&&(v=pre.Values.and(System.Int64(1).shl(i)).ne(System.Int64(0)),sb.appendFormat("  {0}=={1}\n",this.ConditionNames[System.Array.index(i,this.ConditionNames)],Bridge.box(v?1:0,System.Int32)));for(i1=0;i1<BrainAI.AI.GOAP.ActionPlanner.MaxConditions;i1=i1+1|0)pst.DontCare.and(System.Int64(1).shl(i1)).equals(System.Int64(0))&&(v1=pst.Values.and(System.Int64(1).shl(i1)).ne(System.Int64(0)),sb.appendFormat("  {0}:={1}\n",this.ConditionNames[System.Array.index(i1,this.ConditionNames)],Bridge.box(v1?1:0,System.Int32)))}return sb.toString()},FindConditionNameIndex:function(conditionName){for(var idx=0;idx<this.numConditionNames;idx=idx+1|0)if(System.String.equals(this.ConditionNames[System.Array.index(idx,this.ConditionNames)],conditionName))return idx;return idx<63?(this.ConditionNames[System.Array.index(idx,this.ConditionNames)]=conditionName,this.numConditionNames=this.numConditionNames+1|0,idx):-1},FindActionIndex:function(goapAction){var idx=this.actions.indexOf(goapAction);return idx>-1?idx:(this.actions.add(goapAction),this.actions.Count-1|0)},GetPossibleTransitions:function(fr){for(var node,$t,result=new(System.Collections.Generic.List$1(BrainAI.AI.GOAP.GOAPNode).ctor),i=0;i<this.viableActions.Count;i=i+1|0){var pre=this.preConditions[System.Array.index(i,this.preConditions)].$clone(),care=pre.DontCare.xor(System.Int64(-1)),met=pre.Values.and(care).equals(fr.Values.and(care));met&&(node=($t=new BrainAI.AI.GOAP.GOAPNode,$t.Action=this.viableActions.getItem(i),$t.CostSoFar=this.viableActions.getItem(i).Cost,$t.WorldState=this.ApplyPostConditions(this,i,fr.$clone()),$t),result.add(node))}return result},ApplyPostConditions:function(ap,actionnr,fr){var pst=ap.postConditions[System.Array.index(actionnr,ap.postConditions)].$clone(),unaffected=pst.DontCare,affected=unaffected.xor(System.Int64(-1));return fr.Values=fr.Values.and(unaffected).or(pst.Values.and(affected)),fr.DontCare=fr.DontCare.and(pst.DontCare),fr.$clone()}}});Bridge.define("BrainAI.AI.GOAP.Agent",{fields:{Actions:null,Planner:null},ctors:{ctor:function(){this.$initialize();this.Planner=new BrainAI.AI.GOAP.ActionPlanner}},methods:{Plan:function(debugPlan){debugPlan===void 0&&(debugPlan=!1);var nodes=null;return debugPlan&&(nodes=new(System.Collections.Generic.List$1(BrainAI.AI.GOAP.GOAPNode).ctor)),this.Actions=this.Planner.Plan(this.GetWorldState(),this.GetGoalState(),nodes),nodes==null||nodes.Count<=0,this.HasActionPlan()},HasActionPlan:function(){return this.Actions!=null&&this.Actions.Count>0}}});Bridge.define("BrainAI.AI.GOAP.GOAPAction",{fields:{Name:null,Cost:0,PreConditions:null,PostConditions:null},ctors:{init:function(){this.Cost=1;this.PreConditions=new(System.Collections.Generic.HashSet$1(System.Tuple$2(System.String,System.Boolean)).ctor);this.PostConditions=new(System.Collections.Generic.HashSet$1(System.Tuple$2(System.String,System.Boolean)).ctor)},ctor:function(){this.$initialize()},$ctor1:function(name){this.$initialize();this.Name=name},$ctor2:function(name,cost){BrainAI.AI.GOAP.GOAPAction.$ctor1.call(this,name);this.Cost=cost}},methods:{SetPrecondition:function(conditionName,value){this.PreConditions.add({Item1:conditionName,Item2:value})},SetPostcondition:function(conditionName,value){this.PostConditions.add({Item1:conditionName,Item2:value})},Validate:function(){return!0},toString:function(){return System.String.format("[Action] {0} - cost: {1}",this.Name,Bridge.box(this.Cost,System.Int32))}}});Bridge.define("BrainAI.AI.GOAP.GOAPNode",{inherits:function(){return[System.IComparable$1(BrainAI.AI.GOAP.GOAPNode),System.IEquatable$1(BrainAI.AI.GOAP.GOAPNode)]},fields:{WorldState:null,CostSoFar:0,HeuristicCost:0,CostSoFarAndHeuristicCost:0,Action:null,Parent:null,ParentWorldState:null,Depth:0},alias:["equalsT","System$IEquatable$1$BrainAI$AI$GOAP$GOAPNode$equalsT","compareTo",["System$IComparable$1$BrainAI$AI$GOAP$GOAPNode$compareTo","System$IComparable$1$compareTo"]],ctors:{init:function(){this.WorldState=new BrainAI.AI.GOAP.WorldState;this.ParentWorldState=new BrainAI.AI.GOAP.WorldState}},methods:{equalsT:function(other){var care=this.WorldState.DontCare.xor(System.Int64(-1));return this.WorldState.Values.and(care).equals(other.WorldState.Values.and(care))},compareTo:function(other){return Bridge.compare(this.CostSoFarAndHeuristicCost,other.CostSoFarAndHeuristicCost)},Reset:function(){this.Action=null;this.Parent=null},Clone:function(){return Bridge.cast(Bridge.clone(this),BrainAI.AI.GOAP.GOAPNode)},toString:function(){return System.String.format("[cost: {0} | heuristic: {1}]: {2}",Bridge.box(this.CostSoFar,System.Int32),Bridge.box(this.HeuristicCost,System.Int32),this.Action)}}});Bridge.define("BrainAI.AI.GOAP.GOAPStorage",{statics:{fields:{MaxNodes:0},ctors:{init:function(){this.MaxNodes=128}}},fields:{opened:null,closed:null,numOpened:0,numClosed:0,lastFoundOpened:0,lastFoundClosed:0},ctors:{init:function(){this.opened=System.Array.init(BrainAI.AI.GOAP.GOAPStorage.MaxNodes,null,BrainAI.AI.GOAP.GOAPNode);this.closed=System.Array.init(BrainAI.AI.GOAP.GOAPStorage.MaxNodes,null,BrainAI.AI.GOAP.GOAPNode)},ctor:function(){this.$initialize()}},methods:{Clear:function(){for(var i1,i=0;i<this.numOpened;i=i+1|0)this.opened[System.Array.index(i,this.opened)]=null;for(i1=0;i1<this.numClosed;i1=i1+1|0)this.closed[System.Array.index(i1,this.closed)]=null;this.numOpened=this.numClosed=0;this.lastFoundClosed=this.lastFoundOpened=0},FindOpened:function(node){for(var care,i=0;i<this.numOpened;i=i+1|0)if(care=node.WorldState.DontCare.xor(System.Int64(-1)),node.WorldState.Values.and(care).equals(this.opened[System.Array.index(i,this.opened)].WorldState.Values.and(care)))return this.lastFoundClosed=i,this.closed[System.Array.index(i,this.closed)];return null},FindClosed:function(node){for(var care,i=0;i<this.numClosed;i=i+1|0)if(care=node.WorldState.DontCare.xor(System.Int64(-1)),node.WorldState.Values.and(care).equals(this.closed[System.Array.index(i,this.closed)].WorldState.Values.and(care)))return this.lastFoundClosed=i,this.closed[System.Array.index(i,this.closed)];return null},HasOpened:function(){return this.numOpened>0},RemoveOpened:function(node){this.numOpened>0&&(this.opened[System.Array.index(this.lastFoundOpened,this.opened)]=this.opened[System.Array.index(this.numOpened-1|0,this.opened)]);this.numOpened=this.numOpened-1|0},RemoveClosed:function(node){this.numClosed>0&&(this.closed[System.Array.index(this.lastFoundClosed,this.closed)]=this.closed[System.Array.index(this.numClosed-1|0,this.closed)]);this.numClosed=this.numClosed-1|0},IsOpen:function(node){return System.Array.indexOfT(this.opened,node)>-1},IsClosed:function(node){return System.Array.indexOfT(this.closed,node)>-1},AddToOpenList:function(node){this.opened[System.Array.index(Bridge.identity(this.numOpened,this.numOpened=this.numOpened+1|0),this.opened)]=node},AddToClosedList:function(node){this.closed[System.Array.index(Bridge.identity(this.numClosed,this.numClosed=this.numClosed+1|0),this.closed)]=node},RemoveCheapestOpenNode:function(){var lowestVal=2147483647,i,val;for(this.lastFoundOpened=-1,i=0;i<this.numOpened;i=i+1|0)this.opened[System.Array.index(i,this.opened)].CostSoFarAndHeuristicCost<lowestVal&&(lowestVal=this.opened[System.Array.index(i,this.opened)].CostSoFarAndHeuristicCost,this.lastFoundOpened=i);return val=this.opened[System.Array.index(this.lastFoundOpened,this.opened)],this.RemoveOpened(val),val}}});Bridge.define("BrainAI.AI.GOAP.GOAPWorld",{statics:{fields:{Storage:null},ctors:{init:function(){this.Storage=new BrainAI.AI.GOAP.GOAPStorage}},methods:{Plan:function(ap,start,goal,selectedNodes){var $t,currentNode,plan,neighbors,i,nb;for(selectedNodes===void 0&&(selectedNodes=null),BrainAI.AI.GOAP.GOAPWorld.Storage.Clear(),currentNode=new BrainAI.AI.GOAP.GOAPNode,currentNode.WorldState=start.$clone(),currentNode.ParentWorldState=start.$clone(),currentNode.CostSoFar=0,currentNode.HeuristicCost=BrainAI.AI.GOAP.GOAPWorld.CalculateHeuristic(start.$clone(),goal.$clone()),currentNode.CostSoFarAndHeuristicCost=currentNode.CostSoFar+currentNode.HeuristicCost|0,currentNode.Depth=1,BrainAI.AI.GOAP.GOAPWorld.Storage.AddToOpenList(currentNode);;){if(!BrainAI.AI.GOAP.GOAPWorld.Storage.HasOpened())return BrainAI.AI.GOAP.GOAPWorld.Storage.Clear(),null;if(currentNode=BrainAI.AI.GOAP.GOAPWorld.Storage.RemoveCheapestOpenNode(),BrainAI.AI.GOAP.GOAPWorld.Storage.AddToClosedList(currentNode),goal.equalsT(currentNode.WorldState.$clone()))return plan=BrainAI.AI.GOAP.GOAPWorld.ReconstructPlan(currentNode,selectedNodes),BrainAI.AI.GOAP.GOAPWorld.Storage.Clear(),plan;for(neighbors=ap.GetPossibleTransitions(currentNode.WorldState.$clone()),i=0;i<neighbors.Count;i=i+1|0){var cur=neighbors.getItem(i),opened=BrainAI.AI.GOAP.GOAPWorld.Storage.FindOpened(cur),closed=BrainAI.AI.GOAP.GOAPWorld.Storage.FindClosed(cur),cost=currentNode.CostSoFar+cur.CostSoFar|0;opened!=null&&cost<opened.CostSoFar&&(BrainAI.AI.GOAP.GOAPWorld.Storage.RemoveOpened(opened),opened=null);closed!=null&&cost<closed.CostSoFar&&BrainAI.AI.GOAP.GOAPWorld.Storage.RemoveClosed(closed);opened==null&&closed==null&&(nb=($t=new BrainAI.AI.GOAP.GOAPNode,$t.WorldState=cur.WorldState.$clone(),$t.CostSoFar=cost,$t.HeuristicCost=BrainAI.AI.GOAP.GOAPWorld.CalculateHeuristic(cur.WorldState.$clone(),goal.$clone()),$t.Action=cur.Action,$t.ParentWorldState=currentNode.WorldState.$clone(),$t.Parent=currentNode,$t.Depth=currentNode.Depth+1|0,$t),nb.CostSoFarAndHeuristicCost=nb.CostSoFar+nb.HeuristicCost|0,BrainAI.AI.GOAP.GOAPWorld.Storage.AddToOpenList(nb))}}},ReconstructPlan:function(goalNode,selectedNodes){for(var totalActionsInPlan=goalNode.Depth-1|0,plan=new(System.Collections.Generic.Stack$1(BrainAI.AI.GOAP.GOAPAction).$ctor2)(totalActionsInPlan),curnode=goalNode,i=0;i<=(totalActionsInPlan-1|0);i=i+1|0)selectedNodes!=null?selectedNodes.add(curnode.Clone()):null,plan.Push(curnode.Action),curnode=curnode.Parent;return selectedNodes!=null?selectedNodes.Reverse():null,plan},CalculateHeuristic:function(from,to){for(var care=to.DontCare.xor(System.Int64(-1)),diff=from.Values.and(care).xor(to.Values.and(care)),dist=0,i=0;i<BrainAI.AI.GOAP.ActionPlanner.MaxConditions;i=i+1|0)diff.and(System.Int64(1).shl(i)).ne(System.Int64(0))&&(dist=dist+1|0);return dist}}}});Bridge.define("BrainAI.AI.GOAP.WorldState",{inherits:function(){return[System.IEquatable$1(BrainAI.AI.GOAP.WorldState)]},$kind:"struct",statics:{methods:{Create:function(planner){return new BrainAI.AI.GOAP.WorldState.$ctor1(planner,System.Int64(0),System.Int64(-1))},getDefaultValue:function(){return new BrainAI.AI.GOAP.WorldState}}},fields:{Values:System.Int64(0),DontCare:System.Int64(0),Planner:null},alias:["equalsT","System$IEquatable$1$BrainAI$AI$GOAP$WorldState$equalsT"],ctors:{$ctor1:function(planner,values,dontcare){this.$initialize();this.Planner=planner;this.Values=values;this.DontCare=dontcare},ctor:function(){this.$initialize()}},methods:{Set:function(conditionName,value){return this.Set$1(this.Planner.FindConditionNameIndex(conditionName),value)},Set$1:function(conditionId,value){return this.Values=value?this.Values.or(System.Int64(1).shl(conditionId)):this.Values.and(System.Int64(1).shl(conditionId).not()),this.DontCare=this.DontCare.xor(System.Int64(1<<conditionId)),!0},equalsT:function(other){var care=this.DontCare.xor(System.Int64(-1));return this.Values.and(care).equals(other.Values.and(care))},Describe:function(planner){for(var val,set,sb=new System.Text.StringBuilder,i=0;i<BrainAI.AI.GOAP.ActionPlanner.MaxConditions;i=i+1|0)if(this.DontCare.and(System.Int64(1).shl(i)).equals(System.Int64(0))){if(val=planner.ConditionNames[System.Array.index(i,planner.ConditionNames)],val==null)continue;set=this.Values.and(System.Int64(1).shl(i)).ne(System.Int64(0));sb.getLength()>0&&sb.append(", ");sb.append(set?val.toUpperCase():val)}return sb.toString()},getHashCode:function(){return Bridge.addHash([3454478383,this.Values,this.DontCare,this.Planner])},$clone:function(to){var s=to||new BrainAI.AI.GOAP.WorldState;return s.Values=this.Values,s.DontCare=this.DontCare,s.Planner=this.Planner,s}}});Bridge.definei("BrainAI.AI.UtilityAI.Actions.IAction$1",function(T){return{$kind:"interface"}});Bridge.definei("BrainAI.AI.UtilityAI.Actions.IActionOptionAppraisal$2",function(TU,TV){return{$kind:"interface",$variance:[2,2]}});Bridge.definei("BrainAI.AI.UtilityAI.Considerations.IConsideration$1",function(T){return{$kind:"interface"}});Bridge.definei("BrainAI.AI.UtilityAI.Considerations.Appraisals.IAppraisal$1",function(T){return{$kind:"interface"}});Bridge.define("BrainAI.AI.UtilityAI.Reasoners.Reasoner$1",function(T){return{fields:{DefaultConsideration:null,Considerations:null},ctors:{init:function(){this.DefaultConsideration=new(BrainAI.AI.UtilityAI.Considerations.FixedScoreConsideration$1(T));this.Considerations=new(System.Collections.Generic.List$1(BrainAI.AI.UtilityAI.Considerations.IConsideration$1(T)).ctor)}},methods:{Select:function(context){var consideration=this.SelectBestConsideration(context);return consideration!=null?consideration["BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$Action"]:null},AddConsideration:function(consideration){return this.Considerations.add(consideration),this},SetDefaultConsideration:function(defaultConsideration){return this.DefaultConsideration=defaultConsideration,this}}}});Bridge.define("BrainAI.InfluenceMap.Fading.IFading",{$kind:"interface"});Bridge.define("BrainAI.InfluenceMap.Fading.DefaultFadings",{statics:{fields:{NoDistanceFading:null,LinearDistanceFading:null,DistanceFading:null,QuadDistanceFading:null,TripleDistanceFading:null},ctors:{init:function(){this.NoDistanceFading=new BrainAI.InfluenceMap.Fading.NoDistanceFading;this.LinearDistanceFading=new BrainAI.InfluenceMap.Fading.LinearDistanceFading(1);this.DistanceFading=new BrainAI.InfluenceMap.Fading.NPowDistanceFading(1);this.QuadDistanceFading=new BrainAI.InfluenceMap.Fading.NPowDistanceFading(2);this.TripleDistanceFading=new BrainAI.InfluenceMap.Fading.NPowDistanceFading(3)}}}});Bridge.define("BrainAI.InfluenceMap.MatrixInfluenceMap",{fields:{Map:null},ctors:{ctor:function(width,height){this.$initialize();this.Map=System.Array.create(0,null,System.Single,width,height)}},methods:{AddCharge:function(origin,fading,value){for(var y,vector,atPosition=new BrainAI.Pathfinding.Point.ctor,x=0;x<System.Array.getLength(this.Map,0);x=x+1|0)for(y=0;y<System.Array.getLength(this.Map,1);y=y+1|0)atPosition.X=x,atPosition.Y=y,vector=origin.BrainAI$InfluenceMap$VectorGenerator$IChargeOrigin$GetVector(atPosition.$clone()),this.Map.set([atPosition.X,atPosition.Y],this.Map.get([atPosition.X,atPosition.Y])+fading.BrainAI$InfluenceMap$Fading$IFading$GetPower(Math.abs(vector.X)+Math.abs(vector.Y)|0,value))}}});Bridge.define("BrainAI.InfluenceMap.VectorGenerator.IChargeOrigin",{$kind:"interface"});Bridge.define("BrainAI.InfluenceMap.VectorInfluenceMap",{fields:{Charges:null},ctors:{init:function(){this.Charges=new(System.Collections.Generic.List$1(BrainAI.InfluenceMap.VectorInfluenceMap.Charge).ctor)}},methods:{FindForceDirection:function(atPosition){var $t,result=new BrainAI.Pathfinding.Point.ctor;$t=Bridge.getEnumerator(this.Charges);try{while($t.moveNext()){var charge=$t.Current,vector=charge.Origin.BrainAI$InfluenceMap$VectorGenerator$IChargeOrigin$GetVector(atPosition.$clone()),force=charge.Fading.BrainAI$InfluenceMap$Fading$IFading$GetForce(vector.$clone(),charge.Value);result.X=result.X-force.X|0;result.Y=result.Y-force.Y|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return result.$clone()}}});Bridge.define("BrainAI.InfluenceMap.VectorInfluenceMap.Charge",{$kind:"nested class",fields:{Name:null,Value:0,Origin:null,Fading:null},methods:{toString:function(){var $t;return System.String.format("{0} at {1} with {2}",($t=this.Name,$t!=null?$t:"Charge"),this.Origin,Bridge.box(this.Value,System.Single,System.Single.format,System.Single.getHashCode))}}});Bridge.definei("BrainAI.Pathfinding.BreadthFirst.IUnweightedGraph$1",function(T){return{$kind:"interface"}});Bridge.define("BrainAI.Pathfinding.AStar.AStarPathfinder",{statics:{methods:{Search:function(T,graph,start,goal,cameFrom){var $t,foundPath=!1,costSoFar,frontier,current,next,newCost,priority;for(cameFrom.v=function(_o1){return _o1.add(start,start),_o1}(new(System.Collections.Generic.Dictionary$2(T,T))),costSoFar=new(System.Collections.Generic.Dictionary$2(T,System.Int32)),frontier=function(_o2){return _o2.add({Item1:0,Item2:start}),_o2}(new(System.Collections.Generic.List$1(System.Tuple$2(System.Int32,T)).ctor)),costSoFar.set(start,0);frontier.Count>0;){if(current=frontier.getItem(0),frontier.removeAt(0),Bridge.equals(current.Item2,goal)){foundPath=!0;break}$t=Bridge.getEnumerator(graph["BrainAI$Pathfinding$BreadthFirst$IUnweightedGraph$1$"+Bridge.getTypeAlias(T)+"$GetNeighbors"](current.Item2),T);try{while($t.moveNext())next=$t.Current,newCost=costSoFar.get(current.Item2)+graph["BrainAI$Pathfinding$Dijkstra$IWeightedGraph$1$"+Bridge.getTypeAlias(T)+"$Cost"](current.Item2,next)|0,(!costSoFar.containsKey(next)||newCost<costSoFar.get(next))&&(costSoFar.set(next,newCost),priority=newCost+graph["BrainAI$Pathfinding$AStar$IAstarGraph$1$"+Bridge.getTypeAlias(T)+"$Heuristic"](next,goal)|0,frontier.add({Item1:priority,Item2:next}),cameFrom.v.set(next,current.Item2))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}frontier.Sort$1(new(BrainAI.Pathfinding.Utils.TupleComparer$1(T)))}return foundPath},Search$1:function(T,graph,start,goal){var cameFrom={},foundPath=BrainAI.Pathfinding.AStar.AStarPathfinder.Search(T,graph,start,goal,cameFrom);return foundPath?BrainAI.Pathfinding.PathConstructor.RecontructPath(T,cameFrom.v,start,goal):null}}}});Bridge.define("BrainAI.Pathfinding.BreadthFirst.BreadthFirstPathfinder",{statics:{methods:{Search:function(T,graph,start,goal,cameFrom){var $t,foundPath=!1,frontier=new(System.Collections.Generic.Queue$1(T).ctor),current,next;for(frontier.Enqueue(start),cameFrom.v=new(System.Collections.Generic.Dictionary$2(T,T)),cameFrom.v.add(start,start);frontier.Count>0;){if(current=frontier.Dequeue(),Bridge.equals(current,goal)){foundPath=!0;break}$t=Bridge.getEnumerator(graph["BrainAI$Pathfinding$BreadthFirst$IUnweightedGraph$1$"+Bridge.getTypeAlias(T)+"$GetNeighbors"](current),T);try{while($t.moveNext())next=$t.Current,cameFrom.v.containsKey(next)||(frontier.Enqueue(next),cameFrom.v.add(next,current))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return foundPath},Search$2:function(T,graph,start,goal){var cameFrom={},foundPath=BrainAI.Pathfinding.BreadthFirst.BreadthFirstPathfinder.Search(T,graph,start,goal,cameFrom);return foundPath?BrainAI.Pathfinding.PathConstructor.RecontructPath(T,cameFrom.v,start,goal):null},Search$1:function(T,graph,start,goals,cameFrom){var $t,foundPath=!1,frontier=new(System.Collections.Generic.Queue$1(T).ctor),current,next;for(frontier.Enqueue(start),cameFrom.v=new(System.Collections.Generic.Dictionary$2(T,T)),cameFrom.v.add(start,start);frontier.Count>0;){if(current=frontier.Dequeue(),goals.contains(current)){foundPath=!0;break}$t=Bridge.getEnumerator(graph["BrainAI$Pathfinding$BreadthFirst$IUnweightedGraph$1$"+Bridge.getTypeAlias(T)+"$GetNeighbors"](current),T);try{while($t.moveNext())next=$t.Current,cameFrom.v.containsKey(next)||(frontier.Enqueue(next),cameFrom.v.add(next,current))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}return foundPath},Search$3:function(T,graph,start,goals){var $t,cameFrom={},foundPath=BrainAI.Pathfinding.BreadthFirst.BreadthFirstPathfinder.Search$1(T,graph,start,goals,cameFrom),goal;if(!foundPath)return null;$t=Bridge.getEnumerator(goals);try{while($t.moveNext())if(goal=$t.Current,cameFrom.v.containsKey(goal))return BrainAI.Pathfinding.PathConstructor.RecontructPath(T,cameFrom.v,start,goal)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return null},Search$4:function(T,graph,start,length,cameFrom){var $t,frontier=new(System.Collections.Generic.Queue$1(T).ctor),forNextLevel,current,next;for(frontier.Enqueue(start),cameFrom.v=new(System.Collections.Generic.Dictionary$2(T,T)),cameFrom.v.add(start,start),forNextLevel=1;frontier.Count>0;){current=frontier.Dequeue();$t=Bridge.getEnumerator(graph["BrainAI$Pathfinding$BreadthFirst$IUnweightedGraph$1$"+Bridge.getTypeAlias(T)+"$GetNeighbors"](current),T);try{while($t.moveNext())next=$t.Current,cameFrom.v.containsKey(next)||(frontier.Enqueue(next),cameFrom.v.add(next,current))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}if(forNextLevel=forNextLevel-1|0,forNextLevel===0&&(forNextLevel=frontier.Count,length=length-1|0,length===0))break}}}}});Bridge.define("BrainAI.Pathfinding.Dijkstra.WeightedPathfinder",{statics:{methods:{Search:function(T,graph,start,goal,cameFrom){var $t,foundPath=!1,costSoFar,frontier,current,next,newCost,priority;for(cameFrom.v=new(System.Collections.Generic.Dictionary$2(T,T)),cameFrom.v.add(start,start),costSoFar=new(System.Collections.Generic.Dictionary$2(T,System.Int32)),frontier=function(_o1){return _o1.add({Item1:0,Item2:start}),_o1}(new(System.Collections.Generic.List$1(System.Tuple$2(System.Int32,T)).ctor)),costSoFar.set(start,0);frontier.Count>0;){if(current=frontier.getItem(0),frontier.removeAt(0),Bridge.equals(current.Item2,goal)){foundPath=!0;break}$t=Bridge.getEnumerator(graph["BrainAI$Pathfinding$BreadthFirst$IUnweightedGraph$1$"+Bridge.getTypeAlias(T)+"$GetNeighbors"](current.Item2),T);try{while($t.moveNext())next=$t.Current,newCost=costSoFar.get(current.Item2)+graph["BrainAI$Pathfinding$Dijkstra$IWeightedGraph$1$"+Bridge.getTypeAlias(T)+"$Cost"](current.Item2,next)|0,(!costSoFar.containsKey(next)||newCost<costSoFar.get(next))&&(costSoFar.set(next,newCost),priority=newCost,frontier.add({Item1:priority,Item2:next}),cameFrom.v.set(next,current.Item2))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}frontier.Sort$1(new(BrainAI.Pathfinding.Utils.TupleComparer$1(T)))}return foundPath},Search$1:function(T,graph,start,goal){var cameFrom={},foundPath=BrainAI.Pathfinding.Dijkstra.WeightedPathfinder.Search(T,graph,start,goal,cameFrom);return foundPath?BrainAI.Pathfinding.PathConstructor.RecontructPath(T,cameFrom.v,start,goal):null}}}});Bridge.define("BrainAI.Pathfinding.PathConstructor",{statics:{methods:{RecontructPath:function(T,cameFrom,start,goal){var path=new(System.Collections.Generic.List$1(T).ctor),current=goal;for(path.add(goal);!Bridge.equals(current,start);)current=cameFrom.get(current),path.add(current);return path.Reverse(),path}}}});Bridge.define("BrainAI.Pathfinding.Utils.TupleComparer$1",function(T){return{inherits:[System.Collections.Generic.IComparer$1(System.Tuple$2(System.Int32,T))],alias:["compare",["System$Collections$Generic$IComparer$1$System$Tuple$2$System$Int32$"+Bridge.getTypeAlias(T)+"$compare","System$Collections$Generic$IComparer$1$compare"]],methods:{compare:function(x,y){return x.Item1-y.Item1|0}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Actions.BehaviorTreeReference$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Behavior$1(T)],fields:{childTree:null},ctors:{ctor:function(tree){this.$initialize();BrainAI.AI.BehaviorTrees.Behavior$1(T).ctor.call(this);this.childTree=tree}},methods:{Update:function(context){return this.childTree.Tick(),BrainAI.AI.BehaviorTrees.TaskStatus.Success}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Actions.ExecuteAction$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Behavior$1(T)],fields:{action:null},ctors:{ctor:function(action){this.$initialize();BrainAI.AI.BehaviorTrees.Behavior$1(T).ctor.call(this);this.action=action}},methods:{Update:function(context){return this.action(context)}}}});Bridge.define("BrainAI.AI.BehaviorTrees.BehaviorTree$1",function(T){return{inherits:[BrainAI.AI.IAITurn],fields:{context:Bridge.getDefaultValue(T),root:null},alias:["Tick","BrainAI$AI$IAITurn$Tick"],ctors:{ctor:function(context,rootNode){this.$initialize();this.context=context;this.root=rootNode}},methods:{Tick:function(){this.root.Tick(this.context)}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Composites.Composite$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Behavior$1(T)],statics:{methods:{UpdateConditionalNode:function(context,node){return Bridge.is(node,BrainAI.AI.BehaviorTrees.Decorators.ConditionalDecorator$1(T))?Bridge.as(node,BrainAI.AI.BehaviorTrees.Decorators.ConditionalDecorator$1(T)).ExecuteConditional(context,!0):node.Update(context)}}},fields:{AbortType:0,Children:null,HasLowerPriorityConditionalAbort:!1,CurrentChildIndex:0},ctors:{init:function(){this.AbortType=BrainAI.AI.BehaviorTrees.Composites.AbortTypes.None;this.Children=new(System.Collections.Generic.List$1(BrainAI.AI.BehaviorTrees.Behavior$1(T)).ctor)}},methods:{Invalidate:function(){BrainAI.AI.BehaviorTrees.Behavior$1(T).prototype.Invalidate.call(this);for(var i=0;i<this.Children.Count;i=i+1|0)this.Children.getItem(i).Invalidate()},OnStart:function(){this.HasLowerPriorityConditionalAbort=this.HasLowerPriorityConditionalAbortInChildren();this.CurrentChildIndex=0},OnEnd:function(){for(var i=0;i<this.Children.Count;i=i+1|0)this.Children.getItem(i).Invalidate()},AddChild:function(child){this.Children.add(child)},IsFirstChildConditional:function(){return Bridge.is(this.Children.getItem(0),BrainAI.AI.BehaviorTrees.Conditionals.IConditional$1(T))},HasLowerPriorityConditionalAbortInChildren:function(){for(var composite,i=0;i<this.Children.Count;i=i+1|0)if(composite=Bridge.as(this.Children.getItem(i),BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)),composite!=null&&BrainAI.AI.BehaviorTrees.Composites.AbortTypesExt.Has(composite.AbortType,BrainAI.AI.BehaviorTrees.Composites.AbortTypes.LowerPriority)&&composite.IsFirstChildConditional())return!0;return!1},UpdateLowerPriorityAbortConditional:function(context,statusCheck){for(var composite,child,status,j,i=0;i<this.CurrentChildIndex;i=i+1|0)if(composite=Bridge.as(this.Children.getItem(i),BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)),composite!=null&&BrainAI.AI.BehaviorTrees.Composites.AbortTypesExt.Has(composite.AbortType,BrainAI.AI.BehaviorTrees.Composites.AbortTypes.LowerPriority)&&(child=composite.Children.getItem(0),status=BrainAI.AI.BehaviorTrees.Composites.Composite$1(T).UpdateConditionalNode(context,child),status!==statusCheck)){for(this.CurrentChildIndex=i,j=i;j<this.Children.Count;j=j+1|0)this.Children.getItem(j).Invalidate();break}},UpdateSelfAbortConditional:function(context,statusCheck){for(var child,status,j,i=0;i<this.CurrentChildIndex;i=i+1|0)if((child=this.Children.getItem(i),Bridge.is(child,BrainAI.AI.BehaviorTrees.Conditionals.IConditional$1(T)))&&(status=BrainAI.AI.BehaviorTrees.Composites.Composite$1(T).UpdateConditionalNode(context,child),status!==statusCheck)){for(this.CurrentChildIndex=i,j=i;j<this.Children.Count;j=j+1|0)this.Children.getItem(j).Invalidate();break}}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.Decorator$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Behavior$1(T)],fields:{Child:null},methods:{Invalidate:function(){BrainAI.AI.BehaviorTrees.Behavior$1(T).prototype.Invalidate.call(this);this.Child.Invalidate()}}}});Bridge.define("BrainAI.AI.FSM.StateMachine$1",function(T){return{inherits:[BrainAI.AI.IAITurn],fields:{Context:Bridge.getDefaultValue(T),states:null},events:{OnStateChanged:null},props:{PreviousState:null,CurrentState:null,NextState:null},alias:["Tick","BrainAI$AI$IAITurn$Tick"],ctors:{init:function(){this.states=new(System.Collections.Generic.Dictionary$2(Function,BrainAI.AI.FSM.State$1(T)))},ctor:function(context,initialState){this.$initialize();this.Context=context;this.AddState(initialState);this.NextState=initialState}},methods:{AddState:function(state){state.SetMachineAndContext(this,this.Context);this.states.set(Bridge.getType(state),state)},Tick:function(){var $t;this.NextState!=null&&(($t=this.CurrentState)!=null?$t.End():null,this.PreviousState=this.CurrentState,this.CurrentState=this.NextState,this.NextState=null,this.CurrentState.Begin(),Bridge.staticEquals(this.OnStateChanged,null)?null:this.OnStateChanged());this.CurrentState.Update()},ChangeState:function(TR){var newType=TR;Bridge.referenceEquals(Bridge.getType(this.CurrentState),newType)||(this.NextState=this.states.get(newType))}}}});Bridge.define("BrainAI.AI.GOAP.GOAPAction$1",function(T){return{inherits:[BrainAI.AI.GOAP.GOAPAction],fields:{Context:Bridge.getDefaultValue(T)},ctors:{ctor:function(context,name){this.$initialize();BrainAI.AI.GOAP.GOAPAction.$ctor1.call(this,name);this.Context=context;this.Name=name},$ctor1:function(context,name,cost){BrainAI.AI.GOAP.GOAPAction$1(T).ctor.call(this,context,name);this.Cost=cost}},methods:{Execute:function(){}}}});Bridge.define("BrainAI.AI.UtilityAI.Actions.ActionExecutor$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Actions.IAction$1(T)],fields:{action:null},alias:["Execute","BrainAI$AI$UtilityAI$Actions$IAction$1$"+Bridge.getTypeAlias(T)+"$Execute"],ctors:{ctor:function(action){this.$initialize();this.action=action}},methods:{Execute:function(context){this.action(context)}}}});Bridge.define("BrainAI.AI.UtilityAI.Actions.CompositeAction$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Actions.IAction$1(T)],fields:{Actions:null},alias:["Execute","BrainAI$AI$UtilityAI$Actions$IAction$1$"+Bridge.getTypeAlias(T)+"$Execute"],ctors:{init:function(){this.Actions=new(System.Collections.Generic.List$1(BrainAI.AI.UtilityAI.Actions.IAction$1(T)).ctor)}},methods:{Execute:function(context){for(var i=0;i<this.Actions.Count;i=i+1|0)this.Actions.getItem(i)["BrainAI$AI$UtilityAI$Actions$IAction$1$"+Bridge.getTypeAlias(T)+"$Execute"](context)}}}});Bridge.define("BrainAI.AI.UtilityAI.Actions.ReasonerAction$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Actions.IAction$1(T)],fields:{reasoner:null},alias:["BrainAI$AI$UtilityAI$Actions$IAction$1$Execute","BrainAI$AI$UtilityAI$Actions$IAction$1$"+Bridge.getTypeAlias(T)+"$Execute"],ctors:{ctor:function(reasoner){this.$initialize();this.reasoner=reasoner}},methods:{BrainAI$AI$UtilityAI$Actions$IAction$1$Execute:function(context){var action=this.reasoner.Select(context);action!=null?action["BrainAI$AI$UtilityAI$Actions$IAction$1$"+Bridge.getTypeAlias(T)+"$Execute"](context):null}}}});Bridge.define("BrainAI.AI.UtilityAI.ActionWithOptions$2",function(TU,TV){return{inherits:[BrainAI.AI.UtilityAI.Actions.IAction$1(TU)],fields:{Appraisals:null},ctors:{init:function(){this.Appraisals=new(System.Collections.Generic.List$1(BrainAI.AI.UtilityAI.Actions.IActionOptionAppraisal$2(TU,TV)).ctor)}},methods:{GetBestOption:function(context,options){for(var option,current,j,result=Bridge.getDefaultValue(TV),bestScore=-340282347e30,i=0;i<options.Count;i=i+1|0){for(option=options.getItem(i),current=0,j=0;j<this.Appraisals.Count;j=j+1|0)current+=this.Appraisals.getItem(j)[Bridge.geti(this.Appraisals.getItem(j),"BrainAI$AI$UtilityAI$Actions$IActionOptionAppraisal$2$"+Bridge.getTypeAlias(TU)+"$"+Bridge.getTypeAlias(TV)+"$GetScore","BrainAI$AI$UtilityAI$Actions$IActionOptionAppraisal$2$GetScore")](context,option);current>bestScore&&(bestScore=current,result=option)}return result}}}});Bridge.define("BrainAI.AI.UtilityAI.Considerations.AllOrNothingConsideration$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Considerations.IConsideration$1(T)],fields:{Threshold:0,Appraisals:null},props:{Action:null},alias:["Action","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$Action","GetScore","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"],ctors:{init:function(){this.Appraisals=new(System.Collections.Generic.List$1(BrainAI.AI.UtilityAI.Considerations.Appraisals.IAppraisal$1(T)).ctor)},ctor:function(threshold){threshold===void 0&&(threshold=0);this.$initialize();this.Threshold=threshold}},methods:{GetScore:function(context){for(var score,sum=0,i=0;i<this.Appraisals.Count;i=i+1|0){if(score=this.Appraisals.getItem(i)["BrainAI$AI$UtilityAI$Considerations$Appraisals$IAppraisal$1$"+Bridge.getTypeAlias(T)+"$GetScore"](context),score<this.Threshold)return 0;sum+=score}return sum}}}});Bridge.define("BrainAI.AI.UtilityAI.Considerations.Appraisals.ActionAppraisal$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Considerations.Appraisals.IAppraisal$1(T)],fields:{appraisalAction:null},alias:["GetScore","BrainAI$AI$UtilityAI$Considerations$Appraisals$IAppraisal$1$"+Bridge.getTypeAlias(T)+"$GetScore"],ctors:{ctor:function(appraisalAction){this.$initialize();this.appraisalAction=appraisalAction}},methods:{GetScore:function(context){return this.appraisalAction(context)}}}});Bridge.define("BrainAI.AI.UtilityAI.Considerations.FixedScoreConsideration$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Considerations.IConsideration$1(T)],fields:{Score:0},props:{Action:null},alias:["Action","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$Action","GetScore","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"],ctors:{ctor:function(score){score===void 0&&(score=1);this.$initialize();this.Score=score}},methods:{GetScore:function(context){return this.Score}}}});Bridge.define("BrainAI.AI.UtilityAI.Considerations.SumOfChildrenConsideration$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Considerations.IConsideration$1(T)],fields:{Appraisals:null},props:{Action:null},alias:["Action","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$Action","GetScore","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"],ctors:{init:function(){this.Appraisals=new(System.Collections.Generic.List$1(BrainAI.AI.UtilityAI.Considerations.Appraisals.IAppraisal$1(T)).ctor)}},methods:{GetScore:function(context){return System.Linq.Enumerable.from(this.Appraisals).sum(function(t){return t["BrainAI$AI$UtilityAI$Considerations$Appraisals$IAppraisal$1$"+Bridge.getTypeAlias(T)+"$GetScore"](context)})}}}});Bridge.define("BrainAI.AI.UtilityAI.Considerations.ThresholdConsideration$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Considerations.IConsideration$1(T)],fields:{Threshold:0,Appraisals:null},props:{Action:null},alias:["Action","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$Action","GetScore","BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"],ctors:{init:function(){this.Appraisals=new(System.Collections.Generic.List$1(BrainAI.AI.UtilityAI.Considerations.Appraisals.IAppraisal$1(T)).ctor)},ctor:function(threshold){this.$initialize();this.Threshold=threshold}},methods:{GetScore:function(context){for(var score,sum=0,i=0;i<this.Appraisals.Count;i=i+1|0){if(score=this.Appraisals.getItem(i)["BrainAI$AI$UtilityAI$Considerations$Appraisals$IAppraisal$1$"+Bridge.getTypeAlias(T)+"$GetScore"](context),score<this.Threshold)return sum;sum+=score}return sum}}}});Bridge.define("BrainAI.AI.UtilityAI.Reasoners.FirstScoreReasoner$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Reasoners.Reasoner$1(T)],methods:{SelectBestConsideration:function(context){for(var defaultScore=this.DefaultConsideration["BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"](context),i=0;i<this.Considerations.Count;i=i+1|0)if(this.Considerations.getItem(i)["BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"](context)>=defaultScore)return this.Considerations.getItem(i);return this.DefaultConsideration}}}});Bridge.define("BrainAI.AI.UtilityAI.Reasoners.HighestScoreReasoner$1",function(T){return{inherits:[BrainAI.AI.UtilityAI.Reasoners.Reasoner$1(T)],methods:{SelectBestConsideration:function(context){for(var score,highestScore=this.DefaultConsideration["BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"](context),consideration=null,i=0;i<this.Considerations.Count;i=i+1|0)score=this.Considerations.getItem(i)["BrainAI$AI$UtilityAI$Considerations$IConsideration$1$"+Bridge.getTypeAlias(T)+"$GetScore"](context),score>highestScore&&(highestScore=score,consideration=this.Considerations.getItem(i));return consideration==null?this.DefaultConsideration:consideration}}}});Bridge.define("BrainAI.AI.UtilityAI.UtilityAI$1",function(T){return{inherits:[BrainAI.AI.IAITurn],fields:{context:Bridge.getDefaultValue(T),rootReasoner:null},alias:["Tick","BrainAI$AI$IAITurn$Tick"],ctors:{ctor:function(context,rootSelector){this.$initialize();this.rootReasoner=rootSelector;this.context=context}},methods:{Tick:function(){var action=this.rootReasoner.Select(this.context);action!=null?action["BrainAI$AI$UtilityAI$Actions$IAction$1$"+Bridge.getTypeAlias(T)+"$Execute"](this.context):null}}}});Bridge.define("BrainAI.InfluenceMap.Fading.ConstantInRadiusFading",{inherits:[BrainAI.InfluenceMap.Fading.IFading],fields:{radius:0},alias:["GetForce","BrainAI$InfluenceMap$Fading$IFading$GetForce","GetPower","BrainAI$InfluenceMap$Fading$IFading$GetPower"],ctors:{ctor:function(radius){this.$initialize();this.radius=radius}},methods:{GetForce:function(vector,chargeValue){var vectorX=vector.X,vectorY=vector.Y,quadDist=Bridge.Int.mul(vectorX,vectorX)+Bridge.Int.mul(vectorY,vectorY)|0,dist=Math.sqrt(quadDist),affectPower=this.GetPower(dist,chargeValue);return new BrainAI.Pathfinding.Point.$ctor1(Bridge.Int.clip32(vector.X/dist*affectPower),Bridge.Int.clip32(vector.Y/dist*affectPower))},GetPower:function(distance,chargeValue){return distance>this.radius?0:chargeValue}}});Bridge.define("BrainAI.InfluenceMap.Fading.LinearDistanceFading",{inherits:[BrainAI.InfluenceMap.Fading.IFading],fields:{distanceEffectValue:0},alias:["GetForce","BrainAI$InfluenceMap$Fading$IFading$GetForce","GetPower","BrainAI$InfluenceMap$Fading$IFading$GetPower"],ctors:{ctor:function(distanceEffectValue){this.$initialize();this.distanceEffectValue=distanceEffectValue}},methods:{GetForce:function(vector,chargeValue){var vectorX=vector.X,vectorY=vector.Y,quadDist=Bridge.Int.mul(vectorX,vectorX)+Bridge.Int.mul(vectorY,vectorY)|0,dist=Math.sqrt(quadDist),affectPower=this.GetPower(dist,chargeValue);return new BrainAI.Pathfinding.Point.$ctor1(Bridge.Int.clip32(vectorX/dist*affectPower),Bridge.Int.clip32(vectorY/dist*affectPower))},GetPower:function(distance,chargeValue){return chargeValue>0?chargeValue-Math.min(chargeValue,distance*this.distanceEffectValue):chargeValue+Math.min(-chargeValue,distance*this.distanceEffectValue)}}});Bridge.define("BrainAI.InfluenceMap.Fading.NoDistanceFading",{inherits:[BrainAI.InfluenceMap.Fading.IFading],alias:["GetForce","BrainAI$InfluenceMap$Fading$IFading$GetForce","GetPower","BrainAI$InfluenceMap$Fading$IFading$GetPower"],methods:{GetForce:function(vector,chargeValue){var vectorX=vector.X,vectorY=vector.Y,quadDist=Bridge.Int.mul(vectorX,vectorX)+Bridge.Int.mul(vectorY,vectorY)|0,dist=Math.sqrt(quadDist),affectPower=this.GetPower(dist,chargeValue);return new BrainAI.Pathfinding.Point.$ctor1(Bridge.Int.clip32(vectorX/dist*affectPower),Bridge.Int.clip32(vectorY/dist*affectPower))},GetPower:function(distance,chargeValue){return chargeValue}}});Bridge.define("BrainAI.InfluenceMap.Fading.NPowDistanceFading",{inherits:[BrainAI.InfluenceMap.Fading.IFading],fields:{pow:0},alias:["GetForce","BrainAI$InfluenceMap$Fading$IFading$GetForce","GetPower","BrainAI$InfluenceMap$Fading$IFading$GetPower"],ctors:{ctor:function(pow){this.$initialize();this.pow=pow}},methods:{GetForce:function(vector,chargeValue){var vectorX=vector.X,vectorY=vector.Y,quadDist=Bridge.Int.mul(vectorX,vectorX)+Bridge.Int.mul(vectorY,vectorY)|0,dist=Math.sqrt(quadDist),affectPower=this.GetPower(dist,chargeValue);return new BrainAI.Pathfinding.Point.$ctor1(Bridge.Int.clip32(vectorX/dist*affectPower),Bridge.Int.clip32(vectorY/dist*affectPower))},GetPower:function(distance,chargeValue){return chargeValue/Math.pow(distance,this.pow)}}});Bridge.define("BrainAI.InfluenceMap.VectorGenerator.LineChargeOrigin",{inherits:[BrainAI.InfluenceMap.VectorGenerator.IChargeOrigin],fields:{V:null,VP:null},props:{P1:null,P2:null},alias:["GetVector","BrainAI$InfluenceMap$VectorGenerator$IChargeOrigin$GetVector"],ctors:{init:function(){this.V=new BrainAI.Pathfinding.Point;this.VP=new BrainAI.Pathfinding.Point;this.P1=new BrainAI.Pathfinding.Point;this.P2=new BrainAI.Pathfinding.Point},ctor:function(p1,p2){this.$initialize();this.P1=p1.$clone();this.P2=p2.$clone();this.V=new BrainAI.Pathfinding.Point.$ctor1(p2.X-p1.X|0,p2.Y-p1.Y|0);this.VP=new BrainAI.Pathfinding.Point.$ctor1(this.V.$clone().Y,-this.V.$clone().X|0)}},methods:{GetVector:function(toPoint){var x1=this.P1.X,y1=this.P1.Y,x2=this.P2.X,y2=this.P2.Y,x3=toPoint.X,y3=toPoint.Y,x4=toPoint.X+this.VP.$clone().X|0,y4=toPoint.Y+this.VP.$clone().Y|0,length=Bridge.Int.mul(x1-x2|0,y3-y4|0)-Bridge.Int.mul(y1-y2|0,x3-x4|0)|0,x,y;return Math.abs(length)<1e-6?(x=this.P1.X,y=this.P1.Y):(x=Bridge.Int.div(Bridge.Int.mul(Bridge.Int.mul(x1,y2)-Bridge.Int.mul(y1,x2)|0,x3-x4|0)-Bridge.Int.mul(x1-x2|0,Bridge.Int.mul(x3,y4)-Bridge.Int.mul(y3,x4)|0)|0,length)|0,y=Bridge.Int.div(Bridge.Int.mul(Bridge.Int.mul(x1,y2)-Bridge.Int.mul(y1,x2)|0,y3-y4|0)-Bridge.Int.mul(y1-y2|0,Bridge.Int.mul(x3,y4)-Bridge.Int.mul(y3,x4)|0)|0,length)|0),new BrainAI.Pathfinding.Point.$ctor1(toPoint.X-Bridge.Int.clip32(x)|0,toPoint.Y-Bridge.Int.clip32(y)|0)},toString:function(){return System.String.format("Line ({0} - {1})",this.P1.$clone(),this.P2.$clone())}}});Bridge.define("BrainAI.InfluenceMap.VectorGenerator.PointChargeOrigin",{inherits:[BrainAI.InfluenceMap.VectorGenerator.IChargeOrigin],props:{FromPoint:null},alias:["GetVector","BrainAI$InfluenceMap$VectorGenerator$IChargeOrigin$GetVector"],ctors:{init:function(){this.FromPoint=new BrainAI.Pathfinding.Point},ctor:function(fromPoint){this.$initialize();this.FromPoint=fromPoint.$clone()}},methods:{GetVector:function(toPoint){var vectorX=toPoint.X-this.FromPoint.X|0,vectorY=toPoint.Y-this.FromPoint.Y|0;return new BrainAI.Pathfinding.Point.$ctor1(vectorX,vectorY)},toString:function(){return System.String.format("Point {0}",[this.FromPoint.$clone()])}}});Bridge.definei("BrainAI.Pathfinding.Dijkstra.IWeightedGraph$1",function(T){return{inherits:[BrainAI.Pathfinding.BreadthFirst.IUnweightedGraph$1(T)],$kind:"interface"}});Bridge.define("BrainAI.Pathfinding.Point",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new BrainAI.Pathfinding.Point}}},props:{X:0,Y:0},ctors:{$ctor1:function(x,y){this.$initialize();this.X=x;this.Y=y},ctor:function(){this.$initialize()}},methods:{toString:function(){return System.String.format("{0}: {1}, {2}: {3}","X",Bridge.box(this.X,System.Int32),"Y",Bridge.box(this.Y,System.Int32))},getHashCode:function(){return Bridge.addHash([1852403652,this.X,this.Y])},equals:function(o){return Bridge.is(o,BrainAI.Pathfinding.Point)?Bridge.equals(this.X,o.X)&&Bridge.equals(this.Y,o.Y):!1},$clone:function(to){var s=to||new BrainAI.Pathfinding.Point;return s.X=this.X,s.Y=this.Y,s}}});Bridge.define("BrainAI.Pathfinding.BreadthFirst.UnweightedGraph$1",function(T){return{inherits:[BrainAI.Pathfinding.BreadthFirst.IUnweightedGraph$1(T)],fields:{Edges:null},alias:["GetNeighbors","BrainAI$Pathfinding$BreadthFirst$IUnweightedGraph$1$"+Bridge.getTypeAlias(T)+"$GetNeighbors"],ctors:{init:function(){this.Edges=new(System.Collections.Generic.Dictionary$2(T,System.Array.type(T)))}},methods:{GetNeighbors:function(node){return this.Edges.get(node)}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Composites.ParallelSelector$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)],methods:{Update:function(context){for(var child,didAllFail=!0,i=0;i<this.Children.Count;i=i+1|0){if(child=this.Children.getItem(i),child.Tick(context),child.Status===BrainAI.AI.BehaviorTrees.TaskStatus.Success)return BrainAI.AI.BehaviorTrees.TaskStatus.Success;child.Status!==BrainAI.AI.BehaviorTrees.TaskStatus.Failure&&(didAllFail=!1)}return didAllFail?BrainAI.AI.BehaviorTrees.TaskStatus.Failure:BrainAI.AI.BehaviorTrees.TaskStatus.Running}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Composites.ParallelSequence$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)],methods:{Update:function(context){for(var child,didAllSucceed=!0,i=0;i<this.Children.Count;i=i+1|0)if(child=this.Children.getItem(i),child.Tick(context),child.Status===BrainAI.AI.BehaviorTrees.TaskStatus.Failure)return BrainAI.AI.BehaviorTrees.TaskStatus.Failure;else child.Status!==BrainAI.AI.BehaviorTrees.TaskStatus.Success&&(didAllSucceed=!1);return didAllSucceed?BrainAI.AI.BehaviorTrees.TaskStatus.Success:BrainAI.AI.BehaviorTrees.TaskStatus.Running}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Composites.Selector$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)],ctors:{ctor:function(abortType){abortType===void 0&&(abortType=0);this.$initialize();BrainAI.AI.BehaviorTrees.Composites.Composite$1(T).ctor.call(this);this.AbortType=abortType}},methods:{Update:function(context){this.CurrentChildIndex!==0&&this.HandleConditionalAborts(context);var current=this.Children.getItem(this.CurrentChildIndex),status=current.Tick(context);return status!==BrainAI.AI.BehaviorTrees.TaskStatus.Failure?status:(this.CurrentChildIndex=this.CurrentChildIndex+1|0,this.CurrentChildIndex===this.Children.Count)?(this.CurrentChildIndex=0,BrainAI.AI.BehaviorTrees.TaskStatus.Failure):BrainAI.AI.BehaviorTrees.TaskStatus.Running},HandleConditionalAborts:function(context){this.HasLowerPriorityConditionalAbort&&this.UpdateLowerPriorityAbortConditional(context,BrainAI.AI.BehaviorTrees.TaskStatus.Failure);BrainAI.AI.BehaviorTrees.Composites.AbortTypesExt.Has(this.AbortType,BrainAI.AI.BehaviorTrees.Composites.AbortTypes.Self)&&this.UpdateSelfAbortConditional(context,BrainAI.AI.BehaviorTrees.TaskStatus.Failure)}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Composites.Sequence$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Composites.Composite$1(T)],ctors:{ctor:function(abortType){abortType===void 0&&(abortType=0);this.$initialize();BrainAI.AI.BehaviorTrees.Composites.Composite$1(T).ctor.call(this);this.AbortType=abortType}},methods:{Update:function(context){this.CurrentChildIndex!==0&&this.HandleConditionalAborts(context);var current=this.Children.getItem(this.CurrentChildIndex),status=current.Tick(context);return status!==BrainAI.AI.BehaviorTrees.TaskStatus.Success?status:(this.CurrentChildIndex=this.CurrentChildIndex+1|0,this.CurrentChildIndex===this.Children.Count)?(this.CurrentChildIndex=0,BrainAI.AI.BehaviorTrees.TaskStatus.Success):BrainAI.AI.BehaviorTrees.TaskStatus.Running},HandleConditionalAborts:function(context){this.HasLowerPriorityConditionalAbort&&this.UpdateLowerPriorityAbortConditional(context,BrainAI.AI.BehaviorTrees.TaskStatus.Success);BrainAI.AI.BehaviorTrees.Composites.AbortTypesExt.Has(this.AbortType,BrainAI.AI.BehaviorTrees.Composites.AbortTypes.Self)&&this.UpdateSelfAbortConditional(context,BrainAI.AI.BehaviorTrees.TaskStatus.Success)}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Conditionals.ExecuteActionConditional$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Actions.ExecuteAction$1(T),BrainAI.AI.BehaviorTrees.Conditionals.IConditional$1(T)],alias:["Update",["BrainAI$AI$BehaviorTrees$Conditionals$IConditional$1$"+Bridge.getTypeAlias(T)+"$Update","BrainAI$AI$BehaviorTrees$Conditionals$IConditional$1$Update"]],ctors:{ctor:function(action){this.$initialize();BrainAI.AI.BehaviorTrees.Actions.ExecuteAction$1(T).ctor.call(this,action)}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.AlwaysFail$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T)],methods:{Update:function(context){var status=this.Child.Update(context);return status===BrainAI.AI.BehaviorTrees.TaskStatus.Running?BrainAI.AI.BehaviorTrees.TaskStatus.Running:BrainAI.AI.BehaviorTrees.TaskStatus.Failure}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.AlwaysSucceed$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T)],methods:{Update:function(context){var status=this.Child.Update(context);return status===BrainAI.AI.BehaviorTrees.TaskStatus.Running?BrainAI.AI.BehaviorTrees.TaskStatus.Running:BrainAI.AI.BehaviorTrees.TaskStatus.Success}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.ConditionalDecorator$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T),BrainAI.AI.BehaviorTrees.Conditionals.IConditional$1(T)],fields:{conditional:null,shouldReevaluate:!1,conditionalStatus:0},alias:["Update",["BrainAI$AI$BehaviorTrees$Conditionals$IConditional$1$"+Bridge.getTypeAlias(T)+"$Update","BrainAI$AI$BehaviorTrees$Conditionals$IConditional$1$Update"]],ctors:{$ctor1:function(conditional,shouldReevalute){this.$initialize();BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T).ctor.call(this);this.conditional=conditional;this.shouldReevaluate=shouldReevalute},ctor:function(conditional){BrainAI.AI.BehaviorTrees.Decorators.ConditionalDecorator$1(T).$ctor1.call(this,conditional,!0)}},methods:{Invalidate:function(){BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T).prototype.Invalidate.call(this);this.conditionalStatus=BrainAI.AI.BehaviorTrees.TaskStatus.Invalid},OnStart:function(){this.conditionalStatus=BrainAI.AI.BehaviorTrees.TaskStatus.Invalid},Update:function(context){return(this.conditionalStatus=this.ExecuteConditional(context),this.conditionalStatus===BrainAI.AI.BehaviorTrees.TaskStatus.Success)?this.Child.Tick(context):BrainAI.AI.BehaviorTrees.TaskStatus.Failure},ExecuteConditional:function(context,forceUpdate){return forceUpdate===void 0&&(forceUpdate=!1),(forceUpdate||this.shouldReevaluate||this.conditionalStatus===BrainAI.AI.BehaviorTrees.TaskStatus.Invalid)&&(this.conditionalStatus=this.conditional[Bridge.geti(this.conditional,"BrainAI$AI$BehaviorTrees$Conditionals$IConditional$1$"+Bridge.getTypeAlias(T)+"$Update","BrainAI$AI$BehaviorTrees$Conditionals$IConditional$1$Update")](context)),this.conditionalStatus}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.Inverter$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T)],methods:{Update:function(context){var status=this.Child.Tick(context);return status===BrainAI.AI.BehaviorTrees.TaskStatus.Success?BrainAI.AI.BehaviorTrees.TaskStatus.Failure:status===BrainAI.AI.BehaviorTrees.TaskStatus.Failure?BrainAI.AI.BehaviorTrees.TaskStatus.Success:BrainAI.AI.BehaviorTrees.TaskStatus.Running}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.Repeater$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T)],fields:{Count:0,RepeatForever:!1,EndOnFailure:!1,iterationCount:0},ctors:{$ctor1:function(count,endOnFailure){endOnFailure===void 0&&(endOnFailure=!1);this.$initialize();BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T).ctor.call(this);this.Count=count;this.EndOnFailure=endOnFailure},ctor:function(repeatForever,endOnFailure){endOnFailure===void 0&&(endOnFailure=!1);this.$initialize();BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T).ctor.call(this);this.RepeatForever=repeatForever;this.EndOnFailure=endOnFailure}},methods:{OnStart:function(){this.iterationCount=0},Update:function(context){if(!this.RepeatForever&&this.iterationCount===this.Count)return BrainAI.AI.BehaviorTrees.TaskStatus.Success;var status=this.Child.Tick(context);return(this.iterationCount=this.iterationCount+1|0,this.EndOnFailure&&status===BrainAI.AI.BehaviorTrees.TaskStatus.Failure)?BrainAI.AI.BehaviorTrees.TaskStatus.Success:!this.RepeatForever&&this.iterationCount===this.Count?BrainAI.AI.BehaviorTrees.TaskStatus.Success:BrainAI.AI.BehaviorTrees.TaskStatus.Running}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.UntilFail$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T)],methods:{Update:function(context){var status=this.Child.Update(context);return status!==BrainAI.AI.BehaviorTrees.TaskStatus.Failure?BrainAI.AI.BehaviorTrees.TaskStatus.Running:BrainAI.AI.BehaviorTrees.TaskStatus.Success}}}});Bridge.define("BrainAI.AI.BehaviorTrees.Decorators.UntilSuccess$1",function(T){return{inherits:[BrainAI.AI.BehaviorTrees.Decorators.Decorator$1(T)],methods:{Update:function(context){var status=this.Child.Tick(context);return status!==BrainAI.AI.BehaviorTrees.TaskStatus.Success?BrainAI.AI.BehaviorTrees.TaskStatus.Running:BrainAI.AI.BehaviorTrees.TaskStatus.Success}}}});Bridge.definei("BrainAI.Pathfinding.AStar.IAstarGraph$1",function(T){return{inherits:[BrainAI.Pathfinding.Dijkstra.IWeightedGraph$1(T)],$kind:"interface"}});Bridge.define("BrainAI.Pathfinding.BreadthFirst.UnweightedGridGraph",{inherits:[BrainAI.Pathfinding.BreadthFirst.IUnweightedGraph$1(BrainAI.Pathfinding.Point)],statics:{fields:{CardinalDirs:null,CompassDirs:null},ctors:{init:function(){this.CardinalDirs=System.Array.init([new BrainAI.Pathfinding.Point.$ctor1(1,0),new BrainAI.Pathfinding.Point.$ctor1(0,-1),new BrainAI.Pathfinding.Point.$ctor1(-1,0),new BrainAI.Pathfinding.Point.$ctor1(0,1)],BrainAI.Pathfinding.Point);this.CompassDirs=System.Array.init([new BrainAI.Pathfinding.Point.$ctor1(1,0),new BrainAI.Pathfinding.Point.$ctor1(1,-1),new BrainAI.Pathfinding.Point.$ctor1(0,-1),new BrainAI.Pathfinding.Point.$ctor1(-1,-1),new BrainAI.Pathfinding.Point.$ctor1(-1,0),new BrainAI.Pathfinding.Point.$ctor1(-1,1),new BrainAI.Pathfinding.Point.$ctor1(0,1),new BrainAI.Pathfinding.Point.$ctor1(1,1)],BrainAI.Pathfinding.Point)}}},fields:{Walls:null,Width:0,Height:0,dirs:null,neighbors:null},ctors:{init:function(){this.Walls=new(System.Collections.Generic.HashSet$1(BrainAI.Pathfinding.Point).ctor);this.neighbors=new(System.Collections.Generic.List$1(BrainAI.Pathfinding.Point).$ctor2)(4)},ctor:function(width,height,allowDiagonalSearch){allowDiagonalSearch===void 0&&(allowDiagonalSearch=!1);this.$initialize();this.Width=width;this.Height=height;this.dirs=allowDiagonalSearch?BrainAI.Pathfinding.BreadthFirst.UnweightedGridGraph.CompassDirs:BrainAI.Pathfinding.BreadthFirst.UnweightedGridGraph.CardinalDirs}},methods:{IsNodeInBounds:function(node){return 0<=node.X&&node.X<this.Width&&0<=node.Y&&node.Y<this.Height},IsNodePassable:function(node){return!this.Walls.contains(node.$clone())},BrainAI$Pathfinding$BreadthFirst$IUnweightedGraph$1$BrainAI$Pathfinding$Point$GetNeighbors:function(node){var $t,dir,next;this.neighbors.clear();$t=Bridge.getEnumerator(this.dirs);try{while($t.moveNext())dir=$t.Current.$clone(),next=new BrainAI.Pathfinding.Point.$ctor1(node.X+dir.X|0,node.Y+dir.Y|0),this.IsNodeInBounds(next.$clone())&&this.IsNodePassable(next.$clone())&&this.neighbors.add(next.$clone())}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return this.neighbors}}});Bridge.define("BrainAI.Pathfinding.Dijkstra.WeightedGridGraph",{inherits:[BrainAI.Pathfinding.BreadthFirst.UnweightedGridGraph,BrainAI.Pathfinding.Dijkstra.IWeightedGraph$1(BrainAI.Pathfinding.Point)],fields:{WeightedNodes:null,DefaultWeight:0,WeightedNodeWeight:0},alias:["Cost","BrainAI$Pathfinding$Dijkstra$IWeightedGraph$1$BrainAI$Pathfinding$Point$Cost"],ctors:{init:function(){this.WeightedNodes=new(System.Collections.Generic.HashSet$1(BrainAI.Pathfinding.Point).ctor);this.DefaultWeight=1;this.WeightedNodeWeight=5},ctor:function(width,height,allowDiagonalSearch){allowDiagonalSearch===void 0&&(allowDiagonalSearch=!1);this.$initialize();BrainAI.Pathfinding.BreadthFirst.UnweightedGridGraph.ctor.call(this,width,height,allowDiagonalSearch)}},methods:{Cost:function(from,to){return this.WeightedNodes.contains(to.$clone())?this.WeightedNodeWeight:this.DefaultWeight}}});Bridge.define("BrainAI.Pathfinding.AStar.AstarGridGraph",{inherits:[BrainAI.Pathfinding.Dijkstra.WeightedGridGraph,BrainAI.Pathfinding.AStar.IAstarGraph$1(BrainAI.Pathfinding.Point)],alias:["Heuristic","BrainAI$Pathfinding$AStar$IAstarGraph$1$BrainAI$Pathfinding$Point$Heuristic"],ctors:{ctor:function(width,height,allowDiagonalSearch){allowDiagonalSearch===void 0&&(allowDiagonalSearch=!1);this.$initialize();BrainAI.Pathfinding.Dijkstra.WeightedGridGraph.ctor.call(this,width,height,allowDiagonalSearch)}},methods:{Heuristic:function(node,goal){return Math.abs(node.X-goal.X|0)+Math.abs(node.Y-goal.Y|0)|0}}})});