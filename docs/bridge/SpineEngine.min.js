Bridge.assembly("SpineEngine",function($asm,globals){"use strict";Bridge.define("SpineEngine.ContentPaths",{statics:{fields:{spineEngineContent:null},ctors:{init:function(){this.spineEngineContent="SpineEngineContent"}}}});Bridge.define("SpineEngine.ContentPaths.SpineEngine",{$kind:"nested class"});Bridge.define("SpineEngine.ContentPaths.SpineEngine.Effects",{$kind:"nested class",statics:{fields:{spriteEffect:null},ctors:{init:function(){this.spriteEffect="SpineEngine/effects/SpriteEffect"}}}});Bridge.define("SpineEngine.ContentPaths.SpineEngine.Textures",{$kind:"nested class",statics:{fields:{pixel:null},ctors:{init:function(){this.pixel="SpineEngine/textures/pixel"}}}});Bridge.define("SpineEngine.Core",{inherits:[Microsoft.Xna.Framework.Game],statics:{fields:{Instance:null}},fields:{globalManagerList:null,graphicsDeviceChangeTimer:null,nextScene:null,scene:null,PauseOnFocusLost:!1,SceneTransition:null},props:{Screen:null,Scene:{get:function(){return this.scene},set:function(value){this.nextScene=value}}},ctors:{init:function(){this.globalManagerList=new SpineEngine.GlobalManagers.GlobalManagerList;this.PauseOnFocusLost=!0},ctor:function(width,height,isFullScreen,windowTitle,contentDirectory){width===void 0&&(width=1280);height===void 0&&(height=720);isFullScreen===void 0&&(isFullScreen=!1);windowTitle===void 0&&(windowTitle="SpineEngine");contentDirectory===void 0&&(contentDirectory="Content");var $t;this.$initialize();Microsoft.Xna.Framework.Game.ctor.call(this);SpineEngine.Core.Instance=this;this.Screen=($t=new SpineEngine.XnaManagers.GlobalGraphicsDeviceManager(this),$t.PreferredBackBufferWidth=width,$t.PreferredBackBufferHeight=height,$t.IsFullScreen=isFullScreen,$t.SynchronizeWithVerticalRetrace=!1,$t.PreferredDepthStencilFormat=Microsoft.Xna.Framework.Graphics.DepthFormat.None,$t);this.Screen.addDeviceReset(Bridge.fn.cacheBind(this,this.OnGraphicsDeviceReset));this.Window.addClientSizeChanged(Bridge.fn.cacheBind(this,this.OnGraphicsDeviceReset));this.Window.addOrientationChanged(Bridge.fn.cacheBind(this,this.OnGraphicsDeviceReset));this.Content=($t=new SpineEngine.XnaManagers.GlobalContentManager,$t.RootDirectory=contentDirectory,$t);this.IsMouseVisible=!0;this.IsFixedTimeStep=!1;this.TargetElapsedTime=new System.TimeSpan(0,0,0,0,16);this.globalManagerList.Add(new SpineEngine.GlobalManagers.Coroutines.CoroutineGlobalManager);this.globalManagerList.Add(new SpineEngine.GlobalManagers.Tweens.TweenGlobalManager);this.globalManagerList.Add(new SpineEngine.GlobalManagers.Timers.TimerGlobalManager)}},methods:{OnGraphicsDeviceReset:function(sender,e){this.graphicsDeviceChangeTimer!=null?this.graphicsDeviceChangeTimer.Reset():this.GetGlobalManager(SpineEngine.GlobalManagers.Timers.TimerGlobalManager).Schedule(.05,!1,Bridge.fn.bind(this,$asm.$.SpineEngine.Core.f1))},Update:function(gameTime){if(this.PauseOnFocusLost&&!this.IsActive){this.SuppressDraw();return}this.globalManagerList.NotifyUpdate(gameTime);this.scene!=null?this.scene.Update(gameTime):null;Bridge.referenceEquals(this.scene,this.nextScene)||(this.scene!=null?this.scene.End():null,this.scene=this.nextScene,this.scene!=null?this.scene.Begin():null,this.scene!=null?this.scene.Update(gameTime):null)},Draw:function(gameTime){(!this.PauseOnFocusLost||this.IsActive)&&(this.SceneTransition!=null?this.SceneTransition.PreRender():null,this.scene!=null?this.scene.Render(this.SceneTransition!=null?this.SceneTransition.PreviousSceneRender:null):null,this.SceneTransition!=null?this.SceneTransition.Render():null)},SwitchScene:function(newScene){var transition=new SpineEngine.Graphics.Transitions.QuickTransition;this.SwitchScene$1(newScene,transition)},SwitchScene$1:function(newScene,transition){transition.SceneLoadAction=function(){return newScene};this.SwitchScene$2(transition)},SwitchScene$2:function(transition){Bridge.staticEquals(transition.SceneLoadAction,null)&&(transition.SceneLoadAction=Bridge.fn.bind(this,$asm.$.SpineEngine.Core.f2));this.SceneTransition=transition;this.GetGlobalManager(SpineEngine.GlobalManagers.Coroutines.CoroutineGlobalManager).StartCoroutine(this.SceneTransition.OnBeginTransition())},AddGlobalManager:function(manager){this.globalManagerList.Add(manager)},RemoveGlobalManager:function(manager){this.globalManagerList.Remove(manager)},GetGlobalManager:function(T){return this.globalManagerList.GetGlobalManager(T)}}});Bridge.ns("SpineEngine.Core",$asm.$);Bridge.apply($asm.$.SpineEngine.Core,{f1:function(t){this.graphicsDeviceChangeTimer=null;this.scene!=null?this.scene.OnGraphicsDeviceReset():null;this.nextScene!=null?this.nextScene.OnGraphicsDeviceReset():null},f2:function(){return this.scene}});Bridge.define("SpineEngine.Debug.Assert",{statics:{methods:{BreakIf:function(condition){condition},Break:function(){},Fail:function(){},Fail$1:function(message,args){args===void 0&&(args=[])},IsTrue:function(condition){!condition},IsTrue$1:function(condition,message,args){args===void 0&&(args=[]);!condition},IsFalse:function(condition){},IsFalse$1:function(condition,message,args){args===void 0&&(args=[])},IsNull:function(obj){},IsNull$1:function(obj,message,args){args===void 0&&(args=[])},IsNotNull:function(obj){},IsNotNull$1:function(obj,message,args){args===void 0&&(args=[])},AreEqual:function(first,second,message,args){args===void 0&&(args=[]);!Bridge.referenceEquals(first,second)},AreNotEqual:function(first,second,message,args){args===void 0&&(args=[]);Bridge.referenceEquals(first,second)}}}});Bridge.define("SpineEngine.Debug.Logger",{statics:{methods:{Log$2:function(type,format,args){args===void 0&&(args=[]);switch(type){case SpineEngine.Debug.Logger.LogType.Error:break;case SpineEngine.Debug.Logger.LogType.Warn:break;case SpineEngine.Debug.Logger.LogType.Log:break;case SpineEngine.Debug.Logger.LogType.Info:break;case SpineEngine.Debug.Logger.LogType.Trace:break;default:throw new System.ArgumentOutOfRangeException.ctor;}},Log:function(obj){SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Log,"{0}",[obj])},Log$1:function(format,args){args===void 0&&(args=[]);SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Log,format,args)},Error:function(format,args){args===void 0&&(args=[]);SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Error,format,args)},ErrorIf:function(condition,format,args){args===void 0&&(args=[]);condition&&SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Error,format,args)},Warn:function(format,args){args===void 0&&(args=[]);SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Warn,format,args)},WarnIf:function(condition,format,args){args===void 0&&(args=[]);condition&&SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Warn,format,args)},LogIf:function(condition,format,args){args===void 0&&(args=[]);condition&&SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Log,format,args)},Info:function(format,args){args===void 0&&(args=[]);SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Info,format,args)},Trace:function(format,args){args===void 0&&(args=[]);SpineEngine.Debug.Logger.Log$2(SpineEngine.Debug.Logger.LogType.Trace,format,args)}}}});Bridge.define("SpineEngine.Debug.Logger.LogType",{$kind:"nested enum",statics:{fields:{Error:0,Warn:1,Log:2,Info:3,Trace:4}}});Bridge.define("SpineEngine.ECS.Components.AnimationSpriteComponent",{inherits:[LocomotorECS.Component],fields:{Animation:null,CurrentFrame:0,DelayComplete:!1,ElapsedDelay:0,ExecutingAnimation:null,isPlaying:!1,IsReversed:!1,StartFrame:0},events:{OnAnimationCompletedEvent:null},props:{TotalElapsedTime:0,IsLoopingBackOnPingPong:!1,CompletedIterations:0,IsPlaying:{get:function(){return this.isPlaying},set:function(value){this.isPlaying!==value&&(this.isPlaying=value,this.isPlaying&&(this.TotalElapsedTime=0))}}},methods:{NotifyAninmationCompleted:function(){Bridge.staticEquals(this.OnAnimationCompletedEvent,null)?null:this.OnAnimationCompletedEvent()}}});Bridge.define("SpineEngine.ECS.Components.CameraComponent",{inherits:[LocomotorECS.Component],props:{Camera:null}});Bridge.define("SpineEngine.ECS.Components.ColorComponent",{inherits:[LocomotorECS.Component],fields:{color:null},events:{OnChange:null},props:{Color:{get:function(){return this.color.$clone()},set:function(value){Microsoft.Xna.Framework.Color.op_Equality(this.color.$clone(),value.$clone())||(this.color=value.$clone(),Bridge.staticEquals(this.OnChange,null)?null:this.OnChange())}}},ctors:{init:function(){this.color=new Microsoft.Xna.Framework.Color},ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor1:function(color){this.$initialize();LocomotorECS.Component.ctor.call(this);this.color=color.$clone()}}});Bridge.define("SpineEngine.ECS.Components.CursorOverComponent",{inherits:[LocomotorECS.Component],fields:{IsMouseOver:!1,OverRegion:null},ctors:{init:function(){this.OverRegion=new SpineEngine.Maths.RectangleF}}});Bridge.define("SpineEngine.ECS.Components.DepthLayerComponent",{inherits:[LocomotorECS.Component],fields:{depth:0},events:{OnChange:null},props:{Depth:{get:function(){return this.depth},set:function(value){this.depth!==value&&(this.depth=value,Bridge.staticEquals(this.OnChange,null)?null:this.OnChange())}}},ctors:{ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor1:function(depth){this.$initialize();LocomotorECS.Component.ctor.call(this);this.depth=depth}}});Bridge.define("SpineEngine.ECS.Components.FinalRenderComponent",{inherits:[LocomotorECS.Component],props:{Batch:null},ctors:{init:function(){this.Batch=new SpineEngine.Graphics.Meshes.MeshBatch}}});Bridge.define("SpineEngine.ECS.Components.InputGamePadComponent",{inherits:[LocomotorECS.Component],statics:{fields:{DEFAULT_DEADZONE:0},ctors:{init:function(){this.DEFAULT_DEADZONE=.1}}},fields:{CurrentState:null,IsLeftStickVerticalInverted:!1,IsRightStickVerticalInverted:!1,PlayerIndex:0,PreviousState:null,RumbleTime:0,ThisTickConnected:!1,ThisTickDisconnected:!1},props:{DpadLeftDown:{get:function(){return this.CurrentState.DPad.Left===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},DpadLeftPressed:{get:function(){return this.CurrentState.DPad.Left===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&this.PreviousState.DPad.Left===Microsoft.Xna.Framework.Input.ButtonState.Released}},DpadLeftReleased:{get:function(){return this.CurrentState.DPad.Left===Microsoft.Xna.Framework.Input.ButtonState.Released&&this.PreviousState.DPad.Left===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},DpadRightDown:{get:function(){return this.CurrentState.DPad.Right===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},DpadRightPressed:{get:function(){return this.CurrentState.DPad.Right===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&this.PreviousState.DPad.Right===Microsoft.Xna.Framework.Input.ButtonState.Released}},DpadRightReleased:{get:function(){return this.CurrentState.DPad.Right===Microsoft.Xna.Framework.Input.ButtonState.Released&&this.PreviousState.DPad.Right===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},DpadUpDown:{get:function(){return this.CurrentState.DPad.Up===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},DpadUpPressed:{get:function(){return this.CurrentState.DPad.Up===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&this.PreviousState.DPad.Up===Microsoft.Xna.Framework.Input.ButtonState.Released}},DpadUpReleased:{get:function(){return this.CurrentState.DPad.Up===Microsoft.Xna.Framework.Input.ButtonState.Released&&this.PreviousState.DPad.Up===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},DpadDownDown:{get:function(){return this.CurrentState.DPad.Down===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},DpadDownPressed:{get:function(){return this.CurrentState.DPad.Down===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&this.PreviousState.DPad.Down===Microsoft.Xna.Framework.Input.ButtonState.Released}},DpadDownReleased:{get:function(){return this.CurrentState.DPad.Down===Microsoft.Xna.Framework.Input.ButtonState.Released&&this.PreviousState.DPad.Down===Microsoft.Xna.Framework.Input.ButtonState.Pressed}}},ctors:{init:function(){this.CurrentState=new Microsoft.Xna.Framework.Input.GamePadState;this.PreviousState=new Microsoft.Xna.Framework.Input.GamePadState;this.IsLeftStickVerticalInverted=!1;this.IsRightStickVerticalInverted=!1;this.ThisTickConnected=!1;this.ThisTickDisconnected=!1},ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this);this.PlayerIndex=0;this.PreviousState=new Microsoft.Xna.Framework.Input.GamePadState.ctor;this.CurrentState=Microsoft.Xna.Framework.Input.GamePad.GetState(this.PlayerIndex)},$ctor1:function(playerIndex){this.$initialize();LocomotorECS.Component.ctor.call(this);this.PlayerIndex=playerIndex;this.PreviousState=new Microsoft.Xna.Framework.Input.GamePadState.ctor;this.CurrentState=Microsoft.Xna.Framework.Input.GamePad.GetState(this.PlayerIndex)}},methods:{SetVibration:function(left,right,duration){this.RumbleTime=duration;Microsoft.Xna.Framework.Input.GamePad.SetVibration(this.PlayerIndex,left,right)},StopVibration:function(){Microsoft.Xna.Framework.Input.GamePad.SetVibration(this.PlayerIndex,0,0);this.RumbleTime=0},IsConnected:function(){return this.CurrentState.IsConnected},IsButtonPressed:function(button){return this.CurrentState.IsButtonDown(button)&&!this.PreviousState.IsButtonDown(button)},IsButtonDown:function(button){return this.CurrentState.IsButtonDown(button)},IsButtonReleased:function(button){return!this.CurrentState.IsButtonDown(button)&&this.PreviousState.IsButtonDown(button)},GetLeftStick:function(){var res=this.CurrentState.ThumbSticks.Left.$clone();return this.IsLeftStickVerticalInverted&&(res.Y=-res.Y),res.$clone()},GetLeftStick$1:function(deadzone){var res=this.CurrentState.ThumbSticks.Left.$clone();return res.LengthSquared()<deadzone*deadzone?res=Microsoft.Xna.Framework.Vector2.Zero.$clone():this.IsLeftStickVerticalInverted&&(res.Y=-res.Y),res.$clone()},GetRightStick:function(){var res=this.CurrentState.ThumbSticks.Right.$clone();return this.IsRightStickVerticalInverted&&(res.Y=-res.Y),res.$clone()},GetRightStick$1:function(deadzone){var res=this.CurrentState.ThumbSticks.Right.$clone();return res.LengthSquared()<deadzone*deadzone?res=Microsoft.Xna.Framework.Vector2.Zero.$clone():this.IsRightStickVerticalInverted&&(res.Y=-res.Y),res.$clone()},IsLeftStickLeft:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.X<-deadzone},IsLeftStickLeftPressed:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.X<-deadzone&&this.PreviousState.ThumbSticks.Left.X>-deadzone},IsLeftStickRight:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.X>deadzone},IsLeftStickRightPressed:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.X>deadzone&&this.PreviousState.ThumbSticks.Left.X<deadzone},IsLeftStickUp:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.Y>deadzone},IsLeftStickUpPressed:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.Y>deadzone&&this.PreviousState.ThumbSticks.Left.Y<deadzone},IsLeftStickDown:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.Y<-deadzone},IsLeftStickDownPressed:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Left.Y<-deadzone&&this.PreviousState.ThumbSticks.Left.Y>-deadzone},IsRightStickLeft:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Right.X<-deadzone},IsRightStickRight:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Right.X>deadzone},IsRightStickUp:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Right.Y>deadzone},IsRightStickDown:function(deadzone){return deadzone===void 0&&(deadzone=.1),this.CurrentState.ThumbSticks.Right.Y<-deadzone},GetLeftTriggerRaw:function(){return this.CurrentState.Triggers.Left},GetRightTriggerRaw:function(){return this.CurrentState.Triggers.Right},IsLeftTriggerDown:function(threshold){return threshold===void 0&&(threshold=.2),this.CurrentState.Triggers.Left>threshold},IsLeftTriggerPressed:function(threshold){return threshold===void 0&&(threshold=.2),this.CurrentState.Triggers.Left>threshold&&this.PreviousState.Triggers.Left<threshold},IsLeftTriggerReleased:function(threshold){return threshold===void 0&&(threshold=.2),this.CurrentState.Triggers.Left<threshold&&this.PreviousState.Triggers.Left>threshold},IsRightTriggerDown:function(threshold){return threshold===void 0&&(threshold=.2),this.CurrentState.Triggers.Right>threshold},IsRightTriggerPressed:function(threshold){return threshold===void 0&&(threshold=.2),this.CurrentState.Triggers.Right>threshold&&this.PreviousState.Triggers.Right<threshold},IsRightTriggerReleased:function(threshold){return threshold===void 0&&(threshold=.2),this.CurrentState.Triggers.Right<threshold&&this.PreviousState.Triggers.Right>threshold}}});Bridge.define("SpineEngine.ECS.Components.InputKeyboardComponent",{inherits:[LocomotorECS.Component],props:{IsShiftDown:{get:function(){return this.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.LeftShift)||this.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.RightShift)}},IsAltDown:{get:function(){return this.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.LeftAlt)||this.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.RightAlt)}},IsControlDown:{get:function(){return this.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.LeftControl)||this.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.RightControl)}},PreviousKeyboardState:null,CurrentKeyboardState:null},ctors:{init:function(){this.PreviousKeyboardState=new Microsoft.Xna.Framework.Input.KeyboardState;this.CurrentKeyboardState=new Microsoft.Xna.Framework.Input.KeyboardState}},methods:{IsKeyPressed:function(key){return this.CurrentKeyboardState.IsKeyDown(key)&&!this.PreviousKeyboardState.IsKeyDown(key)},IsKeyDown:function(key){return this.CurrentKeyboardState.IsKeyDown(key)},IsKeyReleased:function(key){return!this.CurrentKeyboardState.IsKeyDown(key)&&this.PreviousKeyboardState.IsKeyDown(key)},GetDownKeys:function(){return this.CurrentKeyboardState.GetPressedKeys()}}});Bridge.define("SpineEngine.ECS.Components.InputMouseComponent",{inherits:[LocomotorECS.Component],fields:{ResolutionOffset:null,ResolutionScale:null},props:{PreviousMouseState:null,CurrentMouseState:null,LeftMouseButtonPressed:{get:function(){return this.CurrentMouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&this.PreviousMouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Released}},LeftMouseButtonDown:{get:function(){return this.CurrentMouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},LeftMouseButtonReleased:{get:function(){return this.CurrentMouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Released&&this.PreviousMouseState.LeftButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},RightMouseButtonPressed:{get:function(){return this.CurrentMouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&this.PreviousMouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Released}},RightMouseButtonDown:{get:function(){return this.CurrentMouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},RightMouseButtonReleased:{get:function(){return this.CurrentMouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Released&&this.PreviousMouseState.RightButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},MiddleMouseButtonPressed:{get:function(){return this.CurrentMouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed&&this.PreviousMouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Released}},MiddleMouseButtonDown:{get:function(){return this.CurrentMouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},MiddleMouseButtonReleased:{get:function(){return this.CurrentMouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Released&&this.PreviousMouseState.MiddleButton===Microsoft.Xna.Framework.Input.ButtonState.Pressed}},MouseWheel:{get:function(){return this.CurrentMouseState.ScrollWheelValue}},MouseWheelDelta:{get:function(){return this.CurrentMouseState.ScrollWheelValue-this.PreviousMouseState.ScrollWheelValue|0}},RawMousePosition:{get:function(){return new Microsoft.Xna.Framework.Point.$ctor2(this.CurrentMouseState.X,this.CurrentMouseState.Y)}},MousePosition:{get:function(){return this.ScaledMousePosition.$clone()}},ScaledMousePosition:{get:function(){return Microsoft.Xna.Framework.Vector2.op_Multiply(new Microsoft.Xna.Framework.Vector2.$ctor2(this.CurrentMouseState.X-this.ResolutionOffset.X|0,this.CurrentMouseState.Y-this.ResolutionOffset.Y|0),this.ResolutionScale.$clone())}},MousePositionDelta:{get:function(){return Microsoft.Xna.Framework.Point.op_Subtraction(new Microsoft.Xna.Framework.Point.$ctor2(this.CurrentMouseState.X,this.CurrentMouseState.Y),new Microsoft.Xna.Framework.Point.$ctor2(this.PreviousMouseState.X,this.PreviousMouseState.Y))}},ScaledMousePositionDelta:{get:function(){return Microsoft.Xna.Framework.Vector2.op_Subtraction(this.ScaledMousePosition.$clone(),Microsoft.Xna.Framework.Vector2.op_Multiply(new Microsoft.Xna.Framework.Vector2.$ctor2(this.PreviousMouseState.X-this.ResolutionOffset.X|0,this.PreviousMouseState.Y-this.ResolutionOffset.Y|0),this.ResolutionScale.$clone()))}}},ctors:{init:function(){this.ResolutionOffset=new Microsoft.Xna.Framework.Point;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2;this.ResolutionScale=Microsoft.Xna.Framework.Vector2.One.$clone();this.PreviousMouseState=new Microsoft.Xna.Framework.Input.MouseState;this.CurrentMouseState=new Microsoft.Xna.Framework.Input.MouseState}}});Bridge.define("SpineEngine.ECS.Components.InputTouchComponent",{inherits:[LocomotorECS.Component],fields:{PreviousGestures:null,PreviousTouches:null,ResolutionOffset:null,ResolutionScale:null},props:{IsConnected:!1,CurrentTouches:null,CurrentGestures:null},ctors:{init:function(){this.PreviousTouches=new Microsoft.Xna.Framework.Input.Touch.TouchCollection;this.ResolutionOffset=new Microsoft.Xna.Framework.Point;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2;this.PreviousGestures=new(System.Collections.Generic.List$1(Microsoft.Xna.Framework.Input.Touch.GestureSample).ctor);this.ResolutionScale=Microsoft.Xna.Framework.Vector2.One.$clone();this.CurrentTouches=new Microsoft.Xna.Framework.Input.Touch.TouchCollection;this.CurrentGestures=new(System.Collections.Generic.List$1(Microsoft.Xna.Framework.Input.Touch.GestureSample).ctor)}},methods:{GetScaledPosition:function(position){return Microsoft.Xna.Framework.Vector2.op_Multiply(new Microsoft.Xna.Framework.Vector2.$ctor2(position.X-this.ResolutionOffset.X,position.Y-this.ResolutionOffset.Y),this.ResolutionScale.$clone())}}});Bridge.define("SpineEngine.ECS.Components.InputVirtualComponent",{inherits:[LocomotorECS.Component],props:{InputConfiguration:null},ctors:{init:function(){this.InputConfiguration=new(System.Collections.Generic.List$1(SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput).ctor)}}});Bridge.define("SpineEngine.ECS.Components.MaterialComponent",{inherits:[LocomotorECS.Component],fields:{Material:null},ctors:{ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this);this.Material=new SpineEngine.Graphics.Materials.Material},$ctor1:function(material){this.$initialize();LocomotorECS.Component.ctor.call(this);this.Material=material}}});Bridge.define("SpineEngine.ECS.Components.ParentComponent",{inherits:[LocomotorECS.Component],fields:{parent:null},events:{OnChange:null},props:{Parent:{get:function(){return this.parent},set:function(value){Bridge.referenceEquals(this.parent,value)||(this.parent=value,Bridge.staticEquals(this.OnChange,null)?null:this.OnChange())}}},ctors:{ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor1:function(parent){this.$initialize();LocomotorECS.Component.ctor.call(this);this.parent=parent}}});Bridge.define("SpineEngine.ECS.Components.PositionComponent",{inherits:[LocomotorECS.Component],fields:{position:null},events:{OnChange:null},props:{Position:{get:function(){return this.position.$clone()},set:function(value){Microsoft.Xna.Framework.Vector2.op_Equality(this.position.$clone(),value.$clone())||(this.position=value.$clone(),Bridge.staticEquals(this.OnChange,null)?null:this.OnChange())}}},ctors:{init:function(){this.position=new Microsoft.Xna.Framework.Vector2},ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor2:function(x,y){this.$initialize();LocomotorECS.Component.ctor.call(this);this.position=new Microsoft.Xna.Framework.Vector2.$ctor2(x,y)},$ctor1:function(position){this.$initialize();LocomotorECS.Component.ctor.call(this);this.position=position.$clone()}}});Bridge.define("SpineEngine.ECS.Components.RenderLayerComponent",{inherits:[LocomotorECS.Component],props:{Layer:0},ctors:{ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor1:function(layer){this.$initialize();LocomotorECS.Component.ctor.call(this);this.Layer=layer}}});Bridge.define("SpineEngine.ECS.Components.RenderOrderComponent",{inherits:[LocomotorECS.Component],fields:{order:0},events:{RenderOrderChanged:null},props:{Order:{get:function(){return this.order},set:function(value){this.order!==value&&(Bridge.staticEquals(this.RenderOrderChanged,null)?null:this.RenderOrderChanged(),this.order=value)}}},ctors:{ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor1:function(order){this.$initialize();LocomotorECS.Component.ctor.call(this);this.Order=order}}});Bridge.define("SpineEngine.ECS.Components.RotateComponent",{inherits:[LocomotorECS.Component],fields:{rotation:0},events:{OnChange:null},props:{Rotation:{get:function(){return this.rotation},set:function(value){this.rotation!==value&&(this.rotation=value,Bridge.staticEquals(this.OnChange,null)?null:this.OnChange())}},RotationDegrees:{get:function(){return Microsoft.Xna.Framework.MathHelper.ToDegrees(this.Rotation)},set:function(value){this.Rotation=Microsoft.Xna.Framework.MathHelper.ToRadians(value)}}},ctors:{ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor1:function(rotation){this.$initialize();LocomotorECS.Component.ctor.call(this);this.rotation=rotation}}});Bridge.define("SpineEngine.ECS.Components.ScaleComponent",{inherits:[LocomotorECS.Component],fields:{scale:null},events:{OnChange:null},props:{Scale:{get:function(){return this.scale.$clone()},set:function(value){Microsoft.Xna.Framework.Vector2.op_Equality(this.scale.$clone(),value.$clone())||(this.scale=value.$clone(),Bridge.staticEquals(this.OnChange,null)?null:this.OnChange())}}},ctors:{init:function(){this.scale=new Microsoft.Xna.Framework.Vector2},ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor2:function(x,y){this.$initialize();LocomotorECS.Component.ctor.call(this);this.scale=new Microsoft.Xna.Framework.Vector2.$ctor2(x,y)},$ctor1:function(position){this.$initialize();LocomotorECS.Component.ctor.call(this);this.scale=position.$clone()}}});Bridge.define("SpineEngine.ECS.Components.SpriteComponent",{inherits:[LocomotorECS.Component],fields:{Drawable:null},ctors:{ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor3:function(drawable){this.$initialize();LocomotorECS.Component.ctor.call(this);this.Drawable=drawable},$ctor2:function(texture){SpineEngine.ECS.Components.SpriteComponent.$ctor3.call(this,new SpineEngine.Graphics.Drawable.SubtextureDrawable.ctor(texture))},$ctor4:function(texture){SpineEngine.ECS.Components.SpriteComponent.$ctor3.call(this,new SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor5(texture))},$ctor1:function(color){SpineEngine.ECS.Components.SpriteComponent.$ctor3.call(this,new SpineEngine.Graphics.Drawable.PrimitiveDrawable(color.$clone()))}}});Bridge.define("SpineEngine.ECS.Components.SpriteEffectsComponent",{inherits:[LocomotorECS.Component],fields:{SpriteEffects:0},ctors:{init:function(){this.SpriteEffects=Microsoft.Xna.Framework.Graphics.SpriteEffects.None},ctor:function(){this.$initialize();LocomotorECS.Component.ctor.call(this)},$ctor1:function(spriteEffects){this.$initialize();LocomotorECS.Component.ctor.call(this);this.SpriteEffects=spriteEffects}}});Bridge.define("SpineEngine.ECS.EntitySystems.Animation.AnimationCompletionBehavior",{$kind:"enum",statics:{fields:{RemainOnFinalFrame:0,RevertToFirstFrame:1,HideSprite:2}}});Bridge.define("SpineEngine.ECS.EntitySystems.Animation.SpriteAnimation",{fields:{CompletionBehavior:0,Delay:0,fps:0,Frames:null,isDirty:!1,iterationDuration:0,loop:!1,pingPong:!1,secondsPerFrame:0,totalDuration:0},props:{FPS:{get:function(){return this.fps},set:function(value){this.fps=value;this.isDirty=!0}},Loop:{get:function(){return this.loop},set:function(value){this.loop=value;this.isDirty=!0}},PingPong:{get:function(){return this.pingPong},set:function(value){this.pingPong=value;this.isDirty=!0}},TotalDuration:{get:function(){return this.RecalculateFields(),this.totalDuration}},SecondsPerFrame:{get:function(){return this.RecalculateFields(),this.secondsPerFrame}},IterationDuration:{get:function(){return this.RecalculateFields(),this.iterationDuration}}},ctors:{init:function(){this.Delay=0;this.fps=10;this.Frames=new(System.Collections.Generic.List$1(SpineEngine.Graphics.Drawable.SubtextureDrawable).ctor);this.isDirty=!0;this.loop=!0},ctor:function(){this.$initialize()},$ctor1:function(frame){this.$initialize();this.Frames.add(frame)},$ctor3:function(frames){this.$initialize();this.Frames.AddRange(frames)},$ctor2:function(frames){frames===void 0&&(frames=[]);this.$initialize();this.Frames.AddRange(frames)},$ctor4:function(frames,idx){var $t,id;idx===void 0&&(idx=[]);this.$initialize();$t=Bridge.getEnumerator(idx);try{while($t.moveNext())id=$t.Current,this.Frames.add(System.Array.getItem(frames,id,SpineEngine.Graphics.Drawable.SubtextureDrawable))}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}},methods:{RecalculateFields:function(){this.isDirty&&(this.secondsPerFrame=1/this.fps,this.iterationDuration=this.secondsPerFrame*this.Frames.Count,this.totalDuration=this.loop?Number.POSITIVE_INFINITY:this.pingPong?this.iterationDuration*2:this.iterationDuration,this.isDirty=!1)}}});Bridge.define("SpineEngine.ECS.EntitySystems.AnimationSpriteUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem],ctors:{ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.AnimationSpriteComponent]))}},methods:{DoAction$1:function(entity,gameTime){var animation,sprite,elapsedTime,desiredFrame;if(LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime),animation=entity.GetComponent(SpineEngine.ECS.Components.AnimationSpriteComponent),animation.IsPlaying){if(sprite=entity.GetOrCreateComponent(SpineEngine.ECS.Components.SpriteComponent),Bridge.referenceEquals(animation.Animation,animation.ExecutingAnimation)||(animation.ExecutingAnimation=animation.Animation,animation.CurrentFrame=animation.StartFrame,sprite.Drawable=animation.ExecutingAnimation.Frames.getItem(animation.CurrentFrame),animation.TotalElapsedTime=animation.StartFrame*animation.ExecutingAnimation.SecondsPerFrame),!animation.DelayComplete&&animation.ElapsedDelay<animation.ExecutingAnimation.Delay){animation.ElapsedDelay+=gameTime.getTotalSeconds();animation.ElapsedDelay>=animation.ExecutingAnimation.Delay&&(animation.DelayComplete=!0);return}if(animation.IsReversed?animation.TotalElapsedTime-=gameTime.getTotalSeconds():animation.TotalElapsedTime+=gameTime.getTotalSeconds(),animation.TotalElapsedTime=SpineEngine.Maths.Mathf.Clamp$1(animation.TotalElapsedTime,0,animation.ExecutingAnimation.TotalDuration),animation.CompletedIterations=SpineEngine.Maths.Mathf.FloorToInt(animation.TotalElapsedTime/animation.ExecutingAnimation.IterationDuration),animation.IsLoopingBackOnPingPong=!1,animation.ExecutingAnimation.PingPong&&(animation.ExecutingAnimation.Loop||animation.CompletedIterations<2)&&(animation.IsLoopingBackOnPingPong=animation.CompletedIterations%2!=0),animation.TotalElapsedTime<animation.ExecutingAnimation.IterationDuration)elapsedTime=animation.TotalElapsedTime;else if(elapsedTime=animation.TotalElapsedTime%animation.ExecutingAnimation.IterationDuration,!animation.ExecutingAnimation.Loop&&elapsedTime===0){animation.NotifyAninmationCompleted();animation.IsPlaying=!1;switch(animation.ExecutingAnimation.CompletionBehavior){case SpineEngine.ECS.EntitySystems.Animation.AnimationCompletionBehavior.RemainOnFinalFrame:return;case SpineEngine.ECS.EntitySystems.Animation.AnimationCompletionBehavior.RevertToFirstFrame:sprite.Drawable=animation.ExecutingAnimation.Frames.getItem(0);return;case SpineEngine.ECS.EntitySystems.Animation.AnimationCompletionBehavior.HideSprite:sprite.Drawable=null;animation.ExecutingAnimation=null;return}}if(animation.IsReversed&&animation.TotalElapsedTime<=0)if(animation.IsReversed=!1,animation.ExecutingAnimation.Loop)animation.TotalElapsedTime=0;else{animation.NotifyAninmationCompleted();animation.IsPlaying=!1;return}animation.IsLoopingBackOnPingPong&&(elapsedTime=animation.ExecutingAnimation.IterationDuration-elapsedTime);desiredFrame=SpineEngine.Maths.Mathf.FloorToInt(elapsedTime/animation.ExecutingAnimation.SecondsPerFrame);desiredFrame!==animation.CurrentFrame&&(animation.CurrentFrame=desiredFrame,sprite.Drawable=animation.ExecutingAnimation.Frames.getItem(animation.CurrentFrame),animation.ExecutingAnimation.PingPong&&(animation.CurrentFrame===0||animation.CurrentFrame===(animation.ExecutingAnimation.Frames.Count-1|0))&&(animation.IsReversed?animation.TotalElapsedTime-=animation.ExecutingAnimation.SecondsPerFrame:animation.TotalElapsedTime+=animation.ExecutingAnimation.SecondsPerFrame))}}}});Bridge.define("SpineEngine.ECS.EntitySystems.CursorOverMouseSpriteUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem],fields:{scene:null},ctors:{ctor:function(scene){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.InputMouseComponent,SpineEngine.ECS.Components.CursorOverComponent]));this.scene=scene}},methods:{DoAction$1:function(entity,gameTime){var rect;LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var mouse=entity.GetComponent(SpineEngine.ECS.Components.InputMouseComponent),clickable=entity.GetComponent(SpineEngine.ECS.Components.CursorOverComponent),mousePosition={v:this.scene.Camera.ScreenToWorldPoint$1(mouse.MousePosition.$clone())},entityPosition=SpineEngine.Maths.TransformationUtils.GetTransformation(entity),matrix={v:entityPosition.LocalTransformMatrix.$clone()};Microsoft.Xna.Framework.Matrix.Invert$1(matrix,matrix);Microsoft.Xna.Framework.Vector2.Transform$2(mousePosition,matrix,mousePosition);rect=clickable.OverRegion.$clone();clickable.IsMouseOver=rect.Contains$1(mousePosition.v.$clone())}}});Bridge.define("SpineEngine.ECS.EntitySystems.CursorOverTouchSpriteUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem],ctors:{ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.InputTouchComponent,SpineEngine.ECS.Components.CursorOverComponent,SpineEngine.ECS.Components.SpriteComponent]))}},methods:{DoAction$1:function(entity,gameTime){LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var sprite=entity.GetComponent(SpineEngine.ECS.Components.SpriteComponent),touch=entity.GetComponent(SpineEngine.ECS.Components.InputTouchComponent),clickable=entity.GetComponent(SpineEngine.ECS.Components.CursorOverComponent);touch.IsConnected&&(clickable.IsMouseOver=System.Linq.Enumerable.from(touch.CurrentTouches).any(function(a){return sprite.Drawable.SpineEngine$Graphics$Drawable$IDrawable$Bounds.Contains$1(touch.GetScaledPosition(a.Position.$clone()))}))}}});Bridge.define("SpineEngine.ECS.IScreenResolutionChangedListener",{$kind:"interface"});Bridge.define("SpineEngine.ECS.EntitySystems.InputKeyboardUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem],ctors:{ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.InputKeyboardComponent]))}},methods:{DoAction$1:function(entity,gameTime){LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var text=entity.GetComponent(SpineEngine.ECS.Components.InputKeyboardComponent);text.PreviousKeyboardState=text.CurrentKeyboardState.$clone();text.CurrentKeyboardState=Microsoft.Xna.Framework.Input.Keyboard.GetState()}}});Bridge.define("SpineEngine.ECS.EntitySystems.InputVirtualUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem],ctors:{ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.InputVirtualComponent]))}},methods:{DoAction$1:function(entity,gameTime){var $t,inputConfig;LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var inputKeyboard=entity.GetComponent(SpineEngine.ECS.Components.InputKeyboardComponent),inputMouse=entity.GetComponent(SpineEngine.ECS.Components.InputMouseComponent),inputTouch=entity.GetComponent(SpineEngine.ECS.Components.InputTouchComponent),inputGamePad=entity.GetComponent(SpineEngine.ECS.Components.InputGamePadComponent),input=entity.GetComponent(SpineEngine.ECS.Components.InputVirtualComponent);$t=Bridge.getEnumerator(input.InputConfiguration);try{while($t.moveNext())inputConfig=$t.Current,inputConfig.Update(inputKeyboard,inputMouse,inputTouch,inputGamePad)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("SpineEngine.ECS.EntitySystems.MaterialEffectUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem],ctors:{ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.MaterialComponent]))}},methods:{DoAction$1:function(entity,gameTime){LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var material=entity.GetComponent(SpineEngine.ECS.Components.MaterialComponent);material.Material.Update(gameTime)}}});Bridge.define("SpineEngine.ECS.EntitySystems.RenderCollectionUpdateSystem",{inherits:[LocomotorECS.MatcherEntitySystem],statics:{fields:{comparer:null},ctors:{init:function(){this.comparer=new(SpineEngine.Utils.Collections.FunctionComparer$1(LocomotorECS.Entity).$ctor1)($asm.$.SpineEngine.ECS.EntitySystems.RenderCollectionUpdateSystem.f1)}}},fields:{knownComponents:null,needSort:!1},props:{Entities:{get:function(){return this.MatchedEntities}}},ctors:{init:function(){this.knownComponents=new(System.Collections.Generic.Dictionary$2(LocomotorECS.Entity,SpineEngine.ECS.Components.RenderOrderComponent));this.needSort=!0},ctor:function(){this.$initialize();LocomotorECS.MatcherEntitySystem.$ctor1.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.FinalRenderComponent]))}},methods:{OnMatchedEntityAdded:function(entity){LocomotorECS.MatcherEntitySystem.prototype.OnMatchedEntityAdded.call(this,entity);var orderComponent=entity.GetComponent(SpineEngine.ECS.Components.RenderOrderComponent);orderComponent!=null&&(this.knownComponents.set(entity,orderComponent),this.knownComponents.get(entity).addRenderOrderChanged(Bridge.fn.cacheBind(this,this.SortRequired)));this.SortRequired()},OnMatchedEntityChanged:function(entity){LocomotorECS.MatcherEntitySystem.prototype.OnMatchedEntityChanged.call(this,entity);var orderComponent=entity.GetComponent(SpineEngine.ECS.Components.RenderOrderComponent);orderComponent==null&&this.knownComponents.containsKey(entity)?(this.knownComponents.get(entity).removeRenderOrderChanged(Bridge.fn.cacheBind(this,this.SortRequired)),this.knownComponents.remove(entity)):orderComponent==null||this.knownComponents.containsKey(entity)?orderComponent==null||Bridge.referenceEquals(this.knownComponents.get(entity),orderComponent)||(this.knownComponents.get(entity).removeRenderOrderChanged(Bridge.fn.cacheBind(this,this.SortRequired)),this.knownComponents.set(entity,orderComponent),this.knownComponents.get(entity).addRenderOrderChanged(Bridge.fn.cacheBind(this,this.SortRequired))):(this.knownComponents.set(entity,orderComponent),this.knownComponents.get(entity).addRenderOrderChanged(Bridge.fn.cacheBind(this,this.SortRequired)));this.SortRequired()},OnMatchedEntityRemoved:function(entity){LocomotorECS.MatcherEntitySystem.prototype.OnMatchedEntityRemoved.call(this,entity);var orderComponent=entity.GetComponent(SpineEngine.ECS.Components.RenderOrderComponent);orderComponent!=null&&(this.knownComponents.get(entity).removeRenderOrderChanged(Bridge.fn.cacheBind(this,this.SortRequired)),this.knownComponents.remove(entity))},DoAction:function(gameTime){LocomotorECS.MatcherEntitySystem.prototype.DoAction.call(this,gameTime);this.needSort&&this.MatchedEntities.Sort$1(SpineEngine.ECS.EntitySystems.RenderCollectionUpdateSystem.comparer)},SortRequired:function(){this.needSort=!0}}});Bridge.ns("SpineEngine.ECS.EntitySystems.RenderCollectionUpdateSystem",$asm.$);Bridge.apply($asm.$.SpineEngine.ECS.EntitySystems.RenderCollectionUpdateSystem,{f1:function(a){var $t,$t1;return $t=($t1=a.GetComponent(SpineEngine.ECS.Components.RenderOrderComponent))!=null?$t1.Order:null,$t!=null?$t:0}});Bridge.define("SpineEngine.ECS.EntitySystems.SpriteMeshGeneratorSystem",{inherits:[LocomotorECS.EntityProcessingSystem],ctors:{ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.SpriteComponent]))}},methods:{DoAction$1:function(entity,gameTime){var $t,$t1,$t2,$t3,$t4,$t5,$t6,finalRender,transformation,mesh;LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var sprite=entity.GetComponent(SpineEngine.ECS.Components.SpriteComponent),effect=($t=($t1=entity.GetComponent(SpineEngine.ECS.Components.SpriteEffectsComponent))!=null?$t1.SpriteEffects:null,$t!=null?$t:Microsoft.Xna.Framework.Graphics.SpriteEffects.None),color=($t2=($t3=entity.GetComponent(SpineEngine.ECS.Components.ColorComponent))!=null?$t3.Color:null,$t2!=null?$t2:Microsoft.Xna.Framework.Color.White),depth=($t4=($t5=entity.GetComponent(SpineEngine.ECS.Components.DepthLayerComponent))!=null?$t5.Depth:null,$t4!=null?$t4:0);if(sprite.Drawable==null){entity.RemoveComponent$1(SpineEngine.ECS.Components.FinalRenderComponent);return}finalRender=entity.GetOrCreateComponent(SpineEngine.ECS.Components.FinalRenderComponent);finalRender.Batch.Clear();sprite.Drawable.SpineEngine$Graphics$Drawable$IDrawable$DrawInto(color.$clone(),depth,finalRender.Batch);transformation=SpineEngine.Maths.TransformationUtils.GetTransformation(entity).LocalTransformMatrix.$clone();$t6=Bridge.getEnumerator(finalRender.Batch.Meshes);try{while($t6.moveNext())mesh=$t6.Current,mesh.ApplyEffectToMesh(effect),mesh.ApplyTransformMesh(transformation.$clone())}finally{Bridge.is($t6,System.IDisposable)&&$t6.System$IDisposable$Dispose()}}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput",{fields:{Nodes:null,Overlap:0},ctors:{init:function(){this.Nodes=new(System.Collections.Generic.List$1(SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInputNode).ctor)},ctor:function(overlap){this.$initialize();this.Overlap=overlap}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var $t,node;$t=Bridge.getEnumerator(this.Nodes);try{while($t.moveNext())node=$t.Current,node.Update(inputKeyboard,inputMouse,inputTouch,inputGamePad)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInputNode");Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.OverlapBehavior",{$kind:"nested enum",statics:{fields:{CancelOut:0,TakeOlder:1,TakeNewer:2}}});Bridge.define("SpineEngine.ECS.Scene",{statics:{fields:{defaultDesignResolutionSize:null,defaultSceneResolutionPolicy:null},ctors:{init:function(){this.defaultDesignResolutionSize=new Microsoft.Xna.Framework.Point;this.defaultSceneResolutionPolicy=SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy.None}},methods:{SetDefaultDesignResolution:function(width,height,sceneResolutionPolicy){SpineEngine.ECS.Scene.defaultDesignResolutionSize=new Microsoft.Xna.Framework.Point.$ctor2(width,height);SpineEngine.ECS.Scene.defaultSceneResolutionPolicy=sceneResolutionPolicy}}},fields:{Content:null,Camera:null,ClearColor:null,Renderers:null,entities:null,entitySystems:null,entitySystemsRender:null,renderProcessors:null,screenResolutionChangedListeners:null,didSceneBegin:!1,resolutionPolicy:null},props:{DesignResolutionSize:null,FinalRenderDestinationRect:null,SceneRenderTarget:null},ctors:{init:function(){this.ClearColor=new Microsoft.Xna.Framework.Color;this.ClearColor=Microsoft.Xna.Framework.Color.CornflowerBlue.$clone();this.screenResolutionChangedListeners=new(System.Collections.Generic.List$1(SpineEngine.ECS.IScreenResolutionChangedListener).ctor);this.DesignResolutionSize=new Microsoft.Xna.Framework.Point;this.FinalRenderDestinationRect=new Microsoft.Xna.Framework.Rectangle;this.SceneRenderTarget=new Microsoft.Xna.Framework.Rectangle},ctor:function(){this.$initialize();this.Content=new SpineEngine.XnaManagers.GlobalContentManager;this.Camera=new SpineEngine.Graphics.Cameras.Camera;this.entities=new LocomotorECS.EntityList;this.entitySystems=new LocomotorECS.EntitySystemList(this.entities);this.Renderers=new SpineEngine.Graphics.Renderers.RendererList;this.renderProcessors=new SpineEngine.Graphics.RenderProcessors.RenderProcessorList(this);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.InputMouseUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.InputTouchUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.InputGamePadUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.InputKeyboardUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.InputVirtualUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.CursorOverMouseSpriteUpdateSystem(this));this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.CursorOverTouchSpriteUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.MaterialEffectUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.AnimationSpriteUpdateSystem);this.AddEntitySystem(new SpineEngine.ECS.EntitySystems.SpriteMeshGeneratorSystem);this.AddEntitySystemExecutionOrder(SpineEngine.ECS.EntitySystems.InputMouseUpdateSystem,SpineEngine.ECS.EntitySystems.InputVirtualUpdateSystem);this.AddEntitySystemExecutionOrder(SpineEngine.ECS.EntitySystems.InputTouchUpdateSystem,SpineEngine.ECS.EntitySystems.InputVirtualUpdateSystem);this.AddEntitySystemExecutionOrder(SpineEngine.ECS.EntitySystems.InputGamePadUpdateSystem,SpineEngine.ECS.EntitySystems.InputVirtualUpdateSystem);this.AddEntitySystemExecutionOrder(SpineEngine.ECS.EntitySystems.InputKeyboardUpdateSystem,SpineEngine.ECS.EntitySystems.InputVirtualUpdateSystem);this.AddEntitySystemExecutionOrder(SpineEngine.ECS.EntitySystems.InputMouseUpdateSystem,SpineEngine.ECS.EntitySystems.CursorOverMouseSpriteUpdateSystem);this.AddEntitySystemExecutionOrder(SpineEngine.ECS.EntitySystems.InputTouchUpdateSystem,SpineEngine.ECS.EntitySystems.CursorOverTouchSpriteUpdateSystem);this.AddEntitySystemExecutionOrder(SpineEngine.ECS.EntitySystems.AnimationSpriteUpdateSystem,SpineEngine.ECS.EntitySystems.SpriteMeshGeneratorSystem);var renderCollectionUpdateSystem=new SpineEngine.ECS.EntitySystems.RenderCollectionUpdateSystem;this.entitySystemsRender=new LocomotorECS.EntitySystemList(this.entities);this.entitySystemsRender.Add(renderCollectionUpdateSystem);this.AddRenderProcessor(SpineEngine.Graphics.RenderProcessors.Impl.EntityRendererProcessor,new SpineEngine.Graphics.RenderProcessors.Impl.EntityRendererProcessor(!1,this,renderCollectionUpdateSystem.Entities,-1));this.AddRenderProcessor(SpineEngine.Graphics.RenderProcessors.Impl.EntityRendererProcessor,new SpineEngine.Graphics.RenderProcessors.Impl.EntityRendererProcessor(!0,this,renderCollectionUpdateSystem.Entities,2147483645));this.AddRenderProcessor(SpineEngine.Graphics.RenderProcessors.Impl.ScreenShotRenderProcessor,new SpineEngine.Graphics.RenderProcessors.Impl.ScreenShotRenderProcessor(2147483646));this.AddRenderProcessor(SpineEngine.Graphics.RenderProcessors.Impl.FinalRenderRenderProcessor,new SpineEngine.Graphics.RenderProcessors.Impl.FinalRenderRenderProcessor(SpineEngine.Graphics.Graphic.DefaultSamplerState,2147483647));this.resolutionPolicy=SpineEngine.ECS.Scene.defaultSceneResolutionPolicy;this.DesignResolutionSize=SpineEngine.ECS.Scene.defaultDesignResolutionSize.$clone()}},methods:{RequestScreenshot:function(callback){var screenShotPostProcessor=this.renderProcessors.Get(SpineEngine.Graphics.RenderProcessors.Impl.ScreenShotRenderProcessor);screenShotPostProcessor.Enabled=!0;screenShotPostProcessor.Action=function(tex){screenShotPostProcessor.Action=null;screenShotPostProcessor.Enabled=!1;callback(tex)}},SetDesignResolution:function(width,height,sceneResolutionPolicy){this.DesignResolutionSize=new Microsoft.Xna.Framework.Point.$ctor2(width,height);this.resolutionPolicy=sceneResolutionPolicy;this.UpdateResolutionScaler()},UpdateResolutionScaler:function(){var $t,listener;this.FinalRenderDestinationRect=this.resolutionPolicy.GetFinalRenderDestinationRect(SpineEngine.Core.Instance.Screen.Width,SpineEngine.Core.Instance.Screen.Height,this.DesignResolutionSize.$clone());this.SceneRenderTarget=this.resolutionPolicy.GetRenderTargetRect(SpineEngine.Core.Instance.Screen.Width,SpineEngine.Core.Instance.Screen.Height,this.DesignResolutionSize.$clone());$t=Bridge.getEnumerator(this.screenResolutionChangedListeners);try{while($t.moveNext())listener=$t.Current,listener.SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged(this.FinalRenderDestinationRect.$clone(),this.SceneRenderTarget.$clone())}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.Camera.OnSceneRenderTargetSizeChanged(this.SceneRenderTarget.$clone())},OnStart:function(){},OnEnd:function(){},Begin:function(){this.UpdateResolutionScaler();this.entitySystems.NotifyBegin();this.entitySystemsRender.NotifyBegin();this.entities.CommitChanges();this.didSceneBegin=!0;this.OnStart()},End:function(){this.OnEnd();this.didSceneBegin=!1;this.Renderers.NotifyEnd();this.renderProcessors.NotifyEnd();this.Camera=null;this.Content.Dispose();this.entitySystems.NotifyEnd();this.entitySystemsRender.NotifyEnd()},Update:function(gameTime){this.entitySystems!=null?this.entitySystems.NotifyDoAction(gameTime.ElapsedGameTime):null;this.renderProcessors.NotifyUpdate(gameTime.ElapsedGameTime);this.entities.CommitChanges();this.entitySystemsRender.NotifyDoAction(gameTime.ElapsedGameTime)},Render:function(finalRenderTarget){this.renderProcessors.NotifyPostProcess(finalRenderTarget,this.FinalRenderDestinationRect.$clone(),this.SceneRenderTarget.$clone())},OnGraphicsDeviceReset:function(){this.UpdateResolutionScaler()},AddRenderer:function(T,renderer){this.Renderers.Add(renderer);var listener;return(listener=Bridge.as(renderer,SpineEngine.ECS.IScreenResolutionChangedListener))!=null&&(this.screenResolutionChangedListeners.add(listener),this.didSceneBegin&&listener.SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged(this.FinalRenderDestinationRect.$clone(),this.SceneRenderTarget.$clone())),renderer},GetRenderer:function(T){return this.Renderers.Get(T)},RemoveRenderer:function(renderer){this.Renderers.Remove(renderer);var listener;(listener=Bridge.as(renderer,SpineEngine.ECS.IScreenResolutionChangedListener))!=null&&this.screenResolutionChangedListeners.remove(listener)},AddRenderProcessor:function(T,postProcessor){this.renderProcessors.Add(postProcessor);var listener;return(listener=Bridge.as(postProcessor,SpineEngine.ECS.IScreenResolutionChangedListener))!=null&&(this.screenResolutionChangedListeners.add(listener),this.didSceneBegin&&listener.SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged(this.FinalRenderDestinationRect.$clone(),this.SceneRenderTarget.$clone())),postProcessor},GetRenderProcessor:function(T){return this.renderProcessors.Get(T)},GetRenderProcessors:function(){return this.renderProcessors.GetAll()},RemoveRenderProcessor:function(renderProcessor){this.renderProcessors.Remove(renderProcessor);var listener;(listener=Bridge.as(renderProcessor,SpineEngine.ECS.IScreenResolutionChangedListener))!=null&&this.screenResolutionChangedListeners.remove(listener)},CreateEntity:function(name){name===void 0&&(name=null);var entity=new LocomotorECS.Entity(name);return this.AddEntity(entity)},AddEntity:function(entity){return this.entities.Add(entity),entity},RemoveEntity:function(entity){return this.entities.Remove(entity),entity},FindEntity:function(name){return this.entities.FindEntityByName(name)},FindEntitiesWithTag:function(tag){return this.entities.FindEntitiesByTag(tag)},AddEntitySystem:function(processor){this.entitySystems.Add(processor);var listener;return(listener=Bridge.as(processor,SpineEngine.ECS.IScreenResolutionChangedListener))!=null&&(this.screenResolutionChangedListeners.add(listener),this.didSceneBegin&&listener.SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged(this.FinalRenderDestinationRect.$clone(),this.SceneRenderTarget.$clone())),processor},RemoveEntityProcessor:function(processor){this.entitySystems.Remove(processor);var listener;(listener=Bridge.as(processor,SpineEngine.ECS.IScreenResolutionChangedListener))!=null&&this.screenResolutionChangedListeners.remove(listener)},AddEntitySystemExecutionOrder:function(TBefore,TAfter){this.entitySystems.AddExecutionOrder(TBefore,TAfter)},RemoveEntitySystemExecutionOrder:function(TBefore,TAfter){this.entitySystems.RemoveExecutionOrder(TBefore,TAfter)},GetEntityProcessor:function(T){return this.entitySystems.Get(T)}}});Bridge.define("SpineEngine.Utils.Collections.IPoolable",{$kind:"interface"});Bridge.define("SpineEngine.GlobalManagers.GlobalManager",{fields:{enabled:!1},props:{Enabled:{get:function(){return this.enabled},set:function(value){this.SetEnabled(value)}}},methods:{SetEnabled:function(isEnabled){this.enabled!==isEnabled&&(this.enabled=isEnabled,this.enabled?this.OnEnabled():this.OnDisabled())},OnEnabled:function(){},OnDisabled:function(){},Update:function(gameTime){}}});Bridge.define("SpineEngine.GlobalManagers.Coroutines.DefaultCoroutines",{statics:{methods:{Wait:function(seconds){var $step=0,$jumpFromFinally,$returnValue,startAt,$async_e,$enumerator=new Bridge.GeneratorEnumerator(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:startAt=System.DateTime.getNow();$step=1;continue;case 1:if(System.DateTime.subdd(System.DateTime.getNow(),startAt).getTotalSeconds()<seconds){$step=2;continue}$step=4;continue;case 2:return $enumerator.current=null,$step=3,!0;case 3:$step=1;continue;case 4:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},Empty:function(){var $step=0,$jumpFromFinally,$returnValue,$async_e,$enumerator=new Bridge.GeneratorEnumerator(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:return $enumerator.current=null,$step=1,!0;case 1:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},WaitForTweenCompletition:function(tween){var $step=0,$jumpFromFinally,$returnValue,globalManager,$async_e,$enumerator=new Bridge.GeneratorEnumerator(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:globalManager=SpineEngine.Core.Instance.GetGlobalManager(SpineEngine.GlobalManagers.Tweens.TweenGlobalManager);$step=1;continue;case 1:if(globalManager.IsTweenCompleted(tween)){$step=2;continue}$step=4;continue;case 2:return $enumerator.current=null,$step=3,!0;case 3:$step=1;continue;case 4:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator}}}});Bridge.define("SpineEngine.GlobalManagers.GlobalManagerList",{fields:{globalManagers:null},props:{Count:{get:function(){return this.globalManagers.Count}}},ctors:{init:function(){this.globalManagers=new(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.GlobalManager).ctor)}},methods:{getItem:function(index){return this.globalManagers.getItem(index)},Add:function(manager){this.globalManagers.add(manager);manager.Enabled=!0},Remove:function(manager){this.globalManagers.remove(manager);manager.Enabled=!1},NotifyUpdate:function(gameTime){for(var i=this.globalManagers.Count-1|0;i>=0;i=i-1|0)this.globalManagers.getItem(i).Enabled&&this.globalManagers.getItem(i).Update(gameTime)},GetGlobalManager:function(T){for(var component,manager,i=0;i<this.globalManagers.Count;i=i+1|0)if(component=this.globalManagers.getItem(i),(manager=Bridge.as(component,T))!=null)return manager;return null}}});Bridge.define("SpineEngine.GlobalManagers.Timers.Timer",{fields:{elapsedTime:0,isDone:!1,onTime:null,repeats:!1,timeInSeconds:0},methods:{Stop:function(){this.isDone=!0},Reset:function(){this.elapsedTime=0},Tick:function(gameTime){if(!this.isDone&&this.elapsedTime>this.timeInSeconds){this.elapsedTime-=this.timeInSeconds;this.onTime(this);this.isDone||this.repeats||(this.isDone=!0)}return this.elapsedTime+=gameTime.ElapsedGameTime.getTotalSeconds(),this.isDone},Initialize:function(timeInSeconds,repeats,onTime){this.timeInSeconds=timeInSeconds;this.repeats=repeats;this.onTime=onTime;this.isDone=!1},Unload:function(){this.onTime=null}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.Interfaces.ITween",{$kind:"interface"});Bridge.definei("SpineEngine.GlobalManagers.Tweens.Interfaces.ITweenTarget$1",function(T){return{$kind:"interface"}});Bridge.define("SpineEngine.GlobalManagers.Tweens.LoopType",{$kind:"enum",statics:{fields:{None:0,RestartFromBeginning:1,PingPong:2}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.Tweenable",{fields:{ElapsedTime:0,globalManager:null,isRunningInReverse:!1,TweenState:0},props:{CurrentTween:null},ctors:{init:function(){this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete}},methods:{Initialize:function(globalManager,tween){this.globalManager=globalManager;this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Paused;this.CurrentTween=tween},Start:function(){this.ElapsedTime=0;this.isRunningInReverse=!1;this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Running;this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Start()},RecycleSelf:function(){this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete;this.CurrentTween=null},IsRunning:function(){return this.TweenState===SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Running},IsCompleted:function(){return this.TweenState===SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete},Pause:function(){this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Paused},Resume:function(){this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Running},Tick:function(gameTime){if(this.TweenState===SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Paused)return!1;var elapsedTimeExcess=0;return(!this.isRunningInReverse&&this.ElapsedTime>=this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Duration?(elapsedTimeExcess=this.ElapsedTime-this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Duration,this.ElapsedTime=this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Duration,this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete):this.isRunningInReverse&&this.ElapsedTime<=0&&(elapsedTimeExcess=0-this.ElapsedTime,this.ElapsedTime=0,this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete),this.ElapsedTime>=0&&this.ElapsedTime<=this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Duration&&this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue(this.ElapsedTime),this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$LoopType!==SpineEngine.GlobalManagers.Tweens.LoopType.None&&this.TweenState===SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete&&this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Loops>0&&this.HandleLooping(elapsedTimeExcess),this.isRunningInReverse?this.ElapsedTime-=gameTime.ElapsedGameTime.getTotalSeconds():this.ElapsedTime+=gameTime.ElapsedGameTime.getTotalSeconds(),this.TweenState===SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete)?(this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$NotifyCompleted(),this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$NextTween!=null&&this.globalManager.AddTween(this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$NextTween),!0):!1},Stop:function(bringToCompletion){bringToCompletion===void 0&&(bringToCompletion=!1);this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Complete;bringToCompletion&&(this.ElapsedTime=this.isRunningInReverse?0:this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Duration,this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Stop())},ReverseTween:function(){this.isRunningInReverse=!this.isRunningInReverse},HandleLooping:function(elapsedTimeExcess){this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Loops=this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Loops-1|0;this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$LoopType===SpineEngine.GlobalManagers.Tweens.LoopType.PingPong&&this.ReverseTween();(this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$LoopType===SpineEngine.GlobalManagers.Tweens.LoopType.RestartFromBeginning||this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Loops%2==0)&&this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$NotifyLoopCompleted();this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Loops>0&&(this.TweenState=SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates.Running,this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$LoopType===SpineEngine.GlobalManagers.Tweens.LoopType.RestartFromBeginning?this.ElapsedTime=elapsedTimeExcess-this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$DelayBetweenLoops:this.isRunningInReverse?this.ElapsedTime+=this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$DelayBetweenLoops-elapsedTimeExcess:this.ElapsedTime=elapsedTimeExcess-this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$DelayBetweenLoops,this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$DelayBetweenLoops===0&&elapsedTimeExcess>0&&this.CurrentTween.SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue(this.ElapsedTime))}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.Tweenable.TweenStates",{$kind:"nested enum",statics:{fields:{Running:0,Paused:1,Complete:2}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenExt",{statics:{methods:{TweenTo$3:function(self,to,duration){return duration===void 0&&(duration=.3),new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector2Tween(new SpineEngine.GlobalManagers.Tweens.TweenTargets.PositionComponentTweenTarget(self),to.$clone(),duration)},TweenTo$5:function(self,to,duration){return duration===void 0&&(duration=.3),SpineEngine.GlobalManagers.Tweens.TweenExt.TweenTo$4(self,new Microsoft.Xna.Framework.Vector2.$ctor1(to),duration)},TweenTo$4:function(self,to,duration){return duration===void 0&&(duration=.3),new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector2Tween(new SpineEngine.GlobalManagers.Tweens.TweenTargets.ScaleComponentTweenTarget(self),to.$clone(),duration)},TweenTo:function(self,to,duration){return duration===void 0&&(duration=.3),new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.ColorTween(new SpineEngine.GlobalManagers.Tweens.TweenTargets.ColorComponentTweenTarget(self),to.$clone(),duration)},TweenTo$9:function(self,memberName,to,duration){return new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.IntTween(new(SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1(System.Int32))(self,memberName),to,duration)},TweenTo$10:function(self,memberName,to,duration){return new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.FloatTween(new(SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1(System.Single))(self,memberName),to,duration)},TweenTo$1:function(self,memberName,to,duration){return new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.ColorTween(new(SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1(Microsoft.Xna.Framework.Color))(self,memberName),to.$clone(),duration)},TweenTo$6:function(self,memberName,to,duration){return new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector2Tween(new(SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1(Microsoft.Xna.Framework.Vector2))(self,memberName),to.$clone(),duration)},TweenTo$7:function(self,memberName,to,duration){return new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector3Tween(new(SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1(Microsoft.Xna.Framework.Vector3))(self,memberName),to.$clone(),duration)},TweenTo$8:function(self,memberName,to,duration){return new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector4Tween(new(SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1(Microsoft.Xna.Framework.Vector4))(self,memberName),to.$clone(),duration)},TweenTo$2:function(self,memberName,to,duration){return new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.QuaternionTween(new(SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1(Microsoft.Xna.Framework.Quaternion))(self,memberName),to.$clone(),duration)},TweenRadiansTo:function(self,to,duration){return duration===void 0&&(duration=.3),new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.FloatTween(new SpineEngine.GlobalManagers.Tweens.TweenTargets.RotateComponentTweenTarget(self),to,duration)},TweenDegreesTo:function(self,to,duration){return duration===void 0&&(duration=.3),new SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.FloatTween(new SpineEngine.GlobalManagers.Tweens.TweenTargets.RotateDegreesComponentTweenTarget(self),to,duration)}}}});Bridge.define("SpineEngine.Graphics.Cameras.Camera",{fields:{position:null,rotation:0,zoom:0,minimumZoom:0,maximumZoom:0,bounds:null,inset:null,transformMatrix:null,inverseTransformMatrix:null,projectionMatrix:null,origin:null,areMatrixesDirty:!1,areBoundsDirty:!1,isProjectionMatrixDirty:!1},props:{PositionZ3D:0,NearClipPlane3D:0,FarClipPlane3D:0,Position:{get:function(){return this.position.$clone()},set:function(value){Microsoft.Xna.Framework.Vector2.op_Equality(this.position.$clone(),value.$clone())||(this.position=value.$clone(),this.areMatrixesDirty=!0,this.areBoundsDirty=!0)}},Rotation:{get:function(){return this.rotation},set:function(value){this.rotation!==value&&(this.rotation=value,this.areMatrixesDirty=!0,this.areBoundsDirty=!0)}},RawZoom:{get:function(){return this.zoom},set:function(value){value!==this.zoom&&(this.zoom=value,this.areBoundsDirty=!0,this.areMatrixesDirty=!0)}},Zoom:{get:function(){return this.zoom===0?1:this.zoom<1?SpineEngine.Maths.Mathf.Map(this.zoom,this.minimumZoom,1,-1,0):SpineEngine.Maths.Mathf.Map(this.zoom,1,this.maximumZoom,0,1)},set:function(value){var newZoom=SpineEngine.Maths.Mathf.Clamp$1(value,-1,1);this.zoom=newZoom===0?1:newZoom<0?SpineEngine.Maths.Mathf.Map(newZoom,-1,0,this.minimumZoom,1):SpineEngine.Maths.Mathf.Map(newZoom,0,1,1,this.maximumZoom);this.areMatrixesDirty=!0}},Inset:{get:function(){return this.inset.$clone()},set:function(value){this.inset=value.$clone();this.areBoundsDirty=!0}},MinimumZoom:{get:function(){return this.minimumZoom},set:function(value){this.zoom<value&&(this.zoom=this.MinimumZoom);this.minimumZoom=value}},MaximumZoom:{get:function(){return this.maximumZoom},set:function(value){this.zoom>value&&(this.zoom=value);this.maximumZoom=value}},Bounds:{get:function(){var topLeft,bottomRight;if(this.UpdateMatrices(),!this.areBoundsDirty)return this.bounds.$clone();if(topLeft=this.ScreenToWorldPoint$1(new Microsoft.Xna.Framework.Vector2.$ctor2(SpineEngine.Core.Instance.GraphicsDevice.Viewport.X+this.inset.Left,SpineEngine.Core.Instance.GraphicsDevice.Viewport.Y+this.inset.Top)),bottomRight=this.ScreenToWorldPoint$1(new Microsoft.Xna.Framework.Vector2.$ctor2((SpineEngine.Core.Instance.GraphicsDevice.Viewport.X+SpineEngine.Core.Instance.GraphicsDevice.Viewport.Width|0)-this.inset.Right,(SpineEngine.Core.Instance.GraphicsDevice.Viewport.Y+SpineEngine.Core.Instance.GraphicsDevice.Viewport.Height|0)-this.inset.Bottom)),this.Rotation!==0){var topRight=this.ScreenToWorldPoint$1(new Microsoft.Xna.Framework.Vector2.$ctor2((SpineEngine.Core.Instance.GraphicsDevice.Viewport.X+SpineEngine.Core.Instance.GraphicsDevice.Viewport.Width|0)-this.inset.Right,SpineEngine.Core.Instance.GraphicsDevice.Viewport.Y+this.inset.Top)),bottomLeft=this.ScreenToWorldPoint$1(new Microsoft.Xna.Framework.Vector2.$ctor2(SpineEngine.Core.Instance.GraphicsDevice.Viewport.X+this.inset.Left,(SpineEngine.Core.Instance.GraphicsDevice.Viewport.Y+SpineEngine.Core.Instance.GraphicsDevice.Viewport.Height|0)-this.inset.Bottom)),minX=SpineEngine.Maths.Mathf.MinOf$1(topLeft.X,bottomRight.X,topRight.X,bottomLeft.X),maxX=SpineEngine.Maths.Mathf.MaxOf$1(topLeft.X,bottomRight.X,topRight.X,bottomLeft.X),minY=SpineEngine.Maths.Mathf.MinOf$1(topLeft.Y,bottomRight.Y,topRight.Y,bottomLeft.Y),maxY=SpineEngine.Maths.Mathf.MaxOf$1(topLeft.Y,bottomRight.Y,topRight.Y,bottomLeft.Y);this.bounds.Location=new Microsoft.Xna.Framework.Vector2.$ctor2(minX,minY);this.bounds.Width=maxX-minX;this.bounds.Height=maxY-minY}else this.bounds.Location=topLeft.$clone(),this.bounds.Width=bottomRight.X-topLeft.X,this.bounds.Height=bottomRight.Y-topLeft.Y;return this.areBoundsDirty=!1,this.bounds.$clone()}},TransformMatrix:{get:function(){return this.UpdateMatrices(),this.transformMatrix.$clone()}},InverseTransformMatrix:{get:function(){return this.UpdateMatrices(),this.inverseTransformMatrix.$clone()}},ProjectionMatrix:{get:function(){return this.isProjectionMatrixDirty&&(Microsoft.Xna.Framework.Matrix.CreateOrthographicOffCenter$2(0,SpineEngine.Core.Instance.GraphicsDevice.Viewport.Width,SpineEngine.Core.Instance.GraphicsDevice.Viewport.Height,0,0,-1,Bridge.ref(this,"projectionMatrix")),this.isProjectionMatrixDirty=!1),this.projectionMatrix.$clone()}},ViewProjectionMatrix:{get:function(){return Microsoft.Xna.Framework.Matrix.op_Multiply(this.TransformMatrix.$clone(),this.ProjectionMatrix.$clone())}},ProjectionMatrix3D:{get:function(){var targetHeight=SpineEngine.Core.Instance.GraphicsDevice.Viewport.Height/this.zoom,fov=Math.atan(targetHeight/(2*this.PositionZ3D))*2;return Microsoft.Xna.Framework.Matrix.CreatePerspectiveFieldOfView(fov,SpineEngine.Core.Instance.GraphicsDevice.Viewport.AspectRatio,this.NearClipPlane3D,this.FarClipPlane3D)}},ViewMatrix3D:{get:function(){var position3D=new Microsoft.Xna.Framework.Vector3.$ctor3(this.Position.X,-this.Position.Y,this.PositionZ3D);return Microsoft.Xna.Framework.Matrix.CreateLookAt(position3D.$clone(),Microsoft.Xna.Framework.Vector3.op_Addition(position3D.$clone(),Microsoft.Xna.Framework.Vector3.Forward.$clone()),Microsoft.Xna.Framework.Vector3.Up.$clone())}},Origin:{get:function(){return this.origin.$clone()},set:function(value){Microsoft.Xna.Framework.Vector2.op_Equality(this.origin.$clone(),value.$clone())||(this.origin=value.$clone(),this.areMatrixesDirty=!0,this.areBoundsDirty=!0)}}},ctors:{init:function(){this.position=new Microsoft.Xna.Framework.Vector2;this.bounds=new SpineEngine.Maths.RectangleF;this.inset=new SpineEngine.Maths.RectangleF;this.transformMatrix=new Microsoft.Xna.Framework.Matrix;this.inverseTransformMatrix=new Microsoft.Xna.Framework.Matrix;this.projectionMatrix=new Microsoft.Xna.Framework.Matrix;this.origin=new Microsoft.Xna.Framework.Vector2;this.zoom=1;this.minimumZoom=.3;this.maximumZoom=3;this.transformMatrix=Microsoft.Xna.Framework.Matrix.Identity.$clone();this.inverseTransformMatrix=Microsoft.Xna.Framework.Matrix.Identity.$clone();this.areMatrixesDirty=!0;this.areBoundsDirty=!0;this.isProjectionMatrixDirty=!0;this.PositionZ3D=2e3;this.NearClipPlane3D=.0001;this.FarClipPlane3D=5e3}},methods:{OnSceneRenderTargetSizeChanged:function(sceneRenderTarget){this.isProjectionMatrixDirty=!0;var oldOrigin=this.origin.$clone();this.Origin=new Microsoft.Xna.Framework.Vector2.$ctor2(sceneRenderTarget.Width/2,sceneRenderTarget.Height/2);this.Position=Microsoft.Xna.Framework.Vector2.op_Addition(this.Position.$clone(),Microsoft.Xna.Framework.Vector2.op_Subtraction(this.origin.$clone(),oldOrigin.$clone()))},UpdateMatrices:function(){if(this.areMatrixesDirty){var tempMat={v:new Microsoft.Xna.Framework.Matrix};this.transformMatrix=Microsoft.Xna.Framework.Matrix.CreateTranslation$1(-this.Position.X,-this.Position.Y,0);this.zoom!==1&&(Microsoft.Xna.Framework.Matrix.CreateScale$5(this.zoom,this.zoom,1,tempMat),Microsoft.Xna.Framework.Matrix.Multiply$2(Bridge.ref(this,"transformMatrix"),tempMat,Bridge.ref(this,"transformMatrix")));this.Rotation!==0&&(Microsoft.Xna.Framework.Matrix.CreateRotationZ$1(this.Rotation,tempMat),Microsoft.Xna.Framework.Matrix.Multiply$2(Bridge.ref(this,"transformMatrix"),tempMat,Bridge.ref(this,"transformMatrix")));Microsoft.Xna.Framework.Matrix.CreateTranslation$3(Bridge.Int.clip32(this.origin.X),Bridge.Int.clip32(this.origin.Y),0,tempMat);Microsoft.Xna.Framework.Matrix.Multiply$2(Bridge.ref(this,"transformMatrix"),tempMat,Bridge.ref(this,"transformMatrix"));Microsoft.Xna.Framework.Matrix.Invert$1(Bridge.ref(this,"transformMatrix"),Bridge.ref(this,"inverseTransformMatrix"));this.areBoundsDirty=!0;this.areMatrixesDirty=!1}},ZoomIn:function(deltaZoom){this.Zoom+=deltaZoom},ZoomOut:function(deltaZoom){this.Zoom-=deltaZoom},WorldToScreenPoint:function(worldPosition){return worldPosition={v:worldPosition},this.UpdateMatrices(),Microsoft.Xna.Framework.Vector2.Transform$2(worldPosition,Bridge.ref(this,"transformMatrix"),worldPosition),worldPosition.v.$clone()},ScreenToWorldPoint$1:function(screenPosition){return screenPosition={v:screenPosition},this.UpdateMatrices(),Microsoft.Xna.Framework.Vector2.Transform$2(screenPosition,Bridge.ref(this,"inverseTransformMatrix"),screenPosition),screenPosition.v.$clone()},ScreenToWorldPoint:function(screenPosition){return this.ScreenToWorldPoint$1(screenPosition.ToVector2())}}});Bridge.define("SpineEngine.Graphics.Drawable.IDrawable",{$kind:"interface"});Bridge.define("SpineEngine.Graphics.Graphic",{statics:{fields:{pixelTexture:null,spriteEffect:null,spriteBatch:null,DefaultSamplerState:null},props:{DefaultWrappedSamplerState:{get:function(){return SpineEngine.Graphics.Graphic.DefaultSamplerState.Filter===Microsoft.Xna.Framework.Graphics.TextureFilter.Point?Microsoft.Xna.Framework.Graphics.SamplerState.PointWrap:Microsoft.Xna.Framework.Graphics.SamplerState.LinearWrap}},PixelTexture:{get:function(){return SpineEngine.Graphics.Graphic.pixelTexture=SpineEngine.Graphics.Graphic.pixelTexture||SpineEngine.Core.Instance.Content.Load(Microsoft.Xna.Framework.Graphics.Texture2D,SpineEngine.ContentPaths.SpineEngine.Textures.pixel),SpineEngine.Graphics.Graphic.pixelTexture}},SpriteEffect:{get:function(){return SpineEngine.Graphics.Graphic.spriteEffect=SpineEngine.Graphics.Graphic.spriteEffect||SpineEngine.Core.Instance.Content.Load(SpineEngine.Graphics.SpriteEffect,SpineEngine.Graphics.SpriteEffect.EffectAssetName),SpineEngine.Graphics.Graphic.spriteEffect}},SpriteBatch:{get:function(){return SpineEngine.Graphics.Graphic.spriteBatch=SpineEngine.Graphics.Graphic.spriteBatch||new Microsoft.Xna.Framework.Graphics.SpriteBatch(SpineEngine.Core.Instance.GraphicsDevice),SpineEngine.Graphics.Graphic.spriteBatch}}},ctors:{init:function(){this.DefaultSamplerState=Microsoft.Xna.Framework.Graphics.SamplerState.PointClamp}},methods:{Draw:function(finalRenderTarget,clearColor,batch,material){var $t,graphicsDevice=SpineEngine.Core.Instance.GraphicsDevice,mesh;graphicsDevice.SetRenderTarget(finalRenderTarget);System.Nullable.liftne(Microsoft.Xna.Framework.Color.op_Inequality,System.Nullable.lift1("$clone",clearColor),null)&&graphicsDevice.Clear(System.Nullable.getValue(clearColor).$clone());SpineEngine.Graphics.Graphic.SpriteBatch.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred,(material!=null?material.BlendState:null)||Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend,(material!=null?material.SamplerState:null)||SpineEngine.Graphics.Graphic.DefaultSamplerState,(material!=null?material.DepthStencilState:null)||Microsoft.Xna.Framework.Graphics.DepthStencilState.None,Microsoft.Xna.Framework.Graphics.RasterizerState.CullNone,material!=null?material.Effect:null);$t=Bridge.getEnumerator(batch.Meshes);try{while($t.moveNext())mesh=$t.Current,mesh.Draw(SpineEngine.Graphics.Graphic.SpriteBatch)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}SpineEngine.Graphics.Graphic.SpriteBatch.End()}}}});Bridge.define("SpineEngine.Graphics.Materials.Material",{fields:{BlendState:null,DepthStencilState:null,Effect:null,SamplerState:null},ctors:{init:function(){this.BlendState=Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend;this.DepthStencilState=Microsoft.Xna.Framework.Graphics.DepthStencilState.None;this.SamplerState=SpineEngine.Graphics.Graphic.DefaultSamplerState}},methods:{OnPreRender:function(camera,entity){},Update:function(gameTime){}}});Bridge.define("SpineEngine.Graphics.Meshes.IMesh",{methods:{MoveMesh:function(offset){this.ApplyTransformMesh(Microsoft.Xna.Framework.Matrix.CreateTranslation(offset.$clone()))},ScaleMesh:function(scale){this.ScaleMesh$1(this.GetCenter(),scale.$clone())},ScaleMesh$1:function(origin,scale){this.ApplyTransformMesh(Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3.op_UnaryNegation(origin.$clone())));this.ApplyTransformMesh(Microsoft.Xna.Framework.Matrix.CreateScale(scale.$clone()));this.ApplyTransformMesh(Microsoft.Xna.Framework.Matrix.CreateTranslation(origin.$clone()))},RotateMesh$1:function(rotationRadians){this.RotateMesh(this.GetCenter(),rotationRadians)},RotateMesh:function(origin,rotationRadians){rotationRadians!==0&&(this.ApplyTransformMesh(Microsoft.Xna.Framework.Matrix.CreateTranslation(Microsoft.Xna.Framework.Vector3.op_UnaryNegation(origin.$clone()))),this.ApplyTransformMesh(Microsoft.Xna.Framework.Matrix.CreateRotationZ(rotationRadians)),this.ApplyTransformMesh(Microsoft.Xna.Framework.Matrix.CreateTranslation(origin.$clone())))}}});Bridge.define("SpineEngine.Graphics.Meshes.MeshBatch",{fields:{Meshes:null},ctors:{init:function(){this.Meshes=new(System.Collections.Generic.List$1(SpineEngine.Graphics.Meshes.IMesh).ctor)}},methods:{Draw:function(texture,destRect,srcRect,color,depth){depth===void 0&&(depth=0);var mesh=SpineEngine.Utils.Collections.Pool$1(SpineEngine.Graphics.Meshes.SpriteMesh).Obtain();return mesh.Build(texture,destRect.$clone(),srcRect.$clone(),color.$clone(),depth),this.Meshes.add(mesh),mesh},Clear:function(){for(var i=0;i<this.Meshes.Count;i=i+1|0)SpineEngine.Utils.Collections.Pool$1(SpineEngine.Graphics.Meshes.SpriteMesh).Free(Bridge.cast(this.Meshes.getItem(i),SpineEngine.Graphics.Meshes.SpriteMesh));this.Meshes.clear()}}});Bridge.define("SpineEngine.Graphics.Renderers.RendererList",{fields:{renderers:null},props:{Count:{get:function(){return this.renderers.Count}}},ctors:{init:function(){this.renderers=new(System.Collections.Generic.List$1(SpineEngine.Graphics.Renderers.Renderer).ctor)}},methods:{NotifyEnd:function(){for(var i=0;i<this.renderers.Count;i=i+1|0)this.renderers.getItem(i).End()},Add:function(renderer){this.renderers.add(renderer);this.renderers.Sort()},Get:function(T){for(var i=0;i<this.renderers.Count;i=i+1|0)if(Bridge.is(this.renderers.getItem(i),T))return Bridge.cast(this.renderers.getItem(i),T);return null},GetAll:function(){return this.renderers},Remove:function(renderer){this.renderers.remove(renderer)}}});Bridge.define("SpineEngine.Graphics.RenderProcessors.RenderProcessor",{inherits:function(){return[System.IComparable$1(SpineEngine.Graphics.RenderProcessors.RenderProcessor)]},fields:{ExecutionOrder:0,BlendState:null,Effect:null,Enabled:!1,SamplerState:null,Batch:null,Material:null},alias:["compareTo",["System$IComparable$1$SpineEngine$Graphics$RenderProcessors$RenderProcessor$compareTo","System$IComparable$1$compareTo"]],ctors:{init:function(){this.BlendState=Microsoft.Xna.Framework.Graphics.BlendState.Opaque;this.SamplerState=SpineEngine.Graphics.Graphic.DefaultSamplerState;this.Batch=new SpineEngine.Graphics.Meshes.MeshBatch;this.Material=new SpineEngine.Graphics.Materials.Material},ctor:function(executionOrder,effect){effect===void 0&&(effect=null);this.$initialize();this.Enabled=!0;this.ExecutionOrder=executionOrder;this.Effect=effect}},methods:{compareTo:function(other){return Bridge.compare(this.ExecutionOrder,other.ExecutionOrder)},OnAddedToScene:function(scene){},Render:function(source,destination){this.DrawFullScreenQuad(source,destination)},Update:function(gameTime){},Unload:function(){},DrawFullScreenQuad:function(texture,renderTarget,effect){effect===void 0&&(effect=null);this.Material.Effect=effect||this.Effect;this.Material.BlendState=this.BlendState;this.Material.SamplerState=this.SamplerState;this.Material.DepthStencilState=Microsoft.Xna.Framework.Graphics.DepthStencilState.None;this.Batch.Clear();this.Batch.Draw(texture,SpineEngine.Maths.RectangleF.op_Implicit$1(renderTarget.Bounds.$clone()),SpineEngine.Maths.RectangleF.op_Implicit$1(texture.Bounds.$clone()),Microsoft.Xna.Framework.Color.White.$clone(),0);SpineEngine.Graphics.Graphic.Draw(renderTarget,Microsoft.Xna.Framework.Color.Black.$clone(),this.Batch,this.Material)}}});Bridge.define("SpineEngine.Graphics.RenderProcessors.Impl.FinalRenderer.LastState",{props:{RenderTarget:null,RenderTarget2:null,Material:null,Camera:null}});Bridge.define("SpineEngine.Graphics.RenderProcessors.RenderProcessorList",{fields:{postProcessors:null,destinationRenderTarget:null,Scene:null,sourceRenderTarget:null},props:{Count:{get:function(){return this.postProcessors.Count}}},ctors:{init:function(){this.postProcessors=new(System.Collections.Generic.List$1(SpineEngine.Graphics.RenderProcessors.RenderProcessor).ctor)},ctor:function(scene){this.$initialize();this.Scene=scene}},methods:{NotifyEnd:function(){for(var i=0;i<this.postProcessors.Count;i=i+1|0)this.postProcessors.getItem(i).Unload()},NotifyPostProcess:function(finalRenderTarget,finalRenderDestinationRect,sceneRenderTarget){var i,tmpRenderTarget;if(this.postProcessors.Count!==0){for((this.destinationRenderTarget==null||this.destinationRenderTarget.Bounds.Width!==sceneRenderTarget.Width||this.destinationRenderTarget.Bounds.Height!==sceneRenderTarget.Height)&&(this.destinationRenderTarget!=null?this.destinationRenderTarget.Dispose():null,this.destinationRenderTarget=new Microsoft.Xna.Framework.Graphics.RenderTarget2D.$ctor2(SpineEngine.Core.Instance.GraphicsDevice,sceneRenderTarget.Width,sceneRenderTarget.Height,!1,SpineEngine.Core.Instance.Screen.BackBufferFormat,SpineEngine.Core.Instance.Screen.PreferredDepthStencilFormat,0,Microsoft.Xna.Framework.Graphics.RenderTargetUsage.DiscardContents)),(this.sourceRenderTarget==null||this.sourceRenderTarget.Bounds.Width!==sceneRenderTarget.Width||this.sourceRenderTarget.Bounds.Height!==sceneRenderTarget.Height)&&(this.sourceRenderTarget!=null?this.sourceRenderTarget.Dispose():null,this.sourceRenderTarget=new Microsoft.Xna.Framework.Graphics.RenderTarget2D.$ctor2(SpineEngine.Core.Instance.GraphicsDevice,sceneRenderTarget.Width,sceneRenderTarget.Height,!1,SpineEngine.Core.Instance.Screen.BackBufferFormat,SpineEngine.Core.Instance.Screen.PreferredDepthStencilFormat,0,Microsoft.Xna.Framework.Graphics.RenderTargetUsage.DiscardContents)),i=0;i<(this.postProcessors.Count-1|0);i=i+1|0)this.postProcessors.getItem(i).Enabled&&(this.postProcessors.getItem(i).Render(this.sourceRenderTarget,this.destinationRenderTarget),tmpRenderTarget=this.sourceRenderTarget,this.sourceRenderTarget=this.destinationRenderTarget,this.destinationRenderTarget=tmpRenderTarget);this.postProcessors.getItem(this.postProcessors.Count-1|0).Render(this.sourceRenderTarget,finalRenderTarget)}},Add:function(renderProcessor){this.postProcessors.add(renderProcessor);this.postProcessors.Sort();renderProcessor.OnAddedToScene(this.Scene)},Remove:function(step){this.postProcessors.remove(step)},Get:function(T){for(var i=0;i<this.postProcessors.Count;i=i+1|0)if(Bridge.is(this.postProcessors.getItem(i),T))return Bridge.as(this.postProcessors.getItem(i),T);return null},GetAll:function(){return new(System.Collections.ObjectModel.ReadOnlyCollection$1(SpineEngine.Graphics.RenderProcessors.RenderProcessor))(this.postProcessors)},NotifyUpdate:function(gameTime){for(var i=0;i<this.postProcessors.Count;i=i+1|0)this.postProcessors.getItem(i).Update(gameTime)}}});Bridge.define("SpineEngine.Graphics.RenderTexture",{inherits:[System.IDisposable],statics:{methods:{op_Implicit:function(tex){return tex!=null?tex.RenderTarget:null}}},fields:{RenderTarget:null,ResizeBehavior:0},alias:["Dispose","System$IDisposable$Dispose"],ctors:{init:function(){this.ResizeBehavior=SpineEngine.Graphics.RenderTexture.RenderTextureResizeBehavior.SizeToSceneRenderTarget},ctor:function(){SpineEngine.Graphics.RenderTexture.$ctor4.call(this,SpineEngine.Core.Instance.Screen.Width,SpineEngine.Core.Instance.Screen.Height,SpineEngine.Core.Instance.Screen.BackBufferFormat,SpineEngine.Core.Instance.Screen.PreferredDepthStencilFormat)},$ctor1:function(preferredDepthFormat){SpineEngine.Graphics.RenderTexture.$ctor4.call(this,SpineEngine.Core.Instance.Screen.Width,SpineEngine.Core.Instance.Screen.Height,SpineEngine.Core.Instance.Screen.BackBufferFormat,preferredDepthFormat)},$ctor2:function(width,height){SpineEngine.Graphics.RenderTexture.$ctor4.call(this,width,height,SpineEngine.Core.Instance.Screen.BackBufferFormat,SpineEngine.Core.Instance.Screen.PreferredDepthStencilFormat)},$ctor3:function(width,height,preferredDepthFormat){SpineEngine.Graphics.RenderTexture.$ctor4.call(this,width,height,SpineEngine.Core.Instance.Screen.BackBufferFormat,preferredDepthFormat)},$ctor4:function(width,height,preferredFormat,preferredDepthFormat){this.$initialize();this.RenderTarget=new Microsoft.Xna.Framework.Graphics.RenderTarget2D.$ctor2(SpineEngine.Core.Instance.GraphicsDevice,width,height,!1,preferredFormat,preferredDepthFormat,0,Microsoft.Xna.Framework.Graphics.RenderTargetUsage.PreserveContents)}},methods:{Dispose:function(){this.RenderTarget==null||this.RenderTarget.IsDisposed||(this.RenderTarget.Dispose(),this.RenderTarget=null)},OnSceneBackBufferSizeChanged:function(newWidth,newHeight){switch(this.ResizeBehavior){case SpineEngine.Graphics.RenderTexture.RenderTextureResizeBehavior.None:break;case SpineEngine.Graphics.RenderTexture.RenderTextureResizeBehavior.SizeToSceneRenderTarget:this.Resize(newWidth,newHeight);break;case SpineEngine.Graphics.RenderTexture.RenderTextureResizeBehavior.SizeToScreen:this.Resize(SpineEngine.Core.Instance.Screen.Width,SpineEngine.Core.Instance.Screen.Height);break}},Resize:function(width,height){if(this.RenderTarget.Width!==width||this.RenderTarget.Height!==height||this.RenderTarget.IsDisposed){var depthFormat=this.RenderTarget.DepthStencilFormat;this.Dispose();this.RenderTarget=new Microsoft.Xna.Framework.Graphics.RenderTarget2D.$ctor2(SpineEngine.Core.Instance.GraphicsDevice,width,height,!1,SpineEngine.Core.Instance.Screen.BackBufferFormat,depthFormat,0,Microsoft.Xna.Framework.Graphics.RenderTargetUsage.PreserveContents)}}}});Bridge.define("SpineEngine.Graphics.RenderTexture.RenderTextureResizeBehavior",{$kind:"nested enum",statics:{fields:{None:0,SizeToSceneRenderTarget:1,SizeToScreen:2}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy",{statics:{fields:{None:null,ExactFit:null,Stretch:null,NoBorder:null,NoBorderPixelPerfect:null,ShowAll:null,ShowAllPixelPerfect:null,FixedHeight:null,FixedHeightPixelPerfect:null,FixedWidth:null,FixedWidthPixelPerfect:null,BestFit:null},ctors:{init:function(){this.None=new SpineEngine.Graphics.ResolutionPolicy.NoneSceneResolutionPolicy;this.ExactFit=new SpineEngine.Graphics.ResolutionPolicy.ExactFitSceneResolutionPolicy;this.Stretch=new SpineEngine.Graphics.ResolutionPolicy.StretchSceneResolutionPolicy;this.NoBorder=new SpineEngine.Graphics.ResolutionPolicy.NoBorderSceneResolutionPolicy;this.NoBorderPixelPerfect=new SpineEngine.Graphics.ResolutionPolicy.NoBorderPixelPerfectSceneResolutionPolicy;this.ShowAll=new SpineEngine.Graphics.ResolutionPolicy.ShowAllSceneResolutionPolicy;this.ShowAllPixelPerfect=new SpineEngine.Graphics.ResolutionPolicy.ShowAllPixelPerfectSceneResolutionPolicy;this.FixedHeight=new SpineEngine.Graphics.ResolutionPolicy.FixedHeightSceneResolutionPolicy;this.FixedHeightPixelPerfect=new SpineEngine.Graphics.ResolutionPolicy.FixedHeightPixelPerfectSceneResolutionPolicy;this.FixedWidth=new SpineEngine.Graphics.ResolutionPolicy.FixedWidthSceneResolutionPolicy;this.FixedWidthPixelPerfect=new SpineEngine.Graphics.ResolutionPolicy.FixedWidthPixelPerfectSceneResolutionPolicy;this.BestFit=new SpineEngine.Graphics.ResolutionPolicy.BestFitSceneResolutionPolicy}}}});Bridge.define("SpineEngine.Graphics.SpriteEffect",{inherits:[Microsoft.Xna.Framework.Graphics.Effect],statics:{fields:{EffectAssetName:null},ctors:{init:function(){this.EffectAssetName="SpineEngine/effects/SpriteEffect"}}},fields:{matrixTransformParam:null},ctors:{ctor:function(cloneSource){this.$initialize();Microsoft.Xna.Framework.Graphics.Effect.ctor.call(this,cloneSource);this.matrixTransformParam=this.Parameters.getItem$1("MatrixTransform")}},methods:{SetMatrixTransform:function(matrixTransform){this.matrixTransformParam.SetValue$1(matrixTransform.v.$clone())}}});Bridge.define("SpineEngine.Graphics.Transitions.IProgressEffect",{$kind:"interface"});Bridge.define("SpineEngine.Graphics.Transitions.SceneTransition",{fields:{OnTransitionCompleted:null,Batch:null,Material:null,SceneLoadAction:null},props:{Effect:null,PreviousSceneRender:null},ctors:{init:function(){var $t;this.Batch=new SpineEngine.Graphics.Meshes.MeshBatch;this.Material=($t=new SpineEngine.Graphics.Materials.Material,$t.BlendState=Microsoft.Xna.Framework.Graphics.BlendState.NonPremultiplied,$t.SamplerState=SpineEngine.Graphics.Graphic.DefaultSamplerState,$t.DepthStencilState=Microsoft.Xna.Framework.Graphics.DepthStencilState.None,$t)},ctor:function(){this.$initialize();this.PreviousSceneRender=new Microsoft.Xna.Framework.Graphics.RenderTarget2D.$ctor2(SpineEngine.Core.Instance.GraphicsDevice,SpineEngine.Core.Instance.Screen.Width,SpineEngine.Core.Instance.Screen.Height,!1,SpineEngine.Core.Instance.Screen.BackBufferFormat,Microsoft.Xna.Framework.Graphics.DepthFormat.None,0,Microsoft.Xna.Framework.Graphics.RenderTargetUsage.PreserveContents)}},methods:{SetNextScene:function(){SpineEngine.Core.Instance.Scene=this.SceneLoadAction()},PreRender:function(){},Render:function(){this.Batch.Clear();this.Batch.Draw(this.PreviousSceneRender,SpineEngine.Maths.RectangleF.op_Implicit$1(this.PreviousSceneRender.Bounds.$clone()),SpineEngine.Maths.RectangleF.op_Implicit$1(this.PreviousSceneRender.Bounds.$clone()),Microsoft.Xna.Framework.Color.White.$clone(),0);this.Material.Effect=this.Effect;SpineEngine.Graphics.Graphic.Draw(null,Microsoft.Xna.Framework.Color.Black.$clone(),this.Batch,this.Material)},TransitionComplete:function(){var $t;SpineEngine.Core.Instance.SceneTransition=null;($t=this.PreviousSceneRender)!=null?$t.Dispose():null;this.PreviousSceneRender=null;Bridge.staticEquals(this.OnTransitionCompleted,null)?null:this.OnTransitionCompleted()},TickEffectProgressProperty:function(effect,duration,easeType,reverseDirection){var $step=0,$jumpFromFinally,$returnValue,start,end,startAt,elapsed,step,$async_e,$enumerator=new Bridge.GeneratorEnumerator(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:easeType===void 0&&(easeType=17);reverseDirection===void 0&&(reverseDirection=!1);start=reverseDirection?1:0;end=reverseDirection?0:1;startAt=System.DateTime.getNow();$step=1;continue;case 1:if(System.DateTime.subdd(System.DateTime.getNow(),startAt).getTotalSeconds()<duration){$step=2;continue}$step=4;continue;case 2:return elapsed=System.DateTime.subdd(System.DateTime.getNow(),startAt).getTotalSeconds(),step=SpineEngine.Maths.Easing.Lerps.Ease$8(easeType,start,end,elapsed,duration),effect.SpineEngine$Graphics$Transitions$IProgressEffect$Progress=step,$enumerator.current=null,$step=3,!0;case 3:$step=1;continue;case 4:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator}}});Bridge.define("SpineEngine.Maths.Bezier",{statics:{methods:{GetPoint$1:function(p0,p1,p2,t){t=SpineEngine.Maths.Mathf.Clamp01(t);var oneMinusT=1-t;return Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Multiply$2(oneMinusT*oneMinusT,p0.$clone()),Microsoft.Xna.Framework.Vector2.op_Multiply$2(2*oneMinusT*t,p1.$clone())),Microsoft.Xna.Framework.Vector2.op_Multiply$2(t*t,p2.$clone()))},GetPoint:function(start,firstControlPoint,secondControlPoint,end,t){t=SpineEngine.Maths.Mathf.Clamp01(t);var oneMinusT=1-t;return Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Multiply$2(oneMinusT*oneMinusT*oneMinusT,start.$clone()),Microsoft.Xna.Framework.Vector2.op_Multiply$2(3*oneMinusT*oneMinusT*t,firstControlPoint.$clone())),Microsoft.Xna.Framework.Vector2.op_Multiply$2(3*oneMinusT*t*t,secondControlPoint.$clone())),Microsoft.Xna.Framework.Vector2.op_Multiply$2(t*t*t,end.$clone()))},GetFirstDerivative$1:function(p0,p1,p2,t){return Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Multiply$2(2*(1-t),Microsoft.Xna.Framework.Vector2.op_Subtraction(p1.$clone(),p0.$clone())),Microsoft.Xna.Framework.Vector2.op_Multiply$2(2*t,Microsoft.Xna.Framework.Vector2.op_Subtraction(p2.$clone(),p1.$clone())))},GetFirstDerivative:function(start,firstControlPoint,secondControlPoint,end,t){t=SpineEngine.Maths.Mathf.Clamp01(t);var oneMinusT=1-t;return Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Addition(Microsoft.Xna.Framework.Vector2.op_Multiply$2(3*oneMinusT*oneMinusT,Microsoft.Xna.Framework.Vector2.op_Subtraction(firstControlPoint.$clone(),start.$clone())),Microsoft.Xna.Framework.Vector2.op_Multiply$2(6*oneMinusT*t,Microsoft.Xna.Framework.Vector2.op_Subtraction(secondControlPoint.$clone(),firstControlPoint.$clone()))),Microsoft.Xna.Framework.Vector2.op_Multiply$2(3*t*t,Microsoft.Xna.Framework.Vector2.op_Subtraction(end.$clone(),secondControlPoint.$clone())))},RecursiveGetOptimizedDrawingPoints:function(start,firstCtrlPoint,secondCtrlPoint,end,points,distanceTolerance){var pt12=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.op_Addition(start.$clone(),firstCtrlPoint.$clone()),2),pt23=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.op_Addition(firstCtrlPoint.$clone(),secondCtrlPoint.$clone()),2),pt34=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.op_Addition(secondCtrlPoint.$clone(),end.$clone()),2),pt123=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.op_Addition(pt12.$clone(),pt23.$clone()),2),pt234=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.op_Addition(pt23.$clone(),pt34.$clone()),2),pt1234=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.op_Addition(pt123.$clone(),pt234.$clone()),2),deltaLine=Microsoft.Xna.Framework.Vector2.op_Subtraction(end.$clone(),start.$clone()),d2=Math.abs((firstCtrlPoint.X-end.X)*deltaLine.Y-(firstCtrlPoint.Y-end.Y)*deltaLine.X),d3=Math.abs((secondCtrlPoint.X-end.X)*deltaLine.Y-(secondCtrlPoint.Y-end.Y)*deltaLine.X);if((d2+d3)*(d2+d3)<distanceTolerance*(deltaLine.X*deltaLine.X+deltaLine.Y*deltaLine.Y)){points.add(pt1234.$clone());return}SpineEngine.Maths.Bezier.RecursiveGetOptimizedDrawingPoints(start.$clone(),pt12.$clone(),pt123.$clone(),pt1234.$clone(),points,distanceTolerance);SpineEngine.Maths.Bezier.RecursiveGetOptimizedDrawingPoints(pt1234.$clone(),pt234.$clone(),pt34.$clone(),end.$clone(),points,distanceTolerance)},GetOptimizedDrawingPoints:function(start,firstCtrlPoint,secondCtrlPoint,end,distanceTolerance){distanceTolerance===void 0&&(distanceTolerance=1);var points=SpineEngine.Utils.Collections.Pool$1(System.Collections.Generic.List$1(Microsoft.Xna.Framework.Vector2)).Obtain();return points.add(start.$clone()),SpineEngine.Maths.Bezier.RecursiveGetOptimizedDrawingPoints(start.$clone(),firstCtrlPoint.$clone(),secondCtrlPoint.$clone(),end.$clone(),points,distanceTolerance),points.add(end.$clone()),points}}}});Bridge.define("SpineEngine.Maths.BezierSpline",{fields:{points:null,curveCount:0},ctors:{init:function(){this.points=new(System.Collections.Generic.List$1(Microsoft.Xna.Framework.Vector2).ctor)}},methods:{PointIndexAtTime:function(t){var i;return t.v>=1?(t.v=1,i=this.points.Count-4|0):(t.v=SpineEngine.Maths.Mathf.Clamp01(t.v)*this.curveCount,i=Bridge.Int.clip32(t.v),t.v-=i,i=Bridge.Int.mul(i,3)),i},SetControlPoint:function(index,point){if(index%3==0){var delta=Microsoft.Xna.Framework.Vector2.op_Subtraction(point.$clone(),this.points.getItem(index).$clone());index>0&&this.points.setItem(index-1|0,Microsoft.Xna.Framework.Vector2.op_Addition(this.points.getItem(index-1|0).$clone(),delta.$clone()));(index+1|0)<this.points.Count&&this.points.setItem(index+1|0,Microsoft.Xna.Framework.Vector2.op_Addition(this.points.getItem(index+1|0).$clone(),delta.$clone()))}this.points.setItem(index,point.$clone())},GetPointAtTime:function(t){t={v:t};var i=this.PointIndexAtTime(t);return SpineEngine.Maths.Bezier.GetPoint(this.points.getItem(i).$clone(),this.points.getItem(i+1|0).$clone(),this.points.getItem(i+2|0).$clone(),this.points.getItem(i+3|0).$clone(),t.v)},GetVelocityAtTime:function(t){t={v:t};var i=this.PointIndexAtTime(t);return SpineEngine.Maths.Bezier.GetFirstDerivative(this.points.getItem(i).$clone(),this.points.getItem(i+1|0).$clone(),this.points.getItem(i+2|0).$clone(),this.points.getItem(i+3|0).$clone(),t.v)},GetDirectionAtTime:function(t){return Microsoft.Xna.Framework.Vector2.Normalize(this.GetVelocityAtTime(t))},AddCurve:function(start,firstControlPoint,secondControlPoint,end){this.points.Count===0&&this.points.add(start.$clone());this.points.add(firstControlPoint.$clone());this.points.add(secondControlPoint.$clone());this.points.add(end.$clone());this.curveCount=Bridge.Int.div(this.points.Count-1|0,3)|0},Reset:function(){this.points.clear()},GetDrawingPoints:function(totalSegments){for(var t,result=System.Array.init(totalSegments,function(){return new Microsoft.Xna.Framework.Vector2},Microsoft.Xna.Framework.Vector2),i=0;i<totalSegments;i=i+1|0)t=i/totalSegments,result[System.Array.index(i,result)]=this.GetPointAtTime(t);return result}}});Bridge.define("SpineEngine.Maths.Easing.EaseHelper",{statics:{methods:{OppositeEaseType:function(easeType){switch(easeType){case SpineEngine.Maths.Easing.EaseType.Linear:return easeType;case SpineEngine.Maths.Easing.EaseType.BackIn:return SpineEngine.Maths.Easing.EaseType.BackOut;case SpineEngine.Maths.Easing.EaseType.BackOut:return SpineEngine.Maths.Easing.EaseType.BackIn;case SpineEngine.Maths.Easing.EaseType.BackInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.BounceIn:return SpineEngine.Maths.Easing.EaseType.BounceOut;case SpineEngine.Maths.Easing.EaseType.BounceOut:return SpineEngine.Maths.Easing.EaseType.BounceIn;case SpineEngine.Maths.Easing.EaseType.BounceInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.CircIn:return SpineEngine.Maths.Easing.EaseType.CircOut;case SpineEngine.Maths.Easing.EaseType.CircOut:return SpineEngine.Maths.Easing.EaseType.CircIn;case SpineEngine.Maths.Easing.EaseType.CircInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.CubicIn:return SpineEngine.Maths.Easing.EaseType.CubicOut;case SpineEngine.Maths.Easing.EaseType.CubicOut:return SpineEngine.Maths.Easing.EaseType.CubicIn;case SpineEngine.Maths.Easing.EaseType.CubicInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.ElasticIn:return SpineEngine.Maths.Easing.EaseType.ElasticOut;case SpineEngine.Maths.Easing.EaseType.ElasticOut:return SpineEngine.Maths.Easing.EaseType.ElasticIn;case SpineEngine.Maths.Easing.EaseType.ElasticInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.Punch:return easeType;case SpineEngine.Maths.Easing.EaseType.ExpoIn:return SpineEngine.Maths.Easing.EaseType.ExpoOut;case SpineEngine.Maths.Easing.EaseType.ExpoOut:return SpineEngine.Maths.Easing.EaseType.ExpoIn;case SpineEngine.Maths.Easing.EaseType.ExpoInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.QuadIn:return SpineEngine.Maths.Easing.EaseType.QuadOut;case SpineEngine.Maths.Easing.EaseType.QuadOut:return SpineEngine.Maths.Easing.EaseType.QuadIn;case SpineEngine.Maths.Easing.EaseType.QuadInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.QuartIn:return SpineEngine.Maths.Easing.EaseType.QuartOut;case SpineEngine.Maths.Easing.EaseType.QuartOut:return SpineEngine.Maths.Easing.EaseType.QuartIn;case SpineEngine.Maths.Easing.EaseType.QuartInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.QuintIn:return SpineEngine.Maths.Easing.EaseType.QuintOut;case SpineEngine.Maths.Easing.EaseType.QuintOut:return SpineEngine.Maths.Easing.EaseType.QuintIn;case SpineEngine.Maths.Easing.EaseType.QuintInOut:return easeType;case SpineEngine.Maths.Easing.EaseType.SineIn:return SpineEngine.Maths.Easing.EaseType.SineOut;case SpineEngine.Maths.Easing.EaseType.SineOut:return SpineEngine.Maths.Easing.EaseType.SineIn;case SpineEngine.Maths.Easing.EaseType.SineInOut:return easeType;default:return easeType}},Ease:function(easeType,t,duration){switch(easeType){case SpineEngine.Maths.Easing.EaseType.Linear:return SpineEngine.Maths.Easing.Easing.Linear.EaseNone(t,duration);case SpineEngine.Maths.Easing.EaseType.BackIn:return SpineEngine.Maths.Easing.Easing.Back.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.BackOut:return SpineEngine.Maths.Easing.Easing.Back.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.BackInOut:return SpineEngine.Maths.Easing.Easing.Back.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.BounceIn:return SpineEngine.Maths.Easing.Easing.Bounce.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.BounceOut:return SpineEngine.Maths.Easing.Easing.Bounce.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.BounceInOut:return SpineEngine.Maths.Easing.Easing.Bounce.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.CircIn:return SpineEngine.Maths.Easing.Easing.Circular.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.CircOut:return SpineEngine.Maths.Easing.Easing.Circular.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.CircInOut:return SpineEngine.Maths.Easing.Easing.Circular.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.CubicIn:return SpineEngine.Maths.Easing.Easing.Cubic.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.CubicOut:return SpineEngine.Maths.Easing.Easing.Cubic.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.CubicInOut:return SpineEngine.Maths.Easing.Easing.Cubic.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.ElasticIn:return SpineEngine.Maths.Easing.Easing.Elastic.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.ElasticOut:return SpineEngine.Maths.Easing.Easing.Elastic.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.ElasticInOut:return SpineEngine.Maths.Easing.Easing.Elastic.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.Punch:return SpineEngine.Maths.Easing.Easing.Elastic.Punch(t,duration);case SpineEngine.Maths.Easing.EaseType.ExpoIn:return SpineEngine.Maths.Easing.Easing.Exponential.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.ExpoOut:return SpineEngine.Maths.Easing.Easing.Exponential.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.ExpoInOut:return SpineEngine.Maths.Easing.Easing.Exponential.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.QuadIn:return SpineEngine.Maths.Easing.Easing.Quadratic.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.QuadOut:return SpineEngine.Maths.Easing.Easing.Quadratic.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.QuadInOut:return SpineEngine.Maths.Easing.Easing.Quadratic.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.QuartIn:return SpineEngine.Maths.Easing.Easing.Quartic.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.QuartOut:return SpineEngine.Maths.Easing.Easing.Quartic.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.QuartInOut:return SpineEngine.Maths.Easing.Easing.Quartic.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.QuintIn:return SpineEngine.Maths.Easing.Easing.Quintic.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.QuintOut:return SpineEngine.Maths.Easing.Easing.Quintic.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.QuintInOut:return SpineEngine.Maths.Easing.Easing.Quintic.EaseInOut(t,duration);case SpineEngine.Maths.Easing.EaseType.SineIn:return SpineEngine.Maths.Easing.Easing.Sinusoidal.EaseIn(t,duration);case SpineEngine.Maths.Easing.EaseType.SineOut:return SpineEngine.Maths.Easing.Easing.Sinusoidal.EaseOut(t,duration);case SpineEngine.Maths.Easing.EaseType.SineInOut:return SpineEngine.Maths.Easing.Easing.Sinusoidal.EaseInOut(t,duration);default:return SpineEngine.Maths.Easing.Easing.Linear.EaseNone(t,duration)}}}}});Bridge.define("SpineEngine.Maths.Easing.EaseType",{$kind:"enum",statics:{fields:{Linear:0,SineIn:1,SineOut:2,SineInOut:3,QuadIn:4,QuadOut:5,QuadInOut:6,CubicIn:7,CubicOut:8,CubicInOut:9,QuartIn:10,QuartOut:11,QuartInOut:12,QuintIn:13,QuintOut:14,QuintInOut:15,ExpoIn:16,ExpoOut:17,ExpoInOut:18,CircIn:19,CircOut:20,CircInOut:21,ElasticIn:22,ElasticOut:23,ElasticInOut:24,Punch:25,BackIn:26,BackOut:27,BackInOut:28,BounceIn:29,BounceOut:30,BounceInOut:31}}});Bridge.define("SpineEngine.Maths.Easing.Easing");Bridge.define("SpineEngine.Maths.Easing.Easing.Back",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return(t=t/d)*t*(2.70158*t-1.70158)},EaseOut:function(t,d){return(t=t/d-1)*t*(2.70158*t+1.70158)+1},EaseInOut:function(t,d){var s=1.70158;return(t=t/(d/2))<1?.5*t*t*(((s=s*1.525)+1)*t-s):.5*((t=t-2)*t*(((s=s*1.525)+1)*t+s)+2)}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Bounce",{$kind:"nested class",statics:{methods:{EaseOut:function(t,d){return(t=t/d)<.36363636363636365?7.5625*t*t:t<.72727272727272729?7.5625*(t=t-.545454562)*t+.75:t<.90909090909090906?7.5625*(t=t-.8181818)*t+.9375:7.5625*(t=t-.954545438)*t+.984375},EaseIn:function(t,d){return 1-SpineEngine.Maths.Easing.Easing.Bounce.EaseOut(d-t,d)},EaseInOut:function(t,d){return t<d/2?SpineEngine.Maths.Easing.Easing.Bounce.EaseIn(t*2,d)*.5:SpineEngine.Maths.Easing.Easing.Bounce.EaseOut(t*2-d,d)*.5+.5}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Circular",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return-(SpineEngine.Maths.Mathf.Sqrt(1-(t=t/d)*t)-1)},EaseOut:function(t,d){return SpineEngine.Maths.Mathf.Sqrt(1-(t=t/d-1)*t)},EaseInOut:function(t,d){return(t=t/(d/2))<1?-.5*(SpineEngine.Maths.Mathf.Sqrt(1-t*t)-1):.5*(SpineEngine.Maths.Mathf.Sqrt(1-(t=t-2)*t)+1)}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Cubic",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return(t=t/d)*t*t},EaseOut:function(t,d){return(t=t/d-1)*t*t+1},EaseInOut:function(t,d){return(t=t/(d/2))<1?.5*t*t*t:.5*((t=t-2)*t*t+2)}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Elastic",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){if(t===0)return 0;if((t=t/d)==1)return 1;var p=d*.3,s=p/4;return-(1*SpineEngine.Maths.Mathf.Pow(2,10*(t=t-1))*SpineEngine.Maths.Mathf.Sin((t*d-s)*6.28318548/p))},EaseOut:function(t,d){if(t===0)return 0;if((t=t/d)==1)return 1;var p=d*.3,s=p/4;return 1*SpineEngine.Maths.Mathf.Pow(2,-10*t)*SpineEngine.Maths.Mathf.Sin((t*d-s)*6.28318548/p)+1},EaseInOut:function(t,d){if(t===0)return 0;if((t=t/(d/2))==2)return 1;var p=d*.450000018,s=p/4;return t<1?-.5*SpineEngine.Maths.Mathf.Pow(2,10*(t=t-1))*SpineEngine.Maths.Mathf.Sin((t*d-s)*6.28318548/p):SpineEngine.Maths.Mathf.Pow(2,-10*(t=t-1))*SpineEngine.Maths.Mathf.Sin((t*d-s)*6.28318548/p)*.5+1},Punch:function(t,d){if(t===0||(t=t/d)==1)return 0;var P=.3;return SpineEngine.Maths.Mathf.Pow(2,-10*t)*SpineEngine.Maths.Mathf.Sin(t*6.28318548/P)}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Exponential",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return t===0?0:SpineEngine.Maths.Mathf.Pow(2,10*(t/d-1))},EaseOut:function(t,d){return t===d?1:-SpineEngine.Maths.Mathf.Pow(2,-10*t/d)+1},EaseInOut:function(t,d){return t===0?0:t===d?1:(t=t/(d/2))<1?.5*SpineEngine.Maths.Mathf.Pow(2,10*(t-1)):.5*(-SpineEngine.Maths.Mathf.Pow(2,-10*--t)+2)}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Linear",{$kind:"nested class",statics:{methods:{EaseNone:function(t,d){return t/d}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Quadratic",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return(t=t/d)*t},EaseOut:function(t,d){return-1*(t=t/d)*(t-2)},EaseInOut:function(t,d){return(t=t/(d/2))<1?.5*t*t:-.5*(--t*(t-2)-1)}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Quartic",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return(t=t/d)*t*t*t},EaseOut:function(t,d){return-1*((t=t/d-1)*t*t*t-1)},EaseInOut:function(t,d){return(t/=d/2,t<1)?.5*t*t*t*t:(t-=2,-.5*(t*t*t*t-2))}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Quintic",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return(t=t/d)*t*t*t*t},EaseOut:function(t,d){return(t=t/d-1)*t*t*t*t+1},EaseInOut:function(t,d){return(t=t/(d/2))<1?.5*t*t*t*t*t:.5*((t=t-2)*t*t*t*t+2)}}}});Bridge.define("SpineEngine.Maths.Easing.Easing.Sinusoidal",{$kind:"nested class",statics:{methods:{EaseIn:function(t,d){return-1*SpineEngine.Maths.Mathf.Cos(t/d*1.57079637)+1},EaseOut:function(t,d){return SpineEngine.Maths.Mathf.Sin(t/d*1.57079637)},EaseInOut:function(t,d){return-.5*(SpineEngine.Maths.Mathf.Cos(Microsoft.Xna.Framework.MathHelper.Pi*t/d)-1)}}}});Bridge.define("SpineEngine.Maths.Easing.Lerps",{statics:{methods:{Lerp$7:function(from,to,t){return from+(to-from)*t},Lerp$4:function(from,to,t){return new Microsoft.Xna.Framework.Vector2.$ctor2(from.X+(to.X-from.X)*t,from.Y+(to.Y-from.Y)*t)},Lerp$5:function(from,to,t){return new Microsoft.Xna.Framework.Vector3.$ctor3(from.X+(to.X-from.X)*t,from.Y+(to.Y-from.Y)*t,from.Z+(to.Z-from.Z)*t)},Lerp$6:function(from,to,t){return new Microsoft.Xna.Framework.Vector4.$ctor4(from.X+(to.X-from.X)*t,from.Y+(to.Y-from.Y)*t,from.Z+(to.Z-from.Z)*t,from.W+(to.W-from.W)*t)},Lerp:function(from,to,t){var t255=Bridge.Int.clip32(t*255);return new Microsoft.Xna.Framework.Color.$ctor7(from.R+(Bridge.Int.div(Bridge.Int.mul(to.R-from.R|0,t255),255)|0)|0,from.G+(Bridge.Int.div(Bridge.Int.mul(to.G-from.G|0,t255),255)|0)|0,from.B+(Bridge.Int.div(Bridge.Int.mul(to.B-from.B|0,t255),255)|0)|0,from.A+(Bridge.Int.div(Bridge.Int.mul(to.A-from.A|0,t255),255)|0)|0)},Lerp$1:function(from,to,t){var t255=Bridge.Int.clip32(t*255);return new Microsoft.Xna.Framework.Color.$ctor7(from.v.R+(Bridge.Int.div(Bridge.Int.mul(to.v.R-from.v.R|0,t255),255)|0)|0,from.v.G+(Bridge.Int.div(Bridge.Int.mul(to.v.G-from.v.G|0,t255),255)|0)|0,from.v.B+(Bridge.Int.div(Bridge.Int.mul(to.v.B-from.v.B|0,t255),255)|0)|0,from.v.A+(Bridge.Int.div(Bridge.Int.mul(to.v.A-from.v.A|0,t255),255)|0)|0)},Lerp$2:function(from,to,t){return new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.clip32(from.X+(to.X-from.X|0)*t),Bridge.Int.clip32(from.Y+(to.Y-from.Y|0)*t),Bridge.Int.clip32(from.Width+(to.Width-from.Width|0)*t),Bridge.Int.clip32(from.Height+(to.Height-from.Height|0)*t))},Lerp$3:function(from,to,t){return new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.clip32(from.v.X+(to.v.X-from.v.X|0)*t),Bridge.Int.clip32(from.v.Y+(to.v.Y-from.v.Y|0)*t),Bridge.Int.clip32(from.v.Width+(to.v.Width-from.v.Width|0)*t),Bridge.Int.clip32(from.v.Height+(to.v.Height-from.v.Height|0)*t))},LerpTowards$3:function(from,to,remainingFactorPerSecond,deltaTime){return SpineEngine.Maths.Easing.Lerps.Lerp$7(from,to,1-SpineEngine.Maths.Mathf.Pow(remainingFactorPerSecond,deltaTime))},LerpTowards:function(from,to,remainingFactorPerSecond,deltaTime){return SpineEngine.Maths.Easing.Lerps.Lerp$4(from.$clone(),to.$clone(),1-SpineEngine.Maths.Mathf.Pow(remainingFactorPerSecond,deltaTime))},LerpTowards$2:function(from,to,remainingFactorPerSecond,deltaTime){return SpineEngine.Maths.Easing.Lerps.Lerp$5(from.$clone(),to.$clone(),1-SpineEngine.Maths.Mathf.Pow(remainingFactorPerSecond,deltaTime))},LerpTowards$1:function(followerCurrentPosition,targetPreviousPosition,targetCurrentPosition,smoothFactor,deltaTime){var targetDiff=Microsoft.Xna.Framework.Vector3.op_Subtraction(targetCurrentPosition.$clone(),targetPreviousPosition.$clone()),temp=Microsoft.Xna.Framework.Vector3.op_Addition(Microsoft.Xna.Framework.Vector3.op_Subtraction(followerCurrentPosition.$clone(),targetPreviousPosition.$clone()),Microsoft.Xna.Framework.Vector3.op_Division$1(targetDiff.$clone(),smoothFactor*deltaTime));return Microsoft.Xna.Framework.Vector3.op_Addition(Microsoft.Xna.Framework.Vector3.op_Subtraction(targetCurrentPosition.$clone(),Microsoft.Xna.Framework.Vector3.op_Division$1(targetDiff.$clone(),smoothFactor*deltaTime)),Microsoft.Xna.Framework.Vector3.op_Multiply$1(temp.$clone(),SpineEngine.Maths.Mathf.Exp(-smoothFactor*deltaTime)))},AngleLerp:function(from,to,t){var toMinusFrom=new Microsoft.Xna.Framework.Vector2.$ctor2(SpineEngine.Maths.Mathf.DeltaAngle(from.X,to.X),SpineEngine.Maths.Mathf.DeltaAngle(from.Y,to.Y));return new Microsoft.Xna.Framework.Vector2.$ctor2(from.X+toMinusFrom.X*t,from.Y+toMinusFrom.Y*t)},Ease$8:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp$7(from,to,SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease$5:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp$4(from.$clone(),to.$clone(),SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease$6:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp$5(from.$clone(),to.$clone(),SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease$7:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp$6(from.$clone(),to.$clone(),SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease$2:function(easeType,from,to,t,duration){return Microsoft.Xna.Framework.Quaternion.Lerp(from.$clone(),to.$clone(),SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp(from.$clone(),to.$clone(),SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease$1:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp$1(from,to,SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease$3:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp$2(from.$clone(),to.$clone(),SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},Ease$4:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.Lerp$3(from,to,SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))},EaseAngle:function(easeType,from,to,t,duration){return SpineEngine.Maths.Easing.Lerps.AngleLerp(from.$clone(),to.$clone(),SpineEngine.Maths.Easing.EaseHelper.Ease(easeType,t,duration))}}}});Bridge.define("SpineEngine.Maths.Flags",{statics:{methods:{IsFlagSet:function(self,flag){return(self&flag)!=0},IsUnshiftedFlagSet:function(self,flag){return flag=1<<flag,(self&flag)!=0},SetFlagExclusive:function(self,flag){self.v=1<<flag},SetFlag:function(self,flag){self.v=self.v|1<<flag},UnsetFlag:function(self,flag){flag=1<<flag;self.v=self.v&~flag},InvertFlags:function(self){self.v=~self.v},BinaryStringRepresentation:function(self,leftPadWidth){return leftPadWidth===void 0&&(leftPadWidth=10),System.String.alignString(System.Convert.toStringInBase(self,2,9),leftPadWidth,48)}}}});Bridge.define("SpineEngine.Maths.IncrementalFloats",{$kind:"struct",statics:{methods:{getDefaultValue:function(){return new SpineEngine.Maths.IncrementalFloats}}},fields:{Remainder:0},ctors:{ctor:function(){this.$initialize()}},methods:{Update:function(amount){this.Remainder+=amount;var motion=SpineEngine.Maths.Mathf.TruncateToInt(this.Remainder);return this.Remainder-=motion,motion},Reset:function(){this.Remainder=0},getHashCode:function(){return Bridge.addHash([6905310465,this.Remainder])},equals:function(o){return Bridge.is(o,SpineEngine.Maths.IncrementalFloats)?Bridge.equals(this.Remainder,o.Remainder):!1},$clone:function(to){var s=to||new SpineEngine.Maths.IncrementalFloats;return s.Remainder=this.Remainder,s}}});Bridge.define("SpineEngine.Maths.Mathf",{statics:{fields:{Epsilon:0,Deg2Rad:0,Rad2Deg:0},ctors:{init:function(){this.Epsilon=1e-5;this.Deg2Rad=.0174532924;this.Rad2Deg=57.29578}},methods:{Round:function(f){return Bridge.Math.round(f,0,6)},Ceil:function(f){return Math.ceil(f)},CeilToInt:function(f){return Bridge.Int.clip32(Math.ceil(f))},FastCeilToInt:function(y){return 32768-Bridge.Int.clip32(32768-y)|0},Floor:function(f){return Math.floor(f)},FloorToInt:function(f){return Bridge.Int.clip32(Math.floor(f))},FastFloorToInt:function(x){return Bridge.Int.clip32(x+32768)-32768|0},RoundToInt:function(f){return Bridge.Int.clip32(Bridge.Math.round(f,0,6))},TruncateToInt:function(f){return Bridge.Int.clip32(Bridge.Int.trunc(f))},Clamp01:function(value){return value<0?0:value>1?1:value},Clamp$1:function(value,min,max){return value<min?min:value>max?max:value},Clamp:function(value,min,max){return value=value>max?max:value,value<min?min:value},Snap:function(value,increment){return SpineEngine.Maths.Mathf.Round(value/increment)*increment},Snap$1:function(value,increment,offset){return SpineEngine.Maths.Mathf.Round((value-offset)/increment)*increment+offset},InverseLerp:function(from,to,t){if(from<to){if(t<from)return 0;if(t>to)return 1}else{if(t<to)return 1;if(t>from)return 0}return(t-from)/(to-from)},LerpAngle:function(a,b,t){var num=SpineEngine.Maths.Mathf.Repeat(b-a,360);return num>180&&(num-=360),a+num*SpineEngine.Maths.Mathf.Clamp01(t)},Repeat:function(t,length){return t-SpineEngine.Maths.Mathf.Floor(t/length)*length},IncrementWithWrap:function(t,length){return(t=t+1|0,t===length)?0:t},DecrementWithWrap:function(t,length){return(t=t-1|0,t<0)?length-1|0:t},PingPong:function(t,length){return t=SpineEngine.Maths.Mathf.Repeat(t,length*2),length-Math.abs(t-length)},SignThreshold:function(value,threshold){return Math.abs(value)>=threshold?Bridge.Int.sign(value):0},DeltaAngle:function(current,target){var num=SpineEngine.Maths.Mathf.Repeat(target-current,360);return num>180&&(num-=360),num},DeltaAngleRadians:function(current,target){var num=SpineEngine.Maths.Mathf.Repeat(target-current,6.28318548);return num>Microsoft.Xna.Framework.MathHelper.Pi&&(num-=6.28318548),num},Approach:function(start,end,shift){return start<end?Math.min(start+shift,end):Math.max(start-shift,end)},ApproachAngle:function(start,end,shift){var deltaAngle=SpineEngine.Maths.Mathf.DeltaAngle(start,end);return-shift<deltaAngle&&deltaAngle<shift?end:SpineEngine.Maths.Mathf.Repeat(SpineEngine.Maths.Mathf.Approach(start,start+deltaAngle,shift),360)},ApproachAngleRadians:function(start,end,shift){var deltaAngleRadians=SpineEngine.Maths.Mathf.DeltaAngleRadians(start,end);return-shift<deltaAngleRadians&&deltaAngleRadians<shift?end:SpineEngine.Maths.Mathf.Repeat(SpineEngine.Maths.Mathf.Approach(start,start+deltaAngleRadians,shift),Microsoft.Xna.Framework.MathHelper.TwoPi)},Approximately:function(value1,value2,tolerance){return tolerance===void 0&&(tolerance=1e-5),Math.abs(value1-value2)<=tolerance},MinOf:function(a,b,c){return Math.min(a,Math.min(b,c))},MinOf$1:function(a,b,c,d){return Math.min(a,Math.min(b,Math.min(c,d)))},MinOf$2:function(a,b,c,d,e){return Math.min(a,Math.min(b,Math.min(c,Math.min(d,e))))},MaxOf:function(a,b,c){return Math.max(a,Math.max(b,c))},MaxOf$1:function(a,b,c,d){return Math.max(a,Math.max(b,Math.max(c,d)))},MaxOf$2:function(a,b,c,d,e){return Math.max(a,Math.max(b,Math.max(c,Math.max(d,e))))},Between$1:function(value,min,max){return value>=min&&value<=max},Between:function(value,min,max){return value>=min&&value<=max},IsEven:function(value){return value%2==0},IsOdd:function(value){return value%2!=0},RoundWithRoundedAmount:function(value,roundedAmount){var rounded=SpineEngine.Maths.Mathf.Round(value);return roundedAmount.v=value-rounded*SpineEngine.Maths.Mathf.Round(value/rounded),rounded},Map01:function(value,min,max){return(value-min)*1/(max-min)},Map10:function(value,min,max){return 1-SpineEngine.Maths.Mathf.Map01(value,min,max)},Map:function(value,leftMin,leftMax,rightMin,rightMax){return rightMin+(value-leftMin)*(rightMax-rightMin)/(leftMax-leftMin)},RoundToNearest:function(value,roundToNearest){return SpineEngine.Maths.Mathf.Round(value/roundToNearest)*roundToNearest},WithinEpsilon:function(floatA,floatB){return Math.abs(floatA-floatB)<SpineEngine.Maths.Mathf.Epsilon},Hypotenuse:function(x,y){return SpineEngine.Maths.Mathf.Sqrt(x*x+y*y)},ClosestPowerOfTwoGreaterThan:function(x){return x=x-1|0,x=x|x>>1,x=x|x>>2,x=x|x>>4,x=x|x>>8,x=x|x>>16,x+1|0},Sqrt:function(val){return Math.sqrt(val)},Pow:function(x,y){return Math.pow(x,y)},Sin:function(f){return Math.sin(f)},Cos:function(f){return Math.cos(f)},Acos:function(f){return Math.acos(f)},Exp:function(power){return Math.exp(power)},Atan2:function(y,x){return Math.atan2(y,x)},Abs:function(deltaAngle){return Math.abs(deltaAngle)},AngleBetweenVectors:function(from,to){return SpineEngine.Maths.Mathf.Atan2(to.Y-from.Y,to.X-from.X)},AngleToVector:function(angleRadians,length){return new Microsoft.Xna.Framework.Vector2.$ctor2(SpineEngine.Maths.Mathf.Cos(angleRadians)*length,SpineEngine.Maths.Mathf.Sin(angleRadians)*length)},RotateAround$1:function(position,speed,elapsedSeconds){var time=elapsedSeconds*speed,x=SpineEngine.Maths.Mathf.Cos(time),y=SpineEngine.Maths.Mathf.Sin(time);return new Microsoft.Xna.Framework.Vector2.$ctor2(position.X+x,position.Y+y)},RotateAround:function(point,center,angleInDegrees){angleInDegrees=Microsoft.Xna.Framework.MathHelper.ToRadians(angleInDegrees);var cos=SpineEngine.Maths.Mathf.Cos(angleInDegrees),sin=SpineEngine.Maths.Mathf.Sin(angleInDegrees),rotatedX=cos*(point.X-center.X)-sin*(point.Y-center.Y)+center.X,rotatedY=sin*(point.X-center.X)+cos*(point.Y-center.Y)+center.Y;return new Microsoft.Xna.Framework.Vector2.$ctor2(rotatedX,rotatedY)},PointOnCircle:function(circleCenter,radius,angleInDegrees){var $t,radians=Microsoft.Xna.Framework.MathHelper.ToRadians(angleInDegrees);return $t=new Microsoft.Xna.Framework.Vector2.ctor,$t.X=SpineEngine.Maths.Mathf.Cos(radians)*radius+circleCenter.X,$t.Y=SpineEngine.Maths.Mathf.Sin(radians)*radius+circleCenter.Y,$t},Lissajou:function(elapsedSeconds,xFrequency,yFrequency,xMagnitude,yMagnitude,phase){xFrequency===void 0&&(xFrequency=2);yFrequency===void 0&&(yFrequency=3);xMagnitude===void 0&&(xMagnitude=1);yMagnitude===void 0&&(yMagnitude=1);phase===void 0&&(phase=0);var x=SpineEngine.Maths.Mathf.Sin(elapsedSeconds*xFrequency+phase)*xMagnitude,y=SpineEngine.Maths.Mathf.Cos(elapsedSeconds*yFrequency)*yMagnitude;return new Microsoft.Xna.Framework.Vector2.$ctor2(x,y)},LissajouDamped:function(elapsedSeconds,xFrequency,yFrequency,xMagnitude,yMagnitude,phase,damping,oscillationInterval){xFrequency===void 0&&(xFrequency=2);yFrequency===void 0&&(yFrequency=3);xMagnitude===void 0&&(xMagnitude=1);yMagnitude===void 0&&(yMagnitude=1);phase===void 0&&(phase=.5);damping===void 0&&(damping=0);oscillationInterval===void 0&&(oscillationInterval=5);var wrappedTime=SpineEngine.Maths.Mathf.PingPong(elapsedSeconds,oscillationInterval),damped=SpineEngine.Maths.Mathf.Pow(Microsoft.Xna.Framework.MathHelper.E,-damping*wrappedTime),x=damped*SpineEngine.Maths.Mathf.Sin(elapsedSeconds*xFrequency+phase)*xMagnitude,y=damped*SpineEngine.Maths.Mathf.Cos(elapsedSeconds*yFrequency)*yMagnitude;return new Microsoft.Xna.Framework.Vector2.$ctor2(x,y)}}}});Bridge.define("SpineEngine.Maths.QuadTree.IQuadTreeStorable",{$kind:"interface"});Bridge.define("SpineEngine.Maths.RectangleF",{inherits:function(){return[System.IEquatable$1(SpineEngine.Maths.RectangleF)]},$kind:"struct",statics:{props:{Empty:null,One:null},ctors:{init:function(){this.Empty=new SpineEngine.Maths.RectangleF;this.One=new SpineEngine.Maths.RectangleF;this.One=new SpineEngine.Maths.RectangleF.$ctor2(0,0,1,1)}},methods:{Intersect:function(value1,value2){value1={v:value1};value2={v:value2};var rectangle={v:new SpineEngine.Maths.RectangleF};return SpineEngine.Maths.RectangleF.Intersect$1(value1,value2,rectangle),rectangle.v.$clone()},Intersect$1:function(value1,value2,result){if(value1.v.Intersects(value2.v.$clone())){var rightSide=Math.min(value1.v.X+value1.v.Width,value2.v.X+value2.v.Width),leftSide=Math.max(value1.v.X,value2.v.X),topSide=Math.max(value1.v.Y,value2.v.Y),bottomSide=Math.min(value1.v.Y+value1.v.Height,value2.v.Y+value2.v.Height);result.v=new SpineEngine.Maths.RectangleF.$ctor2(leftSide,topSide,rightSide-leftSide,bottomSide-topSide)}else result.v=new SpineEngine.Maths.RectangleF.$ctor2(0,0,0,0)},Union:function(value1,value2){var x=Math.min(value1.X,value2.X),y=Math.min(value1.Y,value2.Y);return new SpineEngine.Maths.RectangleF.$ctor2(x,y,Math.max(value1.Right,value2.Right)-x,Math.max(value1.Bottom,value2.Bottom)-y)},Union$1:function(value1,value2,result){result.v.X=Math.min(value1.v.X,value2.v.X);result.v.Y=Math.min(value1.v.Y,value2.v.Y);result.v.Width=Math.max(value1.v.Right,value2.v.Right)-result.v.X;result.v.Height=Math.max(value1.v.Bottom,value2.v.Bottom)-result.v.Y},op_Equality:function(a,b){return a.X===b.X&&a.Y===b.Y&&a.Width===b.Width&&a.Height===b.Height},op_Inequality:function(a,b){return!SpineEngine.Maths.RectangleF.op_Equality(a.$clone(),b.$clone())},op_Implicit:function(self){return new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.clip32(self.X),Bridge.Int.clip32(self.Y),Bridge.Int.clip32(self.Width),Bridge.Int.clip32(self.Height))},op_Implicit$1:function(self){return new SpineEngine.Maths.RectangleF.$ctor2(self.X,self.Y,self.Width,self.Height)},getDefaultValue:function(){return new SpineEngine.Maths.RectangleF}}},fields:{X:0,Y:0,Width:0,Height:0},props:{Left:{get:function(){return this.X}},Right:{get:function(){return this.X+this.Width}},Top:{get:function(){return this.Y}},Bottom:{get:function(){return this.Y+this.Height}},IsEmpty:{get:function(){return this.Width===0&&this.Height===0&&this.X===0&&this.Y===0}},Location:{get:function(){return new Microsoft.Xna.Framework.Vector2.$ctor2(this.X,this.Y)},set:function(value){this.X=value.X;this.Y=value.Y}},Size:{get:function(){return new Microsoft.Xna.Framework.Vector2.$ctor2(this.Width,this.Height)},set:function(value){this.Width=value.X;this.Height=value.Y}},DebugDisplayString:{get:function(){return System.String.concat(Bridge.box(this.X,System.Single,System.Single.format,System.Single.getHashCode),"  ",Bridge.box(this.Y,System.Single,System.Single.format,System.Single.getHashCode),"  ",Bridge.box(this.Width,System.Single,System.Single.format,System.Single.getHashCode),"  ",Bridge.box(this.Height,System.Single,System.Single.format,System.Single.getHashCode))}}},alias:["equalsT","System$IEquatable$1$SpineEngine$Maths$RectangleF$equalsT"],ctors:{$ctor2:function(x,y,width,height){this.$initialize();this.X=x;this.Y=y;this.Width=width;this.Height=height},$ctor1:function(location,size){this.$initialize();this.X=location.X;this.Y=location.Y;this.Width=size.X;this.Height=size.Y},ctor:function(){this.$initialize()}},methods:{Contains$3:function(x,y){return this.X<=x&&x<this.X+this.Width&&this.Y<=y&&y<this.Y+this.Height},Contains$4:function(x,y){return this.X<=x&&x<this.X+this.Width&&this.Y<=y&&y<this.Y+this.Height},Contains:function(value){return this.X<=value.X&&value.X<this.X+this.Width&&this.Y<=value.Y&&value.Y<this.Y+this.Height},Contains$5:function(value,result){result.v=this.X<=value.v.X&&value.v.X<this.X+this.Width&&this.Y<=value.v.Y&&value.v.Y<this.Y+this.Height},Contains$1:function(value){return this.X<=value.X&&value.X<this.X+this.Width&&this.Y<=value.Y&&value.Y<this.Y+this.Height},Contains$6:function(value,result){result.v=this.X<=value.v.X&&value.v.X<this.X+this.Width&&this.Y<=value.v.Y&&value.v.Y<this.Y+this.Height},Contains$2:function(value){return this.X<=value.X&&value.X+value.Width<=this.X+this.Width&&this.Y<=value.Y&&value.Y+value.Height<=this.Y+this.Height},Contains$7:function(value,result){result.v=this.X<=value.v.X&&value.v.X+value.v.Width<=this.X+this.Width&&this.Y<=value.v.Y&&value.v.Y+value.v.Height<=this.Y+this.Height},equals:function(obj){var rect=new SpineEngine.Maths.RectangleF;return System.Nullable.liftne(SpineEngine.Maths.RectangleF.op_Inequality,rect=Bridge.as(obj,SpineEngine.Maths.RectangleF),null)&&SpineEngine.Maths.RectangleF.op_Equality(this,rect.$clone())},equalsT:function(other){return SpineEngine.Maths.RectangleF.op_Equality(this,other.$clone())},getHashCode:function(){return Bridge.Int.clip32(this.X)^Bridge.Int.clip32(this.Y)^Bridge.Int.clip32(this.Width)^Bridge.Int.clip32(this.Height)},Inflate:function(horizontalAmount,verticalAmount){this.X-=horizontalAmount;this.Y-=verticalAmount;this.Width+=Bridge.Int.mul(horizontalAmount,2);this.Height+=Bridge.Int.mul(verticalAmount,2)},Inflate$1:function(horizontalAmount,verticalAmount){this.X-=horizontalAmount;this.Y-=verticalAmount;this.Width+=horizontalAmount*2;this.Height+=verticalAmount*2},Intersects:function(value){return value.Left<this.Right&&this.Left<value.Right&&value.Top<this.Bottom&&this.Top<value.Bottom},Intersects$2:function(value,result){result.v=value.v.Left<this.Right&&this.Left<value.v.Right&&value.v.Top<this.Bottom&&this.Top<value.v.Bottom},Intersects$1:function(other){var result={};return this.Intersects$2(other,result),result.v},Offset$2:function(offsetX,offsetY){this.X+=offsetX;this.Y+=offsetY},Offset$3:function(offsetX,offsetY){this.X+=offsetX;this.Y+=offsetY},Offset:function(amount){this.X+=amount.X;this.Y+=amount.Y},Offset$1:function(amount){this.X+=amount.X;this.Y+=amount.Y},toString:function(){return System.String.format("X:{0}, Y:{1}, Width: {2}, Height: {3}",Bridge.box(this.X,System.Single,System.Single.format,System.Single.getHashCode),Bridge.box(this.Y,System.Single,System.Single.format,System.Single.getHashCode),Bridge.box(this.Width,System.Single,System.Single.format,System.Single.getHashCode),Bridge.box(this.Height,System.Single,System.Single.format,System.Single.getHashCode))},$clone:function(to){var s=to||new SpineEngine.Maths.RectangleF;return s.X=this.X,s.Y=this.Y,s.Width=this.Width,s.Height=this.Height,s}}});Bridge.define("SpineEngine.Maths.TransformationUtils",{statics:{methods:{GetTransformation:function(entity){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7,$t8,$t9,localMatrixChanged;if(entity==null)return null;var localPosition=($t=($t1=entity.GetComponent(SpineEngine.ECS.Components.PositionComponent))!=null?$t1.Position:null,$t!=null?$t:Microsoft.Xna.Framework.Vector2.Zero),localScale=($t2=($t3=entity.GetComponent(SpineEngine.ECS.Components.ScaleComponent))!=null?$t3.Scale:null,$t2!=null?$t2:Microsoft.Xna.Framework.Vector2.One),localRotation=($t4=($t5=entity.GetComponent(SpineEngine.ECS.Components.RotateComponent))!=null?$t5.Rotation:null,$t4!=null?$t4:0),localParent=SpineEngine.Maths.TransformationUtils.GetTransformation(($t6=entity.GetComponent(SpineEngine.ECS.Components.ParentComponent))!=null?$t6.Parent:null),positionalEntity=entity.Cache.GetOrAddData(SpineEngine.Maths.TransformationUtils.Transformation,"TransformationUtils",$asm.$.SpineEngine.Maths.TransformationUtils.f1),parentChanged=!1,parentMatrix=($t7=localParent!=null?localParent.LocalTransformMatrix:null,$t7!=null?$t7:Microsoft.Xna.Framework.Matrix.Identity),parentRotate=($t8=localParent!=null?localParent.Rotate:null,$t8!=null?$t8:0),parentScale=($t9=localParent!=null?localParent.Scale:null,$t9!=null?$t9:Microsoft.Xna.Framework.Vector2.One);return Microsoft.Xna.Framework.Matrix.op_Inequality(parentMatrix.$clone(),positionalEntity.ParentTransformMatrix.$clone())&&(positionalEntity.ParentTransformMatrix=parentMatrix.$clone(),parentChanged=!0),localMatrixChanged=!1,(Microsoft.Xna.Framework.Vector2.op_Inequality(positionalEntity.SelfPosition.$clone(),localPosition.$clone())||parentChanged)&&(positionalEntity.SelfPosition=localPosition.$clone(),positionalEntity.Position=Microsoft.Xna.Framework.Vector2.Transform(positionalEntity.SelfPosition.$clone(),parentMatrix.$clone()),positionalEntity.RebuildPositionalMatrix(),localMatrixChanged=!0),(positionalEntity.SelfRotate!==localRotation||parentChanged)&&(positionalEntity.SelfRotate=localRotation,positionalEntity.Rotate=localRotation+parentRotate,positionalEntity.RebuildRotateMatrix(),localMatrixChanged=!0),(Microsoft.Xna.Framework.Vector2.op_Inequality(positionalEntity.SelfScale.$clone(),localScale.$clone())||parentChanged)&&(positionalEntity.SelfScale=localScale.$clone(),positionalEntity.Scale=Microsoft.Xna.Framework.Vector2.op_Multiply(localScale.$clone(),parentScale.$clone()),positionalEntity.RebuildScaleMatrix(),localMatrixChanged=!0),localMatrixChanged&&positionalEntity.RebuildLocalTransformationMatrixPositionalEntity(),positionalEntity}}}});Bridge.ns("SpineEngine.Maths.TransformationUtils",$asm.$);Bridge.apply($asm.$.SpineEngine.Maths.TransformationUtils,{f1:function(){return new SpineEngine.Maths.TransformationUtils.Transformation}});Bridge.define("SpineEngine.Maths.TransformationUtils.Transformation",{$kind:"nested class",fields:{LocalTransformMatrix:null,ParentTransformMatrix:null,Position:null,PositionMatrix:null,Rotate:0,RotateMatrix:null,Scale:null,ScaleMatrix:null,SelfPosition:null,SelfRotate:0,SelfScale:null},ctors:{init:function(){this.LocalTransformMatrix=new Microsoft.Xna.Framework.Matrix;this.ParentTransformMatrix=new Microsoft.Xna.Framework.Matrix;this.Position=new Microsoft.Xna.Framework.Vector2;this.PositionMatrix=new Microsoft.Xna.Framework.Matrix;this.RotateMatrix=new Microsoft.Xna.Framework.Matrix;this.Scale=new Microsoft.Xna.Framework.Vector2;this.ScaleMatrix=new Microsoft.Xna.Framework.Matrix;this.SelfPosition=new Microsoft.Xna.Framework.Vector2;this.SelfScale=new Microsoft.Xna.Framework.Vector2;this.LocalTransformMatrix=Microsoft.Xna.Framework.Matrix.Identity.$clone();this.ParentTransformMatrix=Microsoft.Xna.Framework.Matrix.Identity.$clone();this.PositionMatrix=Microsoft.Xna.Framework.Matrix.Identity.$clone();this.RotateMatrix=Microsoft.Xna.Framework.Matrix.Identity.$clone();this.Scale=Microsoft.Xna.Framework.Vector2.One.$clone();this.ScaleMatrix=Microsoft.Xna.Framework.Matrix.Identity.$clone();this.SelfScale=Microsoft.Xna.Framework.Vector2.One.$clone()}},methods:{RebuildLocalTransformationMatrixPositionalEntity:function(){return Microsoft.Xna.Framework.Matrix.Multiply$2(Bridge.ref(this,"ScaleMatrix"),Bridge.ref(this,"RotateMatrix"),Bridge.ref(this,"LocalTransformMatrix")),Microsoft.Xna.Framework.Matrix.Multiply$2(Bridge.ref(this,"LocalTransformMatrix"),Bridge.ref(this,"PositionMatrix"),Bridge.ref(this,"LocalTransformMatrix")),this.LocalTransformMatrix.$clone()},RebuildScaleMatrix:function(){Microsoft.Xna.Framework.Matrix.CreateScale$5(this.Scale.X,this.Scale.Y,1,Bridge.ref(this,"ScaleMatrix"))},RebuildRotateMatrix:function(){Microsoft.Xna.Framework.Matrix.CreateRotationZ$1(this.Rotate,Bridge.ref(this,"RotateMatrix"))},RebuildPositionalMatrix:function(){Microsoft.Xna.Framework.Matrix.CreateTranslation$3(this.Position.X,this.Position.Y,0,Bridge.ref(this,"PositionMatrix"))}}});Bridge.define("SpineEngine.Maths.Triangulator",{statics:{methods:{Triangulate:function(points,arePointsCcw){var count,triangleIndices,triPrev,triNext,i,iterations,index,k;for(arePointsCcw===void 0&&(arePointsCcw=!0),count=points.length,triangleIndices=SpineEngine.Utils.Collections.Pool$1(System.Collections.Generic.List$1(System.Int32)).Obtain(),triangleIndices.clear(),triPrev={v:System.Array.init(12,0,System.Int32)},triNext={v:System.Array.init(12,0,System.Int32)},triNext.v.length<count&&System.Array.resize(triNext,Math.max(Bridge.Int.mul(triNext.v.length,2),count),0),triPrev.v.length<count&&System.Array.resize(triPrev,Math.max(Bridge.Int.mul(triPrev.v.length,2),count),0),i=0;i<count;i=i+1|0)triPrev.v[System.Array.index(i,triPrev.v)]=i-1|0,triNext.v[System.Array.index(i,triNext.v)]=i+1|0;for(triPrev.v[System.Array.index(0,triPrev.v)]=count-1|0,triNext.v[System.Array.index(count-1|0,triNext.v)]=0,iterations=0,index=0;count>3&&iterations<500;){iterations=iterations+1|0;var isEar=!0,a=points[System.Array.index(triPrev.v[System.Array.index(index,triPrev.v)],points)].$clone(),b=points[System.Array.index(index,points)].$clone(),c=points[System.Array.index(triNext.v[System.Array.index(index,triNext.v)],points)].$clone();if(SpineEngine.Maths.Triangulator.IsTriangleCcw(a.$clone(),b.$clone(),c.$clone())){k=triNext.v[System.Array.index(triNext.v[System.Array.index(index,triNext.v)],triNext.v)];do{if(SpineEngine.Maths.Triangulator.TestPointTriangle(points[System.Array.index(k,points)].$clone(),a.$clone(),b.$clone(),c.$clone())){isEar=!1;break}k=triNext.v[System.Array.index(k,triNext.v)]}while(k!==triPrev.v[System.Array.index(index,triPrev.v)])}else isEar=!1;isEar?(triangleIndices.add(triPrev.v[System.Array.index(index,triPrev.v)]),triangleIndices.add(index),triangleIndices.add(triNext.v[System.Array.index(index,triNext.v)]),triNext.v[System.Array.index(triPrev.v[System.Array.index(index,triPrev.v)],triNext.v)]=triNext.v[System.Array.index(index,triNext.v)],triPrev.v[System.Array.index(triNext.v[System.Array.index(index,triNext.v)],triPrev.v)]=triPrev.v[System.Array.index(index,triPrev.v)],count=count-1|0,index=triPrev.v[System.Array.index(index,triPrev.v)]):index=triNext.v[System.Array.index(index,triNext.v)]}return triangleIndices.add(triPrev.v[System.Array.index(index,triPrev.v)]),triangleIndices.add(index),triangleIndices.add(triNext.v[System.Array.index(index,triNext.v)]),arePointsCcw||triangleIndices.Reverse(),triangleIndices},IsTriangleCcw:function(a,center,c){return SpineEngine.Maths.Triangulator.Cross(Microsoft.Xna.Framework.Vector2.op_Subtraction(center.$clone(),a.$clone()),Microsoft.Xna.Framework.Vector2.op_Subtraction(c.$clone(),center.$clone()))<0},TestPointTriangle:function(point,a,b,c){return SpineEngine.Maths.Triangulator.Cross(Microsoft.Xna.Framework.Vector2.op_Subtraction(point.$clone(),a.$clone()),Microsoft.Xna.Framework.Vector2.op_Subtraction(b.$clone(),a.$clone()))<0?!1:SpineEngine.Maths.Triangulator.Cross(Microsoft.Xna.Framework.Vector2.op_Subtraction(point.$clone(),b.$clone()),Microsoft.Xna.Framework.Vector2.op_Subtraction(c.$clone(),b.$clone()))<0?!1:SpineEngine.Maths.Triangulator.Cross(Microsoft.Xna.Framework.Vector2.op_Subtraction(point.$clone(),c.$clone()),Microsoft.Xna.Framework.Vector2.op_Subtraction(a.$clone(),c.$clone()))<0?!1:!0},Cross:function(u,v){return u.Y*v.X-u.X*v.Y}}}});Bridge.define("SpineEngine.Utils.BuildTargetUtils",{statics:{methods:{TryParseFloat:function(str,newValue){return System.Single.tryParse(str,System.Globalization.CultureInfo.invariantCulture,newValue)},InvokeMethod:function(materialMethod,target){return Bridge.Reflection.midel(materialMethod,Bridge.unbox(target))(null)},GetAssembly:function(type){return Bridge.Reflection.getTypeAssembly(type)},GetFieldInfo:function(targetObject,fieldName){return SpineEngine.Utils.BuildTargetUtils.GetFieldInfo$1(Bridge.getType(targetObject),fieldName)},GetFieldInfo$1:function(type,fieldName){var fieldInfo=null;do fieldInfo=Bridge.Reflection.getMembers(type,4,308,fieldName),type=Bridge.Reflection.getBaseType(type);while(fieldInfo==null&&type!=null);return fieldInfo},GetFields:function(type){return Bridge.Reflection.getMembers(type,4,52)},GetFieldValue:function(targetObject,fieldName){var fieldInfo=SpineEngine.Utils.BuildTargetUtils.GetFieldInfo(targetObject,fieldName);return Bridge.Reflection.fieldAccess(fieldInfo,Bridge.unbox(targetObject))},GetPropertyInfo:function(targetObject,propertyName){return Bridge.Reflection.getMembers(Bridge.getType(targetObject),16,308,propertyName)},GetProperties:function(type){return Bridge.Reflection.getMembers(type,16,52)},GetPropertyGetter:function(prop){return prop.g},GetPropertySetter:function(prop){return prop.s},GetPropertyValue:function(targetObject,propertyName){var propInfo=SpineEngine.Utils.BuildTargetUtils.GetPropertyInfo(targetObject,propertyName),methodInfo=SpineEngine.Utils.BuildTargetUtils.GetPropertyGetter(propInfo);return Bridge.Reflection.midel(methodInfo,Bridge.unbox(targetObject)).apply(null,Bridge.unbox(System.Array.init([],System.Object)))},GetMethods:function(type){return Bridge.Reflection.getMembers(type,8,52)},GetMethodInfo:function(targetObject,methodName){return SpineEngine.Utils.BuildTargetUtils.GetMethodInfo$2(Bridge.getType(targetObject),methodName)},GetMethodInfo$1:function(targetObject,methodName,parameters){return SpineEngine.Utils.BuildTargetUtils.GetMethodInfo$2(Bridge.getType(targetObject),methodName,parameters)},GetMethodInfo$2:function(type,methodName,parameters){return(parameters===void 0&&(parameters=null),parameters==null)?Bridge.Reflection.getMembers(type,8,308,methodName):Bridge.Reflection.getMembers(type,8,308,methodName,parameters)},CreateDelegate:function(T,targetObject,methodInfo){return Bridge.cast(Bridge.unbox(Bridge.Reflection.midel(methodInfo,Bridge.unbox(targetObject)),T),T)},SetterForProperty:function(T,targetObject,propertyName){var propInfo=SpineEngine.Utils.BuildTargetUtils.GetPropertyInfo(targetObject,propertyName);return propInfo==null?Bridge.getDefaultValue(T):SpineEngine.Utils.BuildTargetUtils.CreateDelegate(T,targetObject,propInfo.s)},GetterForProperty:function(T,targetObject,propertyName){var propInfo=SpineEngine.Utils.BuildTargetUtils.GetPropertyInfo(targetObject,propertyName);return propInfo==null?Bridge.getDefaultValue(T):SpineEngine.Utils.BuildTargetUtils.CreateDelegate(T,targetObject,propInfo.g)},GetCustomAttributes:function(T,prop){return System.Linq.Enumerable.from(System.Attribute.getCustomAttributes(prop,T)).select(function(x){return Bridge.cast(x,T)}).ToArray(T)},GetCustomAttribute:function(T,prop){return System.Linq.Enumerable.from(System.Attribute.getCustomAttributes(prop,T)).select(function(x){return Bridge.cast(x,T)}).firstOrDefault(null,null)},GetCustomAttribute$1:function(T,type){return System.Linq.Enumerable.from(Bridge.Reflection.getAttributes(type,T,!0)).select(function(x){return Bridge.cast(x,T)}).firstOrDefault(null,null)},IsEnum:function(valueType){return Bridge.Reflection.isEnum(valueType)},IsValueType:function(valueType){return Bridge.Reflection.isValueType(valueType)}}}});Bridge.define("SpineEngine.Utils.Collections.Deque$1",function(T){return{inherits:[System.Collections.Generic.IList$1(T)],statics:{fields:{DefaultCapacity:0},ctors:{init:function(){this.DefaultCapacity=16}},methods:{CheckArgumentsOutOfRange:function(length,offset,count){if(offset<0)throw new System.ArgumentOutOfRangeException.$ctor4("offset","Invalid offset "+offset);if(count<0)throw new System.ArgumentOutOfRangeException.$ctor4("count","Invalid count "+count);if((length-offset|0)<count)throw new System.ArgumentException.$ctor1((System.String.format("Invalid offset ({0}) or count + ({1}) ",Bridge.box(offset,System.Int32),Bridge.box(count,System.Int32))||"")+(System.String.format("for source length {0}",[Bridge.box(length,System.Int32)])||""));}}},fields:{buffer:null,capacityClosestPowerOfTwoMinusOne:0,startOffset:0},props:{Capacity:{get:function(){return this.buffer.length},set:function(value){var powOfTwo,newBuffer;if(value<0)throw new System.ArgumentOutOfRangeException.$ctor4("value","Capacity is less than 0.");if(value<this.Count)throw new System.InvalidOperationException.$ctor1("Capacity cannot be set to a value less than Count");(null==this.buffer||value!==this.buffer.length)&&(powOfTwo=SpineEngine.Maths.Mathf.ClosestPowerOfTwoGreaterThan(value),value=powOfTwo,newBuffer=System.Array.init(value,function(){return Bridge.getDefaultValue(T)},T),this.copyTo(newBuffer,0),this.buffer=newBuffer,this.startOffset=0,this.capacityClosestPowerOfTwoMinusOne=powOfTwo-1|0)}},IsFull:{get:function(){return this.Count===this.Capacity}},IsEmpty:{get:function(){return 0===this.Count}},System$Collections$Generic$ICollection$1$IsReadOnly:{get:function(){return!1}},Count:0},alias:["GetEnumerator",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(T)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"],'"System$Collections$Generic$ICollection$1$" + Bridge.getTypeAlias(T) + "$IsReadOnly"',"System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$IsReadOnly","Count","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$Count","add","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$add","clear","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$clear","contains","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$contains","copyTo","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$copyTo","remove","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$remove","getItem","System$Collections$Generic$IList$1$"+Bridge.getTypeAlias(T)+"$getItem","setItem","System$Collections$Generic$IList$1$"+Bridge.getTypeAlias(T)+"$setItem","insert","System$Collections$Generic$IList$1$"+Bridge.getTypeAlias(T)+"$insert","indexOf","System$Collections$Generic$IList$1$"+Bridge.getTypeAlias(T)+"$indexOf","removeAt","System$Collections$Generic$IList$1$"+Bridge.getTypeAlias(T)+"$removeAt"],ctors:{ctor:function(){SpineEngine.Utils.Collections.Deque$1(T).$ctor2.call(this,SpineEngine.Utils.Collections.Deque$1(T).DefaultCapacity)},$ctor2:function(capacity){if(this.$initialize(),capacity<0)throw new System.ArgumentOutOfRangeException.$ctor4("capacity","capacity is less than 0.");this.Capacity=capacity},$ctor1:function(collection){SpineEngine.Utils.Collections.Deque$1(T).$ctor2.call(this,System.Array.getCount(collection,T));this.InsertRange(0,collection)}},methods:{getItem:function(index){return this.Get(index)},setItem:function(index,value){this.Set(index,value)},EnsureCapacityFor:function(numElements){(this.Count+numElements|0)>this.Capacity&&(this.Capacity=this.Count+numElements|0)},ToBufferIndex:function(index){return(index+this.startOffset|0)&this.capacityClosestPowerOfTwoMinusOne},CheckIndexOutOfRange:function(index){if(index>=this.Count)throw new System.IndexOutOfRangeException.$ctor1("The supplied index is greater than the Count");},ShiftStartOffset:function(value){return this.startOffset=this.ToBufferIndex(value),this.startOffset},PreShiftStartOffset:function(value){var offset=this.startOffset;return this.ShiftStartOffset(value),offset},PostShiftStartOffset:function(value){return this.ShiftStartOffset(value)},AddFront:function(item){this.EnsureCapacityFor(1);this.buffer[System.Array.index(this.PostShiftStartOffset(-1),this.buffer)]=item;this.IncrementCount(1)},AddBack:function(item){this.EnsureCapacityFor(1);this.buffer[System.Array.index(this.ToBufferIndex(this.Count),this.buffer)]=item;this.IncrementCount(1)},RemoveFront:function(){if(this.IsEmpty)throw new System.InvalidOperationException.$ctor1("The Deque is empty");var result=this.buffer[System.Array.index(this.startOffset,this.buffer)];return this.buffer[System.Array.index(this.PreShiftStartOffset(1),this.buffer)]=Bridge.getDefaultValue(T),this.DecrementCount(1),result},RemoveBack:function(){if(this.IsEmpty)throw new System.InvalidOperationException.$ctor1("The Deque is empty");this.DecrementCount(1);var endIndex=this.ToBufferIndex(this.Count),result=this.buffer[System.Array.index(endIndex,this.buffer)];return this.buffer[System.Array.index(endIndex,this.buffer)]=Bridge.getDefaultValue(T),result},AddRange:function(collection){this.AddBackRange(collection)},AddFrontRange:function(collection){this.AddFrontRange$1(collection,0,System.Array.getCount(collection,T))},AddFrontRange$1:function(collection,fromIndex,count){this.InsertRange$1(0,collection,fromIndex,count)},AddBackRange:function(collection){this.AddBackRange$1(collection,0,System.Array.getCount(collection,T))},AddBackRange$1:function(collection,fromIndex,count){this.InsertRange$1(this.Count,collection,fromIndex,count)},InsertRange:function(index,collection){var count=System.Array.getCount(collection,T);this.InsertRange$1(index,collection,0,count)},InsertRange$1:function(index,collection,fromIndex,count){var $t,copyCount,shiftIndex,j,copyCount1,shiftIndex1,j1,i,item;if(this.CheckIndexOutOfRange(index-1|0),0!==count){if(this.EnsureCapacityFor(count),index<(Bridge.Int.div(this.Count,2)|0)){if(index>0)for(copyCount=index,shiftIndex=this.Capacity-count|0,j=0;j<copyCount;j=j+1|0)this.buffer[System.Array.index(this.ToBufferIndex(shiftIndex+j|0),this.buffer)]=this.buffer[System.Array.index(this.ToBufferIndex(j),this.buffer)];this.ShiftStartOffset(-count|0)}else if(index<this.Count)for(copyCount1=this.Count-index|0,shiftIndex1=index+count|0,j1=0;j1<copyCount1;j1=j1+1|0)this.buffer[System.Array.index(this.ToBufferIndex(shiftIndex1+j1|0),this.buffer)]=this.buffer[System.Array.index(this.ToBufferIndex(index+j1|0),this.buffer)];i=index;$t=Bridge.getEnumerator(collection,T);try{while($t.moveNext())item=$t.Current,this.buffer[System.Array.index(this.ToBufferIndex(i),this.buffer)]=item,i=i+1|0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.IncrementCount(count)}},RemoveRange:function(index,count){var copyCount,writeIndex,j,copyCount1,readIndex,j1;if(this.IsEmpty)throw new System.InvalidOperationException.$ctor1("The Deque is empty");if(index>(this.Count-count|0))throw new System.IndexOutOfRangeException.$ctor1("The supplied index is greater than the Count");if(this.ClearBuffer(index,count),index===0){this.ShiftStartOffset(count);this.Count=this.Count-count|0;return}if(index===(this.Count-count|0)){this.Count=this.Count-count|0;return}if((index+(Bridge.Int.div(count,2)|0)|0)<(Bridge.Int.div(this.Count,2)|0)){for(copyCount=index,writeIndex=count,j=0;j<copyCount;j=j+1|0)this.buffer[System.Array.index(this.ToBufferIndex(writeIndex+j|0),this.buffer)]=this.buffer[System.Array.index(this.ToBufferIndex(j),this.buffer)];this.ShiftStartOffset(count)}else for(copyCount1=(this.Count-count|0)-index|0,readIndex=index+count|0,j1=0;j1<copyCount1;j1=j1+1|0)this.buffer[System.Array.index(this.ToBufferIndex(index+j1|0),this.buffer)]=this.buffer[System.Array.index(this.ToBufferIndex(readIndex+j1|0),this.buffer)];this.DecrementCount(count)},Get:function(index){return this.CheckIndexOutOfRange(index),this.buffer[System.Array.index(this.ToBufferIndex(index),this.buffer)]},Set:function(index,item){this.CheckIndexOutOfRange(index);this.buffer[System.Array.index(this.ToBufferIndex(index),this.buffer)]=item},GetEnumerator:function(){var $step=0,$jumpFromFinally,$returnValue,i,endIndex,i1,endIndex1,i2,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(T))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:if((this.startOffset+this.Count|0)>this.Capacity){$step=1;continue}else{$step=12;continue}case 1:i=this.startOffset;$step=2;continue;case 2:if(i<this.Capacity){$step=3;continue}$step=6;continue;case 3:return $enumerator.current=this.buffer[System.Array.index(i,this.buffer)],$step=4,!0;case 4:$step=5;continue;case 5:i=i+1|0;$step=2;continue;case 6:endIndex=this.ToBufferIndex(this.Count);i1=0;$step=7;continue;case 7:if(i1<endIndex){$step=8;continue}$step=11;continue;case 8:return $enumerator.current=this.buffer[System.Array.index(i1,this.buffer)],$step=9,!0;case 9:$step=10;continue;case 10:i1=i1+1|0;$step=7;continue;case 11:$step=18;continue;case 12:endIndex1=this.startOffset+this.Count|0;i2=this.startOffset;$step=13;continue;case 13:if(i2<endIndex1){$step=14;continue}$step=17;continue;case 14:return $enumerator.current=this.buffer[System.Array.index(i2,this.buffer)],$step=15,!0;case 15:$step=16;continue;case 16:i2=i2+1|0;$step=13;continue;case 17:$step=18;continue;case 18:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()},IncrementCount:function(value){this.Count=this.Count+value|0},DecrementCount:function(value){this.Count=Math.max(this.Count-value|0,0)},add:function(item){this.AddBack(item)},ClearBuffer:function(logicalIndex,length){var offset=this.ToBufferIndex(logicalIndex),len;(offset+length|0)>this.Capacity?(len=this.Capacity-offset|0,System.Array.fill(this.buffer,Bridge.getDefaultValue(T),offset,len),len=this.ToBufferIndex(logicalIndex+length|0),System.Array.fill(this.buffer,Bridge.getDefaultValue(T),0,len)):System.Array.fill(this.buffer,Bridge.getDefaultValue(T),offset,length)},clear:function(){this.Count>0&&this.ClearBuffer(0,this.Count);this.Count=0;this.startOffset=0},contains:function(item){return this.indexOf(item)!==-1},copyTo:function(array,arrayIndex){if(null==array)throw new System.ArgumentNullException.$ctor3("array","Array is null");if(null!=this.buffer)if(SpineEngine.Utils.Collections.Deque$1(T).CheckArgumentsOutOfRange(array.length,arrayIndex,this.Count),0!==this.startOffset&&(this.startOffset+this.Count|0)>=this.Capacity){var lengthFromStart=this.Capacity-this.startOffset|0,lengthFromEnd=this.Count-lengthFromStart|0;System.Array.copy(this.buffer,this.startOffset,array,0,lengthFromStart);System.Array.copy(this.buffer,0,array,lengthFromStart,lengthFromEnd)}else System.Array.copy(this.buffer,this.startOffset,array,0,this.Count)},remove:function(item){var result=!0,index=this.indexOf(item);return-1===index?result=!1:this.removeAt(index),result},insert:function(index,item){if(this.EnsureCapacityFor(1),index===0){this.AddFront(item);return}if(index===this.Count){this.AddBack(item);return}this.InsertRange(index,System.Array.init([item],T))},indexOf:function(item){var $t,index=0,myItem;$t=Bridge.getEnumerator(this);try{while($t.moveNext()){if(myItem=$t.Current,Bridge.equals(myItem,item))break;index=index+1|0}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return index===this.Count&&(index=-1),index},removeAt:function(index){if(index===0){this.RemoveFront();return}if(index===(this.Count-1|0)){this.RemoveBack();return}this.RemoveRange(index,1)}}}});Bridge.define("SpineEngine.Utils.Collections.FunctionComparer$1",function(T){return{inherits:[System.Collections.Generic.IComparer$1(T)],fields:{comparison:null},alias:["compare",["System$Collections$Generic$IComparer$1$"+Bridge.getTypeAlias(T)+"$compare","System$Collections$Generic$IComparer$1$compare"]],ctors:{ctor:function(comparison){this.$initialize();this.comparison=comparison},$ctor1:function(func){this.$initialize();this.comparison=function(a,b){return func(a)-func(b)|0}}},methods:{compare:function(x,y){return this.comparison(x,y)}}}});Bridge.definei("SpineEngine.Utils.Collections.IPriorityQueue$1",function(T){return{inherits:[System.Collections.Generic.IEnumerable$1(T)],$kind:"interface"}});Bridge.define("SpineEngine.Utils.Collections.Pool$1",function(T){return{statics:{fields:{objectQueue:null},ctors:{init:function(){this.objectQueue=new(System.Collections.Generic.Queue$1(T).$ctor2)(10)}},methods:{WarmCache:function(cacheCount){if(cacheCount=cacheCount-SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Count|0,cacheCount>0)for(var i=0;i<cacheCount;i=i+1|0)SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Enqueue(Bridge.createInstance(T))},TrimCache:function(cacheCount){while(cacheCount>SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Count)SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Dequeue()},ClearCache:function(){SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Clear()},Obtain:function(){return SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Count>0?SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Dequeue():Bridge.createInstance(T)},Free:function(obj){var $t;SpineEngine.Utils.Collections.Pool$1(T).objectQueue.Enqueue(obj);($t=Bridge.as(obj,SpineEngine.Utils.Collections.IPoolable))!=null?$t.SpineEngine$Utils$Collections$IPoolable$Reset():null}}}}});Bridge.define("SpineEngine.Utils.Collections.PriorityQueueNode",{props:{Priority:0,InsertionIndex:System.Int64(0),QueueIndex:0}});Bridge.define("SpineEngine.XnaManagers.GlobalContentManager",{inherits:[Microsoft.Xna.Framework.Content.ContentManager],fields:{PostLoadActions:null},ctors:{init:function(){this.PostLoadActions=new(System.Collections.Generic.List$1(SpineEngine.XnaManagers.IPostLoadAction).ctor)},ctor:function(){this.$initialize();Microsoft.Xna.Framework.Content.ContentManager.$ctor1.call(this,SpineEngine.Core.Instance.Services,SpineEngine.Core.Instance.Content.RootDirectory)}},methods:{Load:function(T,assetName){var $t,result=Microsoft.Xna.Framework.Content.ContentManager.prototype.Load.call(this,System.Object,assetName),action;if(result==null)return Bridge.getDefaultValue(T);$t=Bridge.getEnumerator(this.PostLoadActions);try{while($t.moveNext())action=$t.Current,Bridge.Reflection.isAssignableFrom(action.SpineEngine$XnaManagers$IPostLoadAction$ActionType,T)&&action.SpineEngine$XnaManagers$IPostLoadAction$Apply(result,this)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return Bridge.referenceEquals(T,Bridge.getType(result))?Bridge.cast(Bridge.unbox(result,T),T):(result=Bridge.cast(Bridge.unbox(Bridge.createInstance(T,[result]),T),T),this.LoadedAssets.set(assetName,result),Bridge.cast(Bridge.unbox(result,T),T))}}});Bridge.define("SpineEngine.XnaManagers.GlobalGraphicsDeviceManager",{inherits:[Microsoft.Xna.Framework.GraphicsDeviceManager],props:{Bounds:{get:function(){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,this.Width,this.Height)},set:function(value){this.Width=value.Width;this.Height=value.Height}},Width:{get:function(){return this.GraphicsDevice.PresentationParameters.BackBufferWidth},set:function(value){this.GraphicsDevice.PresentationParameters.BackBufferWidth=value}},Height:{get:function(){return this.GraphicsDevice.PresentationParameters.BackBufferHeight},set:function(value){this.GraphicsDevice.PresentationParameters.BackBufferHeight=value}},Center:{get:function(){return new Microsoft.Xna.Framework.Vector2.$ctor2(this.Width/2,this.Height/2)}},MonitorWidth:{get:function(){return Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Width}},MonitorHeight:{get:function(){return Microsoft.Xna.Framework.Graphics.GraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Height}},BackBufferFormat:{get:function(){return this.GraphicsDevice.PresentationParameters.BackBufferFormat}}},ctors:{ctor:function(game){this.$initialize();Microsoft.Xna.Framework.GraphicsDeviceManager.ctor.call(this,game)}},methods:{SetSize:function(width,height){this.PreferredBackBufferWidth=width;this.PreferredBackBufferHeight=height;this.ApplyChanges()}}});Bridge.define("SpineEngine.XnaManagers.IPostLoadAction",{$kind:"interface"});Bridge.define("SpineEngine.ECS.EntitySystems.InputGamePadUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem,SpineEngine.ECS.IScreenResolutionChangedListener],props:{ResolutionOffset:null,ResolutionScale:null},alias:["SceneBackBufferSizeChanged","SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged"],ctors:{init:function(){this.ResolutionOffset=new Microsoft.Xna.Framework.Point;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2},ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.InputGamePadComponent]))}},methods:{SceneBackBufferSizeChanged:function(realRenderTarget,sceneRenderTarget){var scaleX=sceneRenderTarget.Width/realRenderTarget.Width,scaleY=sceneRenderTarget.Height/realRenderTarget.Height;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2.$ctor2(scaleX,scaleY);this.ResolutionOffset=realRenderTarget.Location.$clone();Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayWidth=SpineEngine.Core.Instance.GraphicsDevice.Viewport.Width;Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayHeight=SpineEngine.Core.Instance.GraphicsDevice.Viewport.Height;Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayOrientation=SpineEngine.Core.Instance.GraphicsDevice.PresentationParameters.DisplayOrientation},DoAction$1:function(entity,gameTime){LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var gamePad=entity.GetComponent(SpineEngine.ECS.Components.InputGamePadComponent);gamePad.PreviousState=gamePad.CurrentState.$clone();gamePad.CurrentState=Microsoft.Xna.Framework.Input.GamePad.GetState(gamePad.PlayerIndex);gamePad.ThisTickConnected=!gamePad.PreviousState.IsConnected&&gamePad.CurrentState.IsConnected;gamePad.ThisTickDisconnected=gamePad.PreviousState.IsConnected&&!gamePad.CurrentState.IsConnected;gamePad.RumbleTime>0&&(gamePad.RumbleTime-=gameTime.getTotalSeconds(),gamePad.RumbleTime<=0&&Microsoft.Xna.Framework.Input.GamePad.SetVibration(gamePad.PlayerIndex,0,0))}}});Bridge.define("SpineEngine.ECS.EntitySystems.InputMouseUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem,SpineEngine.ECS.IScreenResolutionChangedListener],props:{ResolutionOffset:null,ResolutionScale:null},alias:["SceneBackBufferSizeChanged","SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged"],ctors:{init:function(){this.ResolutionOffset=new Microsoft.Xna.Framework.Point;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2},ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.InputMouseComponent]))}},methods:{SceneBackBufferSizeChanged:function(realRenderTarget,sceneRenderTarget){var scaleX=sceneRenderTarget.Width/realRenderTarget.Width,scaleY=sceneRenderTarget.Height/realRenderTarget.Height;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2.$ctor2(scaleX,scaleY);this.ResolutionOffset=realRenderTarget.Location.$clone()},DoAction$1:function(entity,gameTime){LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var mouse=entity.GetComponent(SpineEngine.ECS.Components.InputMouseComponent);mouse.ResolutionScale=this.ResolutionScale.$clone();mouse.ResolutionOffset=this.ResolutionOffset.$clone();mouse.PreviousMouseState=mouse.CurrentMouseState.$clone();mouse.CurrentMouseState=Microsoft.Xna.Framework.Input.Mouse.GetState()}}});Bridge.define("SpineEngine.ECS.EntitySystems.InputTouchUpdateSystem",{inherits:[LocomotorECS.EntityProcessingSystem,SpineEngine.ECS.IScreenResolutionChangedListener],props:{ResolutionOffset:null,ResolutionScale:null},alias:["SceneBackBufferSizeChanged","SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged"],ctors:{init:function(){this.ResolutionOffset=new Microsoft.Xna.Framework.Point;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2},ctor:function(){this.$initialize();LocomotorECS.EntityProcessingSystem.ctor.call(this,(new LocomotorECS.Matching.Matcher).All([SpineEngine.ECS.Components.InputTouchComponent]))}},methods:{SceneBackBufferSizeChanged:function(realRenderTarget,sceneRenderTarget){var scaleX=sceneRenderTarget.Width/realRenderTarget.Width,scaleY=sceneRenderTarget.Height/realRenderTarget.Height;this.ResolutionScale=new Microsoft.Xna.Framework.Vector2.$ctor2(scaleX,scaleY);this.ResolutionOffset=realRenderTarget.Location.$clone();Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayWidth=SpineEngine.Core.Instance.GraphicsDevice.Viewport.Width;Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayHeight=SpineEngine.Core.Instance.GraphicsDevice.Viewport.Height;Microsoft.Xna.Framework.Input.Touch.TouchPanel.DisplayOrientation=SpineEngine.Core.Instance.GraphicsDevice.PresentationParameters.DisplayOrientation},DoAction$1:function(entity,gameTime){LocomotorECS.EntityProcessingSystem.prototype.DoAction$1.call(this,entity,gameTime);var touch=entity.GetComponent(SpineEngine.ECS.Components.InputTouchComponent);for(touch.IsConnected=Microsoft.Xna.Framework.Input.Touch.TouchPanel.GetCapabilities().IsConnected,touch.ResolutionScale=this.ResolutionScale.$clone(),touch.ResolutionOffset=this.ResolutionOffset.$clone(),touch.PreviousTouches=touch.CurrentTouches,touch.CurrentTouches=Microsoft.Xna.Framework.Input.Touch.TouchPanel.GetState(),touch.PreviousGestures=touch.CurrentGestures,touch.CurrentGestures.clear();Microsoft.Xna.Framework.Input.Touch.TouchPanel.IsGestureAvailable;)touch.CurrentGestures.add(Microsoft.Xna.Framework.Input.Touch.TouchPanel.ReadGesture())}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput],props:{Value:0},ctors:{ctor:function(overlap){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.ctor.call(this,overlap)},$ctor1:function(overlap,nodes){nodes===void 0&&(nodes=[]);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.ctor.call(this,overlap);this.Nodes.AddRange(nodes)}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var thisTickValue,i,val,newResult,oldResult;for(SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.prototype.Update.call(this,inputKeyboard,inputMouse,inputTouch,inputGamePad),thisTickValue=0,i=0;i<this.Nodes.Count;i=i+1|0){if(val=Bridge.cast(this.Nodes.getItem(i),SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node).Value,val==null){thisTickValue=this.CheckOverlap(this.Value);break}if(!System.Nullable.eq(val,0)&&(newResult=Bridge.Int.sign(System.Nullable.getValue(val)),oldResult=Bridge.Int.sign(thisTickValue),oldResult!==newResult)){if(thisTickValue===0){thisTickValue=newResult;continue}thisTickValue=this.CheckOverlap(this.Value);break}}this.Value=thisTickValue},CheckOverlap:function(value){switch(this.Overlap){case SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.OverlapBehavior.CancelOut:return 0;case SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.OverlapBehavior.TakeNewer:return-value;case SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.OverlapBehavior.TakeOlder:return value;default:throw new System.IndexOutOfRangeException.ctor;}}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInputNode],$kind:"nested class",props:{Value:null},methods:{SetValue:function(left,right){this.Value=right?left?null:1:left?-1:0}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput],props:{IsDown:!1,IsPressed:!1,IsReleased:!1},ctors:{ctor:function(overlapBehavior){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.ctor.call(this,overlapBehavior)},$ctor1:function(overlapBehavior,nodes){nodes===void 0&&(nodes=[]);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.ctor.call(this,overlapBehavior);this.Nodes.AddRange(nodes)}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var $t,downLastFrame,node;SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.prototype.Update.call(this,inputKeyboard,inputMouse,inputTouch,inputGamePad);downLastFrame=this.IsDown;this.IsDown=!1;$t=Bridge.getEnumerator(this.Nodes);try{while($t.moveNext())if(node=$t.Current,Bridge.cast(node,SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node).IsDown){this.IsDown=!0;break}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}this.IsPressed=!downLastFrame&&this.IsDown;this.IsReleased=downLastFrame&&!this.IsDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInputNode],$kind:"nested class",props:{IsDown:!1}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput],fields:{Normalized:!1},props:{Value:null},ctors:{init:function(){this.Value=new Microsoft.Xna.Framework.Vector2},ctor:function(overlapBehavior,normalized){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.ctor.call(this,overlapBehavior);this.Normalized=normalized},$ctor1:function(overlapBehavior,normalized,nodes){nodes===void 0&&(nodes=[]);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.ctor.call(this,overlapBehavior);this.Normalized=normalized;this.Nodes.AddRange(nodes)}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var thisTickValueX,i,val,newResult,oldResult,thisTickValueY,i1,val1,newResult1,oldResult1;for(SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.prototype.Update.call(this,inputKeyboard,inputMouse,inputTouch,inputGamePad),thisTickValueX=0,i=0;i<this.Nodes.Count;i=i+1|0){if(val=Bridge.cast(this.Nodes.getItem(i),SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node).ValueX,val==null){thisTickValueX=this.CheckOverlap(this.Value.X);break}if(!System.Nullable.eq(val,0)&&(newResult=Bridge.Int.sign(System.Nullable.getValue(val)),oldResult=Bridge.Int.sign(thisTickValueX),oldResult!==newResult)){if(thisTickValueX===0){thisTickValueX=newResult;continue}thisTickValueX=this.CheckOverlap(this.Value.X);break}}for(thisTickValueY=0,i1=0;i1<this.Nodes.Count;i1=i1+1|0){if(val1=Bridge.cast(this.Nodes.getItem(i1),SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node).ValueY,val1==null){thisTickValueY=this.CheckOverlap(this.Value.Y);break}if(!System.Nullable.eq(val1,0)&&(newResult1=Bridge.Int.sign(System.Nullable.getValue(val1)),oldResult1=Bridge.Int.sign(thisTickValueY),oldResult1!==newResult1)){if(thisTickValueY===0){thisTickValueY=newResult1;continue}thisTickValueY=this.CheckOverlap(this.Value.Y);break}}this.Value=new Microsoft.Xna.Framework.Vector2.$ctor2(thisTickValueX,thisTickValueY);this.Normalized&&this.Value.Normalize()},CheckOverlap:function(value){switch(this.Overlap){case SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.OverlapBehavior.CancelOut:return 0;case SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.OverlapBehavior.TakeNewer:return-value;case SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInput.OverlapBehavior.TakeOlder:return value;default:throw new System.IndexOutOfRangeException.ctor;}}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualInputNode],$kind:"nested class",props:{ValueX:null,ValueY:null},methods:{SetValue:function(up,down,left,right){this.ValueY=down?up?null:1:up?-1:0;this.ValueX=right?left?null:1:left?-1:0}}});Bridge.define("SpineEngine.GlobalManagers.Coroutines.Coroutine",{inherits:[SpineEngine.Utils.Collections.IPoolable],fields:{Enumerator:null,IsDone:!1,WaitForCoroutine:null},methods:{SpineEngine$Utils$Collections$IPoolable$Reset:function(){this.IsDone=!0;this.WaitForCoroutine=null;this.Enumerator=null},Stop:function(){this.IsDone=!0}}});Bridge.define("SpineEngine.GlobalManagers.Coroutines.CoroutineGlobalManager",{inherits:[SpineEngine.GlobalManagers.GlobalManager],fields:{nextFrameCoroutines:null},ctors:{init:function(){this.nextFrameCoroutines=new(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.Coroutines.Coroutine).ctor)}},methods:{StartCoroutine:function(enumerator){enumerator=enumerator||SpineEngine.GlobalManagers.Coroutines.DefaultCoroutines.Empty();var coroutine=SpineEngine.Utils.Collections.Pool$1(SpineEngine.GlobalManagers.Coroutines.Coroutine).Obtain();return(coroutine.Enumerator=enumerator,coroutine.IsDone=!1,coroutine.WaitForCoroutine=null,!this.TickCoroutine(coroutine))?null:(this.nextFrameCoroutines.add(coroutine),coroutine)},Update:function(gameTime){var $t,unblockedCoroutines=SpineEngine.Utils.Collections.Pool$1(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.Coroutines.Coroutine)).Obtain(),coroutine;unblockedCoroutines.clear();unblockedCoroutines.AddRange(this.nextFrameCoroutines);this.nextFrameCoroutines.clear();$t=Bridge.getEnumerator(unblockedCoroutines);try{while($t.moveNext()){if(coroutine=$t.Current,coroutine.IsDone){SpineEngine.Utils.Collections.Pool$1(SpineEngine.GlobalManagers.Coroutines.Coroutine).Free(coroutine);continue}if(coroutine.WaitForCoroutine!=null)if(coroutine.WaitForCoroutine.IsDone)coroutine.WaitForCoroutine=null;else{this.nextFrameCoroutines.add(coroutine);continue}if(!this.TickCoroutine(coroutine)){SpineEngine.Utils.Collections.Pool$1(SpineEngine.GlobalManagers.Coroutines.Coroutine).Free(coroutine);continue}this.nextFrameCoroutines.add(coroutine)}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}unblockedCoroutines.clear();SpineEngine.Utils.Collections.Pool$1(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.Coroutines.Coroutine)).Free(unblockedCoroutines)},TickCoroutine:function(coroutine){var current,enumerator;return!coroutine.Enumerator.System$Collections$IEnumerator$moveNext()||coroutine.IsDone?!1:coroutine.Enumerator.System$Collections$IEnumerator$Current==null?!0:(current=Bridge.as(coroutine.Enumerator.System$Collections$IEnumerator$Current,SpineEngine.GlobalManagers.Coroutines.Coroutine))!=null?(coroutine.WaitForCoroutine=current,!0):(enumerator=Bridge.as(coroutine.Enumerator.System$Collections$IEnumerator$Current,System.Collections.IEnumerator))!=null?(coroutine.WaitForCoroutine=this.StartCoroutine(enumerator),!0):!0}}});Bridge.define("SpineEngine.GlobalManagers.Timers.TimerGlobalManager",{inherits:[SpineEngine.GlobalManagers.GlobalManager],fields:{timers:null},ctors:{init:function(){this.timers=new(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.Timers.Timer).ctor)}},methods:{Update:function(gameTime){for(var timer,i=this.timers.Count-1|0;i>=0;i=i-1|0)timer=this.timers.getItem(i),timer.Tick(gameTime)&&(timer.Unload(),this.timers.removeAt(i),SpineEngine.Utils.Collections.Pool$1(SpineEngine.GlobalManagers.Timers.Timer).Free(timer))},Schedule:function(timeInSeconds,repeats,onTime){var timer=SpineEngine.Utils.Collections.Pool$1(SpineEngine.GlobalManagers.Timers.Timer).Obtain();return timer.Initialize(timeInSeconds,repeats,onTime),this.timers.add(timer),timer}}});Bridge.definei("SpineEngine.GlobalManagers.Tweens.Interfaces.ITween$1",function(T){return{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITween],$kind:"interface"}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenGlobalManager",{inherits:[SpineEngine.GlobalManagers.GlobalManager],statics:{fields:{DefaultEaseType:0,RemoveAllTweensOnLevelLoad:!1},ctors:{init:function(){this.DefaultEaseType=SpineEngine.Maths.Easing.EaseType.QuartIn;this.RemoveAllTweensOnLevelLoad=!1}}},fields:{activeTweens:null},ctors:{init:function(){this.activeTweens=new(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.Tweens.Tweenable).ctor)}},methods:{Update:function(gameTime){var list=SpineEngine.Utils.Collections.Pool$1(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.Tweens.Tweenable)).Obtain(),i,tweenable;for(list.clear(),list.AddRange(this.activeTweens),i=list.Count-1|0;i>=0;i=i-1|0)tweenable=list.getItem(i),tweenable.Tick(gameTime)&&this.RemoveTween(tweenable.CurrentTween);list.clear();SpineEngine.Utils.Collections.Pool$1(System.Collections.Generic.List$1(SpineEngine.GlobalManagers.Tweens.Tweenable)).Free(list)},AddTween:function(tween){var tweenable=SpineEngine.Utils.Collections.Pool$1(SpineEngine.GlobalManagers.Tweens.Tweenable).Obtain();tweenable.Initialize(this,tween);this.activeTweens.add(tweenable)},RemoveTween:function(tween){var tweenable=System.Linq.Enumerable.from(this.activeTweens).firstOrDefault(function(a){return Bridge.referenceEquals(a.CurrentTween,tween)},null);tweenable!=null&&(tweenable.RecycleSelf(),this.activeTweens.remove(tweenable),SpineEngine.Utils.Collections.Pool$1(SpineEngine.GlobalManagers.Tweens.Tweenable).Free(tweenable))},StopAllTweens:function(bringToCompletion){bringToCompletion===void 0&&(bringToCompletion=!1);for(var i=this.activeTweens.Count-1|0;i>=0;i=i-1|0)this.activeTweens.getItem(i).Stop(bringToCompletion)},StopTween:function(tween,bringToCompletion){bringToCompletion===void 0&&(bringToCompletion=!1);var tweenable=System.Linq.Enumerable.from(this.activeTweens).firstOrDefault(function(a){return Bridge.referenceEquals(a.CurrentTween,tween)},null);tweenable!=null?tweenable.Stop(bringToCompletion):null},StartTween:function(tween){var tweenable=System.Linq.Enumerable.from(this.activeTweens).firstOrDefault(function(a){return Bridge.referenceEquals(a.CurrentTween,tween)},null);tweenable==null&&this.AddTween(tween);tweenable=System.Linq.Enumerable.from(this.activeTweens).first(function(a){return Bridge.referenceEquals(a.CurrentTween,tween)});tweenable.Start()},IsTweenCompleted:function(tween){var tweenable=System.Linq.Enumerable.from(this.activeTweens).firstOrDefault(function(a){return Bridge.referenceEquals(a.CurrentTween,tween)},null);return tweenable==null?!0:tweenable.IsCompleted()}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenTargets.PropertyTweenTarget$1",function(T){return{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITweenTarget$1(T)],fields:{fieldInfo:null,getter:null,setter:null},props:{TweenedValue:{get:function(){return this.fieldInfo!=null?System.Nullable.getValue(Bridge.cast(Bridge.unbox(Bridge.Reflection.fieldAccess(this.fieldInfo,Bridge.unbox(this.Target)),T),T)):this.getter()},set:function(value){this.fieldInfo!=null?Bridge.Reflection.fieldAccess(this.fieldInfo,Bridge.unbox(this.Target),value):this.setter(value)}},Target:null},alias:["TweenedValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$"+Bridge.getTypeAlias(T)+"$TweenedValue","Target","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$"+Bridge.getTypeAlias(T)+"$Target"],ctors:{ctor:function(target,propertyName){this.$initialize();this.Target=target;(this.fieldInfo=SpineEngine.Utils.BuildTargetUtils.GetFieldInfo(target,propertyName))==null&&(this.setter=SpineEngine.Utils.BuildTargetUtils.SetterForProperty(Function,target,propertyName),this.getter=SpineEngine.Utils.BuildTargetUtils.GetterForProperty(Function,target,propertyName))}}}});Bridge.define("SpineEngine.Graphics.Cameras.ScreenSpaceCamera",{inherits:[SpineEngine.Graphics.Cameras.Camera],methods:{UpdateMatrices:function(){}}});Bridge.define("SpineEngine.Graphics.Drawable.SubtextureDrawable",{inherits:[SpineEngine.Graphics.Drawable.IDrawable],statics:{methods:{SubtexturesFromAtlas:function(texture,cellWidth,cellHeight,cellOffset,maxCellsToInclude){var y,x;cellOffset===void 0&&(cellOffset=0);maxCellsToInclude===void 0&&(maxCellsToInclude=2147483647);var subtextures=new(System.Collections.Generic.List$1(SpineEngine.Graphics.Drawable.SubtextureDrawable).ctor),cols=Bridge.Int.div(texture.Width,cellWidth)|0,rows=Bridge.Int.div(texture.Height,cellHeight)|0,i=0;for(y=0;y<rows;y=y+1|0)for(x=0;x<cols;x=x+1|0)if(!(Bridge.identity(i,i=i+1|0)<cellOffset)&&(subtextures.add(new SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor1(texture,new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.mul(x,cellWidth),Bridge.Int.mul(y,cellHeight),cellWidth,cellHeight))),subtextures.Count===maxCellsToInclude))break;return subtextures}}},fields:{renderTexture:null,texture:null,sourceRect:null,Origin:null},props:{Texture2D:{get:function(){return SpineEngine.Graphics.RenderTexture.op_Implicit(this.renderTexture)||this.texture}},SourceRect:{get:function(){var $t;return $t=System.Nullable.lift1("$clone",this.sourceRect),$t!=null?$t:this.Texture2D.Bounds}},Bounds:{get:function(){return SpineEngine.Maths.RectangleF.op_Implicit$1(this.SourceRect.$clone())}}},alias:["Bounds","SpineEngine$Graphics$Drawable$IDrawable$Bounds","DrawInto","SpineEngine$Graphics$Drawable$IDrawable$DrawInto","DrawInto$1","SpineEngine$Graphics$Drawable$IDrawable$DrawInto$1"],ctors:{$ctor3:function(texture,sourceRect,origin){this.$initialize();this.texture=texture;this.sourceRect=System.Nullable.lift1("$clone",sourceRect);this.Origin=System.Nullable.lift1("$clone",origin)},$ctor1:function(texture,sourceRect){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor3.call(this,texture,sourceRect,null)},ctor:function(texture){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor3.call(this,texture,null,null)},$ctor2:function(texture,x,y,width,height){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor1.call(this,texture,new Microsoft.Xna.Framework.Rectangle.$ctor2(x,y,width,height))},$ctor4:function(texture,x,y,width,height){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor2.call(this,texture,Bridge.Int.clip32(x),Bridge.Int.clip32(y),Bridge.Int.clip32(width),Bridge.Int.clip32(height))},$ctor8:function(texture,sourceRect,origin){this.$initialize();this.renderTexture=texture;this.sourceRect=System.Nullable.lift1("$clone",sourceRect);this.Origin=System.Nullable.lift1("$clone",origin)},$ctor5:function(texture){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor8.call(this,texture,null,null)},$ctor6:function(texture,sourceRect){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor8.call(this,texture,sourceRect,null)},$ctor7:function(texture,x,y,width,height){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor6.call(this,texture,new Microsoft.Xna.Framework.Rectangle.$ctor2(x,y,width,height))},$ctor9:function(texture,x,y,width,height){SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor7.call(this,texture,Bridge.Int.clip32(x),Bridge.Int.clip32(y),Bridge.Int.clip32(width),Bridge.Int.clip32(height))}},methods:{DrawInto:function(color,depth,target){this.DrawInto$1(this.SourceRect.Width,this.SourceRect.Height,color.$clone(),depth,target)},DrawInto$1:function(width,height,color,depth,target){var $t,$t1,source=this.SourceRect.$clone(),destination=new SpineEngine.Maths.RectangleF.$ctor2(-($t=System.Nullable.liftne(Microsoft.Xna.Framework.Vector2.op_Inequality,System.Nullable.lift1("$clone",this.Origin),null)?System.Nullable.getValue(System.Nullable.lift1("$clone",this.Origin)).X:null,$t!=null?$t:this.SourceRect.Width/2),-($t1=System.Nullable.liftne(Microsoft.Xna.Framework.Vector2.op_Inequality,System.Nullable.lift1("$clone",this.Origin),null)?System.Nullable.getValue(System.Nullable.lift1("$clone",this.Origin)).Y:null,$t1!=null?$t1:this.SourceRect.Height/2),width,height);target.Draw(this.Texture2D,destination.$clone(),SpineEngine.Maths.RectangleF.op_Implicit$1(source.$clone()),color.$clone(),depth)},toString:function(){return System.String.format("{0}",[this.SourceRect.$clone()])}}});Bridge.define("SpineEngine.Graphics.Drawable.PrimitiveDrawable",{inherits:[SpineEngine.Graphics.Drawable.IDrawable],fields:{Color:null},props:{Origin:null,Bounds:{get:function(){return new SpineEngine.Maths.RectangleF.$ctor2(0,0,1,1)}}},alias:["Bounds","SpineEngine$Graphics$Drawable$IDrawable$Bounds","DrawInto","SpineEngine$Graphics$Drawable$IDrawable$DrawInto","DrawInto$1","SpineEngine$Graphics$Drawable$IDrawable$DrawInto$1"],ctors:{init:function(){this.Origin=new Microsoft.Xna.Framework.Vector2;this.Origin=Microsoft.Xna.Framework.Vector2.op_Division$1(Microsoft.Xna.Framework.Vector2.One.$clone(),2)},ctor:function(color){color===void 0&&(color=null);this.$initialize();this.Color=System.Nullable.lift1("$clone",color)}},methods:{DrawInto:function(color,depth,target){this.DrawInto$1(1,1,color.$clone(),depth,target)},DrawInto$1:function(width,height,color,depth,target){var $t,destination=new SpineEngine.Maths.RectangleF.$ctor2(0,0,width,height);destination.Location=Microsoft.Xna.Framework.Vector2.op_Subtraction(destination.Location.$clone(),this.Origin.$clone());target.Draw(SpineEngine.Graphics.Graphic.PixelTexture,destination.$clone(),SpineEngine.Maths.RectangleF.op_Implicit$1(SpineEngine.Graphics.Graphic.PixelTexture.Bounds.$clone()),($t=this.Color,$t!=null?$t:color),depth)}}});Bridge.define("SpineEngine.Graphics.Materials.Material$1",function(T){return{inherits:[SpineEngine.Graphics.Materials.Material],props:{TypedEffect:{get:function(){return Bridge.cast(this.Effect,T)},set:function(value){this.Effect=value}}},ctors:{ctor:function(){this.$initialize();SpineEngine.Graphics.Materials.Material.ctor.call(this)},$ctor1:function(effect){this.$initialize();SpineEngine.Graphics.Materials.Material.ctor.call(this);this.TypedEffect=effect}}}});Bridge.define("SpineEngine.Graphics.Meshes.SpriteMesh",{inherits:[SpineEngine.Graphics.Meshes.IMesh],props:{Texture:null,Effect:0,Depth:0,Color:null,SrcRect:null,DestRect:null,Rotation:0},ctors:{init:function(){this.Color=new Microsoft.Xna.Framework.Color;this.SrcRect=new SpineEngine.Maths.RectangleF;this.DestRect=new SpineEngine.Maths.RectangleF}},methods:{Build:function(texture,destRect,srcRect,color,depth){this.Texture=texture;this.DestRect=destRect.$clone();this.SrcRect=srcRect.$clone();this.Color=color.$clone();this.Depth=depth;this.Rotation=0},Draw:function(spriteBatch){spriteBatch.Draw$2(this.Texture,SpineEngine.Maths.RectangleF.op_Implicit(this.DestRect.$clone()),SpineEngine.Maths.RectangleF.op_Implicit(this.SrcRect.$clone()),this.Color.$clone(),this.Rotation,Microsoft.Xna.Framework.Vector2.Zero.$clone(),this.Effect,this.Depth)},ApplyEffectToMesh:function(effect){this.Effect=effect},ApplyTransformMesh:function(transform){var $t,leftTop=Microsoft.Xna.Framework.Vector3.Transform(($t=new Microsoft.Xna.Framework.Vector3.ctor,$t.X=this.DestRect.Left,$t.Y=this.DestRect.Top,$t.Z=0,$t),transform.$clone()),leftBottom=Microsoft.Xna.Framework.Vector3.Transform(($t=new Microsoft.Xna.Framework.Vector3.ctor,$t.X=this.DestRect.Left,$t.Y=this.DestRect.Bottom,$t.Z=0,$t),transform.$clone()),rightTop=Microsoft.Xna.Framework.Vector3.Transform(($t=new Microsoft.Xna.Framework.Vector3.ctor,$t.X=this.DestRect.Right,$t.Y=this.DestRect.Top,$t.Z=0,$t),transform.$clone()),rightBottom=Microsoft.Xna.Framework.Vector3.Transform(($t=new Microsoft.Xna.Framework.Vector3.ctor,$t.X=this.DestRect.Right,$t.Y=this.DestRect.Bottom,$t.Z=0,$t),transform.$clone()),rotation=0,position=new Microsoft.Xna.Framework.Vector2.$ctor2(leftTop.X,leftTop.Y),size=new Microsoft.Xna.Framework.Vector2.$ctor2(rightBottom.X-leftTop.X,rightBottom.Y-leftTop.Y),squareCenter;leftTop.Y!==rightTop.Y&&(rotation=Math.atan((leftTop.X-rightTop.X)/(leftTop.Y-rightTop.Y)),squareCenter=Microsoft.Xna.Framework.Vector3.op_Division$1(Microsoft.Xna.Framework.Vector3.op_Addition(leftTop.$clone(),rightBottom.$clone()),2),size=new Microsoft.Xna.Framework.Vector2.$ctor2(Microsoft.Xna.Framework.Vector3.op_Subtraction(leftTop.$clone(),rightTop.$clone()).Length(),Microsoft.Xna.Framework.Vector3.op_Subtraction(leftTop.$clone(),leftBottom.$clone()).Length()),position=new Microsoft.Xna.Framework.Vector2.$ctor2(squareCenter.X,squareCenter.Y));this.DestRect=new SpineEngine.Maths.RectangleF.$ctor1(position.$clone(),size.$clone());this.Rotation+=rotation},SetColor:function(value){this.Color=value.$clone()},GetCenter:function(){return new Microsoft.Xna.Framework.Vector3.$ctor3(this.DestRect.X+this.DestRect.Width/2,this.DestRect.Y+this.DestRect.Height/2,0)}}});Bridge.define("SpineEngine.Graphics.Meshes.VertexMesh",{inherits:[SpineEngine.Graphics.Meshes.IMesh],props:{PrimitiveType:0,PrimitiveCount:0,Triangles:null,Verts:null,Texture:null,RasterizerState:null},ctors:{init:function(){this.PrimitiveType=Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList;this.Triangles=System.Array.init(0,0,System.Int32);this.Verts=System.Array.init(0,function(){return new Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture},Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture)}},methods:{Draw:function(spriteBatch){var graphicsDevice=spriteBatch.GraphicsDevice;this.PrimitiveCount!==0&&(graphicsDevice.Textures.setItem(0,this.Texture),graphicsDevice.RasterizerState=this.RasterizerState||Microsoft.Xna.Framework.Graphics.RasterizerState.CullNone,this.Triangles==null||this.Triangles.length===0?graphicsDevice.DrawUserPrimitives(Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture,this.PrimitiveType,this.Verts,0,this.PrimitiveCount):graphicsDevice.DrawUserIndexedPrimitives$2(Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture,this.PrimitiveType,this.Verts,0,this.Verts.length,this.Triangles,0,this.PrimitiveCount))},ApplyEffectToMesh:function(effect){var $t,$t1,$t2,$t3,mesh=this,index;if(effect!==Microsoft.Xna.Framework.Graphics.SpriteEffects.None){var minX=System.Linq.Enumerable.from(mesh.Verts).min($asm.$.SpineEngine.Graphics.Meshes.VertexMesh.f1),maxX=System.Linq.Enumerable.from(mesh.Verts).max($asm.$.SpineEngine.Graphics.Meshes.VertexMesh.f1),minY=System.Linq.Enumerable.from(mesh.Verts).min($asm.$.SpineEngine.Graphics.Meshes.VertexMesh.f2),maxY=System.Linq.Enumerable.from(mesh.Verts).max($asm.$.SpineEngine.Graphics.Meshes.VertexMesh.f2),maxMinX=maxX+minX,maxMinY=maxY+minY;for(index=0;index<mesh.Verts.length;index=index+1|0)(effect&Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipHorizontally)===Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipHorizontally&&(($t=mesh.Verts)[System.Array.index(index,$t)].TextureCoordinate.X=maxMinX-($t1=mesh.Verts)[System.Array.index(index,$t1)].TextureCoordinate.X),(effect&Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipVertically)===Microsoft.Xna.Framework.Graphics.SpriteEffects.FlipVertically&&(($t2=mesh.Verts)[System.Array.index(index,$t2)].TextureCoordinate.Y=maxMinY-($t3=mesh.Verts)[System.Array.index(index,$t3)].TextureCoordinate.Y)}},ApplyTransformMesh:function(transform){for(var $t,$t1,mesh=this,index=0;index<mesh.Verts.length;index=index+1|0)($t=mesh.Verts)[System.Array.index(index,$t)].Position=Microsoft.Xna.Framework.Vector3.Transform(($t1=mesh.Verts)[System.Array.index(index,$t1)].Position.$clone(),transform.$clone())},SetColor:function(value){for(var $t,mesh=this,index=0;index<mesh.Verts.length;index=index+1|0)($t=mesh.Verts)[System.Array.index(index,$t)].Color=value.$clone()},GetCenter:function(){var count=this.Verts.length;return Microsoft.Xna.Framework.Vector3.op_Division$1(new Microsoft.Xna.Framework.Vector3.$ctor3(System.Linq.Enumerable.from(this.Verts).sum($asm.$.SpineEngine.Graphics.Meshes.VertexMesh.f3),System.Linq.Enumerable.from(this.Verts).sum($asm.$.SpineEngine.Graphics.Meshes.VertexMesh.f4),System.Linq.Enumerable.from(this.Verts).sum($asm.$.SpineEngine.Graphics.Meshes.VertexMesh.f5)),count)},Build:function(texture,destRect,srcRect,color,depth){var $t,$t1,$t2,$t3,$t4,$t5,$t6,$t7,$t8,$t9,mesh=this;mesh.Verts.length!==4&&(mesh.Verts=System.Array.init(4,function(){return new Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture},Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture));mesh.Triangles.length!==6&&(mesh.Triangles=System.Array.init(6,0,System.Int32));mesh.Texture=texture;mesh.PrimitiveType=Microsoft.Xna.Framework.Graphics.PrimitiveType.TriangleList;mesh.PrimitiveCount=2;($t=mesh.Triangles)[System.Array.index(0,$t)]=0;($t1=mesh.Triangles)[System.Array.index(1,$t1)]=1;($t2=mesh.Triangles)[System.Array.index(2,$t2)]=2;($t3=mesh.Triangles)[System.Array.index(3,$t3)]=2;($t4=mesh.Triangles)[System.Array.index(4,$t4)]=3;($t5=mesh.Triangles)[System.Array.index(5,$t5)]=0;($t6=mesh.Verts)[System.Array.index(0,$t6)]=new Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture.$ctor1(new Microsoft.Xna.Framework.Vector3.$ctor3(destRect.Left,destRect.Top,depth),color.$clone(),new Microsoft.Xna.Framework.Vector2.$ctor2(srcRect.Left/texture.Bounds.Width,srcRect.Top/texture.Bounds.Height));($t7=mesh.Verts)[System.Array.index(1,$t7)]=new Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture.$ctor1(new Microsoft.Xna.Framework.Vector3.$ctor3(destRect.Right,destRect.Top,depth),color.$clone(),new Microsoft.Xna.Framework.Vector2.$ctor2(srcRect.Right/texture.Bounds.Width,srcRect.Top/texture.Bounds.Height));($t8=mesh.Verts)[System.Array.index(2,$t8)]=new Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture.$ctor1(new Microsoft.Xna.Framework.Vector3.$ctor3(destRect.Right,destRect.Bottom,depth),color.$clone(),new Microsoft.Xna.Framework.Vector2.$ctor2(srcRect.Right/texture.Bounds.Width,srcRect.Bottom/texture.Bounds.Height));($t9=mesh.Verts)[System.Array.index(3,$t9)]=new Microsoft.Xna.Framework.Graphics.VertexPositionColorTexture.$ctor1(new Microsoft.Xna.Framework.Vector3.$ctor3(destRect.Left,destRect.Bottom,depth),color.$clone(),new Microsoft.Xna.Framework.Vector2.$ctor2(srcRect.Left/texture.Bounds.Width,srcRect.Bottom/texture.Bounds.Height))}}});Bridge.ns("SpineEngine.Graphics.Meshes.VertexMesh",$asm.$);Bridge.apply($asm.$.SpineEngine.Graphics.Meshes.VertexMesh,{f1:function(a){return a.TextureCoordinate.X},f2:function(a){return a.TextureCoordinate.Y},f3:function(a){return a.Position.X},f4:function(a){return a.Position.Y},f5:function(a){return a.Position.Z}});Bridge.define("SpineEngine.Graphics.Renderers.Renderer",{inherits:function(){return[System.IComparable$1(SpineEngine.Graphics.Renderers.Renderer),SpineEngine.ECS.IScreenResolutionChangedListener]},props:{RendererMaterial:null,RendererCamera:null,RenderOrder:0,RenderTexture:null,RenderTexture2:null,RenderTargetClearColor:null,RenderAfterPostProcessors:!1},alias:["compareTo",["System$IComparable$1$SpineEngine$Graphics$Renderers$Renderer$compareTo","System$IComparable$1$compareTo"],"SceneBackBufferSizeChanged","SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged"],methods:{compareTo:function(other){return Bridge.referenceEquals(this,other)?0:Bridge.referenceEquals(null,other)?1:Bridge.compare(this.RenderOrder,other.RenderOrder)},SceneBackBufferSizeChanged:function(realRenderTarget,sceneRenderTarget){var $t,$t1;($t=this.RenderTexture)!=null?$t.OnSceneBackBufferSizeChanged(sceneRenderTarget.Width,sceneRenderTarget.Height):null;($t1=this.RenderTexture2)!=null?$t1.OnSceneBackBufferSizeChanged(sceneRenderTarget.Width,sceneRenderTarget.Height):null},Begin:function(){},End:function(){}}});Bridge.define("SpineEngine.Graphics.RenderProcessors.Impl.EntityRendererProcessor",{inherits:[SpineEngine.Graphics.RenderProcessors.RenderProcessor],fields:{entities:null,lastState:null,postProcessRender:!1,scene:null,matrixTransformMatrix:null},ctors:{init:function(){this.matrixTransformMatrix=new Microsoft.Xna.Framework.Matrix;this.lastState=new SpineEngine.Graphics.RenderProcessors.Impl.FinalRenderer.LastState},ctor:function(postProcessRender,scene,entities,executionOrder){this.$initialize();SpineEngine.Graphics.RenderProcessors.RenderProcessor.ctor.call(this,executionOrder);this.postProcessRender=postProcessRender;this.scene=scene;this.entities=entities}},methods:{Render:function(source,destination){var $t,$t1,$t2,$t3,$t4,$t5,graphicsDevice,renderers,renderer,entity,finalComponent,mesh;SpineEngine.Graphics.RenderProcessors.RenderProcessor.prototype.Render.call(this,source,destination);graphicsDevice=SpineEngine.Core.Instance.GraphicsDevice;renderers=this.scene.Renderers.GetAll();this.lastState.RenderTarget=null;this.lastState.RenderTarget2=null;this.lastState.Material=null;this.lastState.Camera=null;SpineEngine.Graphics.Graphic.SpriteBatch.Begin();$t=Bridge.getEnumerator(renderers);try{while($t.moveNext())if(renderer=$t.Current,renderer.RenderAfterPostProcessors===this.postProcessRender){renderer.Begin();$t1=Bridge.getEnumerator(this.entities);try{while($t1.moveNext())if((entity={v:$t1.Current},entity.v.Enabled)&&renderer.IsApplicable(entity.v)&&(finalComponent=entity.v.GetComponent(SpineEngine.ECS.Components.FinalRenderComponent),finalComponent.Batch!=null)){var material={v:renderer.RendererMaterial||(($t2=entity.v.GetComponent(SpineEngine.ECS.Components.MaterialComponent))!=null?$t2.Material:null)},camera={v:renderer.RendererCamera||(($t3=entity.v.GetComponent(SpineEngine.ECS.Components.CameraComponent))!=null?$t3.Camera:null)||this.scene.Camera},renderTarget=SpineEngine.Graphics.RenderTexture.op_Implicit(renderer.RenderTexture)||destination,renderTarget2=renderer.RenderTexture2==null?null:SpineEngine.Graphics.RenderTexture.op_Implicit(renderer.RenderTexture2);Bridge.referenceEquals(this.lastState.RenderTarget,renderTarget)&&Bridge.referenceEquals(this.lastState.RenderTarget2,renderTarget2)||(this.lastState.RenderTarget=renderTarget,this.lastState.RenderTarget2=renderTarget2,this.lastState.RenderTarget2==null?graphicsDevice.SetRenderTarget(this.lastState.RenderTarget):graphicsDevice.SetRenderTargets([Microsoft.Xna.Framework.Graphics.RenderTargetBinding.op_Implicit(this.lastState.RenderTarget),Microsoft.Xna.Framework.Graphics.RenderTargetBinding.op_Implicit(this.lastState.RenderTarget2)]),this.postProcessRender||graphicsDevice.Clear(($t4=renderer.RenderTargetClearColor,$t4!=null?$t4:this.scene.ClearColor)));Bridge.referenceEquals(this.lastState.Material,material.v)&&Bridge.referenceEquals(this.lastState.Camera,camera.v)||(this.lastState.Material=material.v,this.lastState.Camera=camera.v,material.v!=null?material.v.OnPreRender(camera.v,entity.v):null,SpineEngine.Graphics.Graphic.SpriteBatch.End(),SpineEngine.Graphics.Graphic.SpriteBatch.Begin(Microsoft.Xna.Framework.Graphics.SpriteSortMode.Deferred,(material.v!=null?material.v.BlendState:null)||Microsoft.Xna.Framework.Graphics.BlendState.AlphaBlend,(material.v!=null?material.v.SamplerState:null)||SpineEngine.Graphics.Graphic.DefaultSamplerState,(material.v!=null?material.v.DepthStencilState:null)||Microsoft.Xna.Framework.Graphics.DepthStencilState.None,Microsoft.Xna.Framework.Graphics.RasterizerState.CullNone,material.v!=null?material.v.Effect:null,camera.v.TransformMatrix.$clone()));$t5=Bridge.getEnumerator(finalComponent.Batch.Meshes);try{while($t5.moveNext())mesh=$t5.Current,mesh.Draw(SpineEngine.Graphics.Graphic.SpriteBatch)}finally{Bridge.is($t5,System.IDisposable)&&$t5.System$IDisposable$Dispose()}}}finally{Bridge.is($t1,System.IDisposable)&&$t1.System$IDisposable$Dispose()}renderer.End()}}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}SpineEngine.Graphics.Graphic.SpriteBatch.End()}}});Bridge.define("SpineEngine.Graphics.RenderProcessors.Impl.FinalRenderRenderProcessor",{inherits:[SpineEngine.Graphics.RenderProcessors.RenderProcessor,SpineEngine.ECS.IScreenResolutionChangedListener],fields:{samplerState:null,finalRenderDestinationRect:null},alias:["SceneBackBufferSizeChanged","SpineEngine$ECS$IScreenResolutionChangedListener$SceneBackBufferSizeChanged"],ctors:{init:function(){this.finalRenderDestinationRect=new SpineEngine.Maths.RectangleF},ctor:function(samplerState,executionOrder){this.$initialize();SpineEngine.Graphics.RenderProcessors.RenderProcessor.ctor.call(this,executionOrder);this.samplerState=samplerState}},methods:{SceneBackBufferSizeChanged:function(realRenderTarget,sceneRenderTarget){this.finalRenderDestinationRect=SpineEngine.Maths.RectangleF.op_Implicit$1(realRenderTarget.$clone())},Render:function(source,destination){this.Material.SamplerState=this.samplerState;this.Batch.Clear();this.Batch.Draw(source,this.finalRenderDestinationRect.$clone(),SpineEngine.Maths.RectangleF.op_Implicit$1(source.Bounds.$clone()),Microsoft.Xna.Framework.Color.White.$clone(),0);SpineEngine.Graphics.Graphic.Draw(destination,Microsoft.Xna.Framework.Color.Black.$clone(),this.Batch,this.Material)}}});Bridge.define("SpineEngine.Graphics.RenderProcessors.Impl.ScreenShotRenderProcessor",{inherits:[SpineEngine.Graphics.RenderProcessors.RenderProcessor],props:{Action:null},ctors:{ctor:function(executionOrder){this.$initialize();SpineEngine.Graphics.RenderProcessors.RenderProcessor.ctor.call(this,executionOrder)}},methods:{Render:function(source,destination){if(SpineEngine.Graphics.RenderProcessors.RenderProcessor.prototype.Render.call(this,source,destination),!Bridge.staticEquals(this.Action,null)){var tex=new Microsoft.Xna.Framework.Graphics.Texture2D.ctor(SpineEngine.Core.Instance.GraphicsDevice,source.Width,source.Height),data=System.Array.init(Bridge.Int.mul(tex.Bounds.Width,tex.Bounds.Height),0,System.Int32);source.GetData(System.Int32,data);tex.SetData(System.Int32,data);this.Action(tex)}}}});Bridge.define("SpineEngine.Graphics.RenderProcessors.RenderProcessor$1",function(T){return{inherits:[SpineEngine.Graphics.RenderProcessors.RenderProcessor],props:{TypedEffect:{get:function(){return Bridge.cast(this.Effect,T)},set:function(value){this.Effect=value}}},ctors:{ctor:function(executionOrder,typedEffect){typedEffect===void 0&&(typedEffect=Bridge.getDefaultValue(T));this.$initialize();SpineEngine.Graphics.RenderProcessors.RenderProcessor.ctor.call(this,executionOrder,typedEffect);this.TypedEffect=typedEffect}}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.BestFitSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],props:{BleedSize:null},ctors:{init:function(){this.BleedSize=new Microsoft.Xna.Framework.Point}},methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,safeScaleX=screenWidth/(designSize.X-this.BleedSize.X|0),safeScaleY=screenHeight/(designSize.Y-this.BleedSize.Y|0),resolutionScale=Microsoft.Xna.Framework.MathHelper.Max$1(resolutionScaleX,resolutionScaleY),safeScale=Microsoft.Xna.Framework.MathHelper.Min$1(safeScaleX,safeScaleY),renderWidth,renderHeight;return resolutionScaleX=resolutionScaleY=Microsoft.Xna.Framework.MathHelper.Min$1(resolutionScale,safeScale),renderWidth=designSize.X*resolutionScaleX,renderHeight=designSize.Y*resolutionScaleY,new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.div(Bridge.Int.clip32(screenWidth-renderWidth),2)|0,Bridge.Int.div(Bridge.Int.clip32(screenHeight-renderHeight),2)|0,Bridge.Int.clip32(renderWidth),Bridge.Int.clip32(renderHeight))},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.ExactFitSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,renderWidth=designSize.X*resolutionScaleX,renderHeight=designSize.Y*resolutionScaleY;return new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.div(Bridge.Int.clip32(screenWidth-renderWidth),2)|0,Bridge.Int.div(Bridge.Int.clip32(screenHeight-renderHeight),2)|0,Bridge.Int.clip32(renderWidth),Bridge.Int.clip32(renderHeight))},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.FixedHeightPixelPerfectSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var screenAspectRatio=screenWidth/screenHeight,resolutionScaleX=screenWidth/designSize.X,pixelPerfectScale,floatScale,floatScale1,result;return designSize.X/designSize.Y<screenAspectRatio?(floatScale=screenWidth/designSize.X,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale)):(floatScale1=screenHeight/designSize.Y,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale1)),pixelPerfectScale===0&&(pixelPerfectScale=1),result=new Microsoft.Xna.Framework.Rectangle.ctor,result.Width=SpineEngine.Maths.Mathf.CeilToInt(designSize.X*resolutionScaleX),result.Height=SpineEngine.Maths.Mathf.CeilToInt(Bridge.Int.mul(designSize.Y,pixelPerfectScale)),result.X=Bridge.Int.div(screenWidth-result.Width|0,2)|0,result.Y=Bridge.Int.div(screenHeight-result.Height|0,2)|0,result.$clone()},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){var screenAspectRatio=screenWidth/screenHeight,resolutionScaleX=screenWidth/designSize.X,pixelPerfectScale,floatScale,floatScale1;return designSize.X/designSize.Y<screenAspectRatio?(floatScale=screenWidth/designSize.X,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale)):(floatScale1=screenHeight/designSize.Y,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale1)),pixelPerfectScale===0&&(pixelPerfectScale=1),new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,Bridge.Int.clip32(designSize.X*resolutionScaleX/pixelPerfectScale),designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.FixedHeightSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,renderWidth,renderHeight;return resolutionScaleX=resolutionScaleY,renderWidth=designSize.X*resolutionScaleX,renderHeight=designSize.Y*resolutionScaleY,new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.div(Bridge.Int.clip32(screenWidth-renderWidth),2)|0,Bridge.Int.div(Bridge.Int.clip32(screenHeight-renderHeight),2)|0,Bridge.Int.clip32(renderWidth),Bridge.Int.clip32(renderHeight))},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,newWidth;return resolutionScaleX=resolutionScaleY,newWidth=SpineEngine.Maths.Mathf.CeilToInt(screenWidth/resolutionScaleX),new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,newWidth,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.FixedWidthPixelPerfectSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var screenAspectRatio=screenWidth/screenHeight,resolutionScaleY=screenHeight/designSize.Y,pixelPerfectScale,floatScale,floatScale1,result;return designSize.X/designSize.Y<screenAspectRatio?(floatScale=screenWidth/designSize.X,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale)):(floatScale1=screenHeight/designSize.Y,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale1)),pixelPerfectScale===0&&(pixelPerfectScale=1),result=new Microsoft.Xna.Framework.Rectangle.ctor,result.Width=SpineEngine.Maths.Mathf.CeilToInt(Bridge.Int.mul(designSize.X,pixelPerfectScale)),result.Height=SpineEngine.Maths.Mathf.CeilToInt(designSize.Y*resolutionScaleY),result.X=Bridge.Int.div(screenWidth-result.Width|0,2)|0,result.Y=Bridge.Int.div(screenHeight-result.Height|0,2)|0,result.$clone()},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){var screenAspectRatio=screenWidth/screenHeight,resolutionScaleY=screenHeight/designSize.Y,pixelPerfectScale,floatScale,floatScale1;return designSize.X/designSize.Y<screenAspectRatio?(floatScale=screenWidth/designSize.X,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale)):(floatScale1=screenHeight/designSize.Y,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale1)),pixelPerfectScale===0&&(pixelPerfectScale=1),new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,Bridge.Int.clip32(designSize.Y*resolutionScaleY/pixelPerfectScale))}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.FixedWidthSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,renderWidth,renderHeight;return resolutionScaleY=resolutionScaleX,renderWidth=designSize.X*resolutionScaleX,renderHeight=designSize.Y*resolutionScaleY,new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.div(Bridge.Int.clip32(screenWidth-renderWidth),2)|0,Bridge.Int.div(Bridge.Int.clip32(screenHeight-renderHeight),2)|0,Bridge.Int.clip32(renderWidth),Bridge.Int.clip32(renderHeight))},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,newHeight;return resolutionScaleY=resolutionScaleX,newHeight=SpineEngine.Maths.Mathf.CeilToInt(screenHeight/resolutionScaleY),new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,newHeight)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.NoBorderPixelPerfectSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var screenAspectRatio=screenWidth/screenHeight,pixelPerfectScale,floatScale,floatScale1,result;return designSize.X/designSize.Y<screenAspectRatio?(floatScale=screenWidth/designSize.X,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale)):(floatScale1=screenHeight/designSize.Y,pixelPerfectScale=SpineEngine.Maths.Mathf.CeilToInt(floatScale1)),pixelPerfectScale===0&&(pixelPerfectScale=1),result=new Microsoft.Xna.Framework.Rectangle.ctor,result.Width=SpineEngine.Maths.Mathf.CeilToInt(Bridge.Int.mul(designSize.X,pixelPerfectScale)),result.Height=SpineEngine.Maths.Mathf.CeilToInt(Bridge.Int.mul(designSize.Y,pixelPerfectScale)),result.X=Bridge.Int.div(screenWidth-result.Width|0,2)|0,result.Y=Bridge.Int.div(screenHeight-result.Height|0,2)|0,result.$clone()},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.NoBorderSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,renderWidth,renderHeight;return resolutionScaleX=resolutionScaleY=Math.max(resolutionScaleX,resolutionScaleY),renderWidth=designSize.X*resolutionScaleX,renderHeight=designSize.Y*resolutionScaleY,new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.div(Bridge.Int.clip32(screenWidth-renderWidth),2)|0,Bridge.Int.div(Bridge.Int.clip32(screenHeight-renderHeight),2)|0,Bridge.Int.clip32(renderWidth),Bridge.Int.clip32(renderHeight))},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.NoneSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,screenWidth,screenHeight)},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,screenWidth,screenHeight)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.ShowAllPixelPerfectSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var screenAspectRatio=screenWidth/screenHeight,pixelPerfectScale,result;return pixelPerfectScale=designSize.X/designSize.Y>screenAspectRatio?Bridge.Int.div(screenWidth,designSize.X)|0:Bridge.Int.div(screenHeight,designSize.Y)|0,pixelPerfectScale===0&&(pixelPerfectScale=1),result=new Microsoft.Xna.Framework.Rectangle.ctor,result.Width=SpineEngine.Maths.Mathf.CeilToInt(Bridge.Int.mul(designSize.X,pixelPerfectScale)),result.Height=SpineEngine.Maths.Mathf.CeilToInt(Bridge.Int.mul(designSize.Y,pixelPerfectScale)),result.X=Bridge.Int.div(screenWidth-result.Width|0,2)|0,result.Y=Bridge.Int.div(screenHeight-result.Height|0,2)|0,result.$clone()},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.ShowAllSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){var resolutionScaleX=screenWidth/designSize.X,resolutionScaleY=screenHeight/designSize.Y,renderWidth,renderHeight;return resolutionScaleX=resolutionScaleY=Math.min(resolutionScaleX,resolutionScaleY),renderWidth=designSize.X*resolutionScaleX,renderHeight=designSize.Y*resolutionScaleY,new Microsoft.Xna.Framework.Rectangle.$ctor2(Bridge.Int.div(Bridge.Int.clip32(screenWidth-renderWidth),2)|0,Bridge.Int.div(Bridge.Int.clip32(screenHeight-renderHeight),2)|0,Bridge.Int.clip32(renderWidth),Bridge.Int.clip32(renderHeight))},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.ResolutionPolicy.StretchSceneResolutionPolicy",{inherits:[SpineEngine.Graphics.ResolutionPolicy.SceneResolutionPolicy],methods:{GetFinalRenderDestinationRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,screenWidth,screenHeight)},GetRenderTargetRect:function(screenWidth,screenHeight,designSize){return new Microsoft.Xna.Framework.Rectangle.$ctor2(0,0,designSize.X,designSize.Y)}}});Bridge.define("SpineEngine.Graphics.Transitions.QuickTransition",{inherits:[SpineEngine.Graphics.Transitions.SceneTransition],methods:{OnBeginTransition:function(){var $step=0,$jumpFromFinally,$returnValue,$async_e,$enumerator=new Bridge.GeneratorEnumerator(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:return $enumerator.current=null,$step=1,!0;case 1:this.SetNextScene();this.TransitionComplete();default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator}}});Bridge.define("SpineEngine.Maths.QuadTree.QuadTree$1",function(T){return{inherits:[System.Collections.Generic.ICollection$1(T)],fields:{wrappedDictionary:null},props:{QuadTreeRoot:null,QuadRect:{get:function(){return this.QuadTreeRoot.QuadRect.$clone()}},Count:{get:function(){return this.wrappedDictionary.count}},IsReadOnly:{get:function(){return!1}}},alias:["add","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$add","clear","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$clear","contains","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$contains","copyTo","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$copyTo","Count","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$Count","IsReadOnly","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$IsReadOnly","remove","System$Collections$Generic$ICollection$1$"+Bridge.getTypeAlias(T)+"$remove","GetEnumerator",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(T)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{init:function(){this.wrappedDictionary=new(System.Collections.Generic.Dictionary$2(T,SpineEngine.Maths.QuadTree.QuadTreeObject$1(T)))},ctor:function(rect){this.$initialize();this.QuadTreeRoot=new(SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).ctor)(rect.$clone())},$ctor1:function(x,y,width,height){this.$initialize();this.QuadTreeRoot=new(SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).ctor)(new Microsoft.Xna.Framework.Rectangle.$ctor2(x,y,width,height))}},methods:{GetObjects:function(rect){return this.QuadTreeRoot.GetObjects(rect.$clone())},GetObjects$1:function(rect,results){this.QuadTreeRoot.GetObjects$1(rect.$clone(),results)},GetAllObjects:function(){return new(System.Collections.Generic.List$1(T).$ctor1)(this.wrappedDictionary.getKeys())},Move:function(item){return this.contains(item)?(this.QuadTreeRoot.Move(this.wrappedDictionary.get(item)),!0):!1},add:function(item){var wrappedObject=new(SpineEngine.Maths.QuadTree.QuadTreeObject$1(T))(item);this.wrappedDictionary.add(item,wrappedObject);this.QuadTreeRoot.Insert(wrappedObject)},clear:function(){this.wrappedDictionary.clear();this.QuadTreeRoot.Clear()},contains:function(item){return this.wrappedDictionary.containsKey(item)},copyTo:function(array,arrayIndex){System.Array.copyTo(this.wrappedDictionary.getKeys(),array,arrayIndex,T)},remove:function(item){return this.contains(item)?(this.QuadTreeRoot.Delete(this.wrappedDictionary.get(item),!0),this.wrappedDictionary.remove(item),!0):!1},GetEnumerator:function(){return Bridge.getEnumerator(this.wrappedDictionary.getKeys(),T)},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()}}}});Bridge.define("SpineEngine.Maths.QuadTree.QuadTreeNode$1",function(T){return{statics:{fields:{MaxObjectsPerNode:0},ctors:{init:function(){this.MaxObjectsPerNode=2}}},fields:{objects:null},props:{QuadRect:null,TopLeftChild:null,TopRightChild:null,BottomLeftChild:null,BottomRightChild:null,Parent:null,Count:{get:function(){return this.ObjectCount()}},IsEmptyLeaf:{get:function(){return this.Count===0&&this.TopLeftChild==null}}},ctors:{init:function(){this.QuadRect=new Microsoft.Xna.Framework.Rectangle},ctor:function(quadRect){this.$initialize();this.QuadRect=quadRect.$clone()},$ctor2:function(x,y,width,height){this.$initialize();this.QuadRect=new Microsoft.Xna.Framework.Rectangle.$ctor2(x,y,width,height)},$ctor1:function(parent,rect){SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).ctor.call(this,rect);this.Parent=parent}},methods:{Add:function(item){this.objects==null&&(this.objects=new(System.Collections.Generic.List$1(SpineEngine.Maths.QuadTree.QuadTreeObject$1(T)).ctor));item.Owner=this;this.objects.add(item)},Remove:function(item){if(this.objects!=null){var removeIndex=this.objects.indexOf(item);removeIndex>=0&&(this.objects.setItem(removeIndex,this.objects.getItem(this.objects.Count-1|0)),this.objects.removeAt(this.objects.Count-1|0))}},ObjectCount:function(){var count=0;return this.objects!=null&&(count=count+this.objects.Count|0),this.TopLeftChild!=null&&(count=count+this.TopLeftChild.ObjectCount()|0,count=count+this.TopRightChild.ObjectCount()|0,count=count+this.BottomLeftChild.ObjectCount()|0,count=count+this.BottomRightChild.ObjectCount()|0),count},Subdivide:function(){var size=new Microsoft.Xna.Framework.Point.$ctor2(Bridge.Int.div(this.QuadRect.Width,2)|0,Bridge.Int.div(this.QuadRect.Height,2)|0),mid=new Microsoft.Xna.Framework.Point.$ctor2(this.QuadRect.X+size.X|0,this.QuadRect.Y+size.Y|0),i,destTree;for(this.TopLeftChild=new(SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).$ctor1)(this,new Microsoft.Xna.Framework.Rectangle.$ctor2(this.QuadRect.Left,this.QuadRect.Top,size.X,size.Y)),this.TopRightChild=new(SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).$ctor1)(this,new Microsoft.Xna.Framework.Rectangle.$ctor2(mid.X,this.QuadRect.Top,size.X,size.Y)),this.BottomLeftChild=new(SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).$ctor1)(this,new Microsoft.Xna.Framework.Rectangle.$ctor2(this.QuadRect.Left,mid.Y,size.X,size.Y)),this.BottomRightChild=new(SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).$ctor1)(this,new Microsoft.Xna.Framework.Rectangle.$ctor2(mid.X,mid.Y,size.X,size.Y)),i=0;i<this.objects.Count;i=i+1|0)destTree=this.GetDestinationTree(this.objects.getItem(i)),Bridge.referenceEquals(destTree,this)||(destTree.Insert(this.objects.getItem(i)),this.Remove(this.objects.getItem(i)),i=i-1|0)},GetDestinationTree:function(item){var destTree=this;return this.TopLeftChild.QuadRect.Contains$1(item.Data.SpineEngine$Maths$QuadTree$IQuadTreeStorable$Bounds.$clone())?destTree=this.TopLeftChild:this.TopRightChild.QuadRect.Contains$1(item.Data.SpineEngine$Maths$QuadTree$IQuadTreeStorable$Bounds.$clone())?destTree=this.TopRightChild:this.BottomLeftChild.QuadRect.Contains$1(item.Data.SpineEngine$Maths$QuadTree$IQuadTreeStorable$Bounds.$clone())?destTree=this.BottomLeftChild:this.BottomRightChild.QuadRect.Contains$1(item.Data.SpineEngine$Maths$QuadTree$IQuadTreeStorable$Bounds.$clone())&&(destTree=this.BottomRightChild),destTree},Relocate:function(item){var $t,dest,formerOwner;this.QuadRect.Contains$1(item.Data.SpineEngine$Maths$QuadTree$IQuadTreeStorable$Bounds.$clone())?this.TopLeftChild!=null&&(dest=this.GetDestinationTree(item),Bridge.referenceEquals(item.Owner,dest)||(formerOwner=item.Owner,this.Delete(item,!1),dest.Insert(item),formerOwner.CleanUpwards())):($t=this.Parent)!=null?$t.Relocate(item):null},CleanUpwards:function(){this.TopLeftChild!=null?this.TopLeftChild.IsEmptyLeaf&&this.TopRightChild.IsEmptyLeaf&&this.BottomLeftChild.IsEmptyLeaf&&this.BottomRightChild.IsEmptyLeaf&&(this.TopLeftChild=null,this.TopRightChild=null,this.BottomLeftChild=null,this.BottomRightChild=null,this.Parent!=null&&this.Count===0&&this.Parent.CleanUpwards()):this.Parent!=null&&this.Count===0&&this.Parent.CleanUpwards()},Clear:function(){this.TopLeftChild!=null&&(this.TopLeftChild.Clear(),this.TopRightChild.Clear(),this.BottomLeftChild.Clear(),this.BottomRightChild.Clear());this.objects!=null&&(this.objects.clear(),this.objects=null);this.TopLeftChild=null;this.TopRightChild=null;this.BottomLeftChild=null;this.BottomRightChild=null},Delete:function(item,clean){item.Owner!=null&&(Bridge.referenceEquals(item.Owner,this)?(this.Remove(item),clean&&this.CleanUpwards()):item.Owner.Delete(item,clean))},Insert:function(item){if(!this.QuadRect.Contains$1(item.Data.SpineEngine$Maths$QuadTree$IQuadTreeStorable$Bounds.$clone()))if(this.Parent==null)this.Add(item);else return;if(this.objects==null||this.TopLeftChild==null&&(this.objects.Count+1|0)<=SpineEngine.Maths.QuadTree.QuadTreeNode$1(T).MaxObjectsPerNode)this.Add(item);else{this.TopLeftChild==null&&this.Subdivide();var destTree=this.GetDestinationTree(item);Bridge.referenceEquals(destTree,this)?this.Add(item):destTree.Insert(item)}},GetObjects:function(searchRect){var results={v:new(System.Collections.Generic.List$1(T).ctor)};return this.GetObjects$1(searchRect.$clone(),results),results.v},GetObjects$1:function(searchRect,results){if(results.v!=null)if(searchRect.Contains$1(this.QuadRect.$clone()))this.GetAllObjects(results);else if(searchRect.Intersects(this.QuadRect.$clone())){if(this.objects!=null)for(var i=0;i<this.objects.Count;i=i+1|0)searchRect.Intersects(this.objects.getItem(i).Data.SpineEngine$Maths$QuadTree$IQuadTreeStorable$Bounds.$clone())&&results.v.add(this.objects.getItem(i).Data);this.TopLeftChild!=null&&(this.TopLeftChild.GetObjects$1(searchRect.$clone(),results),this.TopRightChild.GetObjects$1(searchRect.$clone(),results),this.BottomLeftChild.GetObjects$1(searchRect.$clone(),results),this.BottomRightChild.GetObjects$1(searchRect.$clone(),results))}},GetAllObjects:function(results){if(this.objects!=null)for(var i=0;i<this.objects.Count;i=i+1|0)results.v.add(this.objects.getItem(i).Data);this.TopLeftChild!=null&&(this.TopLeftChild.GetAllObjects(results),this.TopRightChild.GetAllObjects(results),this.BottomLeftChild.GetAllObjects(results),this.BottomRightChild.GetAllObjects(results))},Move:function(item){item.Owner!=null?item.Owner.Relocate(item):this.Relocate(item)}}}});Bridge.define("SpineEngine.Maths.QuadTree.QuadTreeObject$1",function(T){return{fields:{Data:Bridge.getDefaultValue(T),Owner:null},ctors:{ctor:function(data){this.$initialize();this.Data=data}}}});Bridge.define("SpineEngine.Utils.Collections.PriorityQueue$1",function(T){return{inherits:[SpineEngine.Utils.Collections.IPriorityQueue$1(T)],statics:{methods:{HasHigherPriority:function(higher,lower){return higher.Priority<lower.Priority||higher.Priority===lower.Priority&&higher.InsertionIndex.lt(lower.InsertionIndex)}}},fields:{nodes:null,numNodesEverEnqueued:System.Int64(0)},props:{MaxSize:{get:function(){return this.nodes.length-1|0}},Count:0,First:{get:function(){return this.nodes[System.Array.index(1,this.nodes)]}}},alias:["Count","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Count","Clear","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Clear","Contains","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Contains","Enqueue","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Enqueue","Dequeue","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Dequeue","First","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$First","UpdatePriority","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$UpdatePriority","Remove","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Remove","GetEnumerator",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(T)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{ctor:function(maxNodes){this.$initialize();this.Count=0;this.nodes=System.Array.init(maxNodes+1|0,function(){return Bridge.getDefaultValue(T)},T);this.numNodesEverEnqueued=System.Int64(0)}},methods:{Clear:function(){System.Array.fill(this.nodes,Bridge.getDefaultValue(T),1,this.Count);this.Count=0},Contains:function(node){return Bridge.referenceEquals(this.nodes[System.Array.index(node.QueueIndex,this.nodes)],node)},Enqueue:function(node,priority){var $t;node.Priority=priority;this.Count=this.Count+1|0;this.nodes[System.Array.index(this.Count,this.nodes)]=node;node.QueueIndex=this.Count;node.InsertionIndex=($t=this.numNodesEverEnqueued,this.numNodesEverEnqueued=this.numNodesEverEnqueued.inc(),$t);this.CascadeUp(this.nodes[System.Array.index(this.Count,this.nodes)])},Dequeue:function(){var returnMe=this.nodes[System.Array.index(1,this.nodes)];return this.Remove(returnMe),returnMe},UpdatePriority:function(node,priority){node.Priority=priority;this.OnNodeUpdated(node)},Remove:function(node){if(node.QueueIndex===this.Count){this.nodes[System.Array.index(this.Count,this.nodes)]=null;this.Count=this.Count-1|0;return}var formerLastNode=this.nodes[System.Array.index(this.Count,this.nodes)];this.Swap(node,formerLastNode);this.nodes[System.Array.index(this.Count,this.nodes)]=null;this.Count=this.Count-1|0;this.OnNodeUpdated(formerLastNode)},GetEnumerator:function(){var $step=0,$jumpFromFinally,$returnValue,i,$async_e,$enumerator=new(Bridge.GeneratorEnumerator$1(T))(Bridge.fn.bind(this,function(){try{for(;;)switch($step){case 0:i=1;$step=1;continue;case 1:if(i<=this.Count){$step=2;continue}$step=5;continue;case 2:return $enumerator.current=this.nodes[System.Array.index(i,this.nodes)],$step=3,!0;case 3:$step=4;continue;case 4:i=i+1|0;$step=1;continue;case 5:default:return!1}}catch($async_e1){$async_e=System.Exception.create($async_e1);throw $async_e;}}));return $enumerator},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()},Swap:function(node1,node2){this.nodes[System.Array.index(node1.QueueIndex,this.nodes)]=node2;this.nodes[System.Array.index(node2.QueueIndex,this.nodes)]=node1;var temp=node1.QueueIndex;node1.QueueIndex=node2.QueueIndex;node2.QueueIndex=temp},CascadeUp:function(node){for(var parent=Bridge.Int.div(node.QueueIndex,2)|0,parentNode;parent>=1;){if(parentNode=this.nodes[System.Array.index(parent,this.nodes)],SpineEngine.Utils.Collections.PriorityQueue$1(T).HasHigherPriority(parentNode,node))break;this.Swap(node,parentNode);parent=Bridge.Int.div(node.QueueIndex,2)|0}},CascadeDown:function(node){for(var finalQueueIndex=node.QueueIndex,newParent,childLeftIndex,childLeft,childRightIndex,childRight,temp;;){if(newParent=node,childLeftIndex=Bridge.Int.mul(2,finalQueueIndex),childLeftIndex>this.Count){node.QueueIndex=finalQueueIndex;this.nodes[System.Array.index(finalQueueIndex,this.nodes)]=node;break}if(childLeft=this.nodes[System.Array.index(childLeftIndex,this.nodes)],SpineEngine.Utils.Collections.PriorityQueue$1(T).HasHigherPriority(childLeft,newParent)&&(newParent=childLeft),childRightIndex=childLeftIndex+1|0,childRightIndex<=this.Count&&(childRight=this.nodes[System.Array.index(childRightIndex,this.nodes)],SpineEngine.Utils.Collections.PriorityQueue$1(T).HasHigherPriority(childRight,newParent)&&(newParent=childRight)),Bridge.referenceEquals(newParent,node)){node.QueueIndex=finalQueueIndex;this.nodes[System.Array.index(finalQueueIndex,this.nodes)]=node;break}else this.nodes[System.Array.index(finalQueueIndex,this.nodes)]=newParent,temp=newParent.QueueIndex,newParent.QueueIndex=finalQueueIndex,finalQueueIndex=temp}},Resize:function(maxNodes){for(var newArray=System.Array.init(maxNodes+1|0,function(){return Bridge.getDefaultValue(T)},T),highestIndexToCopy=Math.min(maxNodes,this.Count),i=1;i<=highestIndexToCopy;i=i+1|0)newArray[System.Array.index(i,newArray)]=this.nodes[System.Array.index(i,this.nodes)];this.nodes=newArray},OnNodeUpdated:function(node){var parentIndex=Bridge.Int.div(node.QueueIndex,2)|0,parentNode=this.nodes[System.Array.index(parentIndex,this.nodes)];parentIndex>0&&SpineEngine.Utils.Collections.PriorityQueue$1(T).HasHigherPriority(node,parentNode)?this.CascadeUp(node):this.CascadeDown(node)},IsValidQueue:function(){for(var childLeftIndex,childRightIndex,i=1;i<this.nodes.length;i=i+1|0)if(this.nodes[System.Array.index(i,this.nodes)]!=null&&((childLeftIndex=Bridge.Int.mul(2,i),childLeftIndex<this.nodes.length&&this.nodes[System.Array.index(childLeftIndex,this.nodes)]!=null&&SpineEngine.Utils.Collections.PriorityQueue$1(T).HasHigherPriority(this.nodes[System.Array.index(childLeftIndex,this.nodes)],this.nodes[System.Array.index(i,this.nodes)]))||(childRightIndex=childLeftIndex+1|0,childRightIndex<this.nodes.length&&this.nodes[System.Array.index(childRightIndex,this.nodes)]!=null&&SpineEngine.Utils.Collections.PriorityQueue$1(T).HasHigherPriority(this.nodes[System.Array.index(childRightIndex,this.nodes)],this.nodes[System.Array.index(i,this.nodes)]))))return!1;return!0}}}});Bridge.define("SpineEngine.Utils.Collections.SimplePriorityQueue$1",function(T){return{inherits:[SpineEngine.Utils.Collections.IPriorityQueue$1(T)],statics:{fields:{InitialQueueSize:0},ctors:{init:function(){this.InitialQueueSize=10}}},fields:{queue:null},props:{Count:{get:function(){return this.queue,this.queue.Count}},First:{get:function(){if(this.queue,this.queue.Count<=0)throw new System.InvalidOperationException.$ctor1("Cannot call .First on an empty queue");var first=this.queue.First;return first!=null?first.Data:Bridge.getDefaultValue(T)}}},alias:["Count","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Count","First","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$First","Clear","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Clear","Contains","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Contains","Dequeue","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Dequeue","Enqueue","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Enqueue","Remove","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$Remove","UpdatePriority","SpineEngine$Utils$Collections$IPriorityQueue$1$"+Bridge.getTypeAlias(T)+"$UpdatePriority","GetEnumerator",["System$Collections$Generic$IEnumerable$1$"+Bridge.getTypeAlias(T)+"$GetEnumerator","System$Collections$Generic$IEnumerable$1$GetEnumerator"]],ctors:{ctor:function(){this.$initialize();this.queue=new(SpineEngine.Utils.Collections.PriorityQueue$1(SpineEngine.Utils.Collections.SimplePriorityQueue$1.SimpleNode(T)))(SpineEngine.Utils.Collections.SimplePriorityQueue$1(T).InitialQueueSize)}},methods:{Clear:function(){this.queue;this.queue.Clear()},Contains:function(item){var $t,comparer,node;this.queue;comparer=System.Collections.Generic.EqualityComparer$1(T).def;$t=Bridge.getEnumerator(this.queue);try{while($t.moveNext())if(node=$t.Current,comparer.equals2(node.Data,item))return!0}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return!1},Dequeue:function(){if(this.queue,this.queue.Count<=0)throw new System.InvalidOperationException.$ctor1("Cannot call Dequeue() on an empty queue");var node=this.queue.Dequeue();return node.Data},Enqueue:function(item,priority){this.queue;var node=new(SpineEngine.Utils.Collections.SimplePriorityQueue$1.SimpleNode(T))(item);this.queue.Count===this.queue.MaxSize&&this.queue.Resize(Bridge.Int.mul(this.queue.MaxSize,2)+1|0);this.queue.Enqueue(node,priority)},Remove:function(item){this.queue;try{this.queue.Remove(this.GetExistingNode(item))}catch($e1){$e1=System.Exception.create($e1);var ex;if(Bridge.is($e1,System.InvalidOperationException)){ex=$e1;throw new System.InvalidOperationException.$ctor2(System.String.concat("Cannot call Remove() on a node which is not enqueued: ",item),ex);}else throw $e1;}},UpdatePriority:function(item,priority){var updateMe,ex;this.queue;try{updateMe=this.GetExistingNode(item);this.queue.UpdatePriority(updateMe,priority)}catch($e1){if($e1=System.Exception.create($e1),Bridge.is($e1,System.InvalidOperationException)){ex=$e1;throw new System.InvalidOperationException.$ctor2(System.String.concat("Cannot call UpdatePriority() on a node which is not enqueued: ",item),ex);}else throw $e1;}},GetEnumerator:function(){var $t,queueData=new(System.Collections.Generic.List$1(T).ctor),node;this.queue;$t=Bridge.getEnumerator(this.queue);try{while($t.moveNext())node=$t.Current,queueData.add(node.Data)}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return queueData.GetEnumerator().$clone()},System$Collections$IEnumerable$GetEnumerator:function(){return this.GetEnumerator()},GetExistingNode:function(item){var $t,comparer=System.Collections.Generic.EqualityComparer$1(T).def,node;$t=Bridge.getEnumerator(this.queue);try{while($t.moveNext())if(node=$t.Current,comparer.equals2(node.Data,item))return node}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}throw new System.InvalidOperationException.$ctor1(System.String.concat("Item cannot be found in queue: ",item));},IsValidQueue:function(){return this.queue,this.queue.IsValidQueue()}}}});Bridge.define("SpineEngine.Utils.Collections.SimplePriorityQueue$1.SimpleNode",function(T){return{inherits:[SpineEngine.Utils.Collections.PriorityQueueNode],$kind:"nested class",props:{Data:Bridge.getDefaultValue(T)},ctors:{ctor:function(data){this.$initialize();SpineEngine.Utils.Collections.PriorityQueueNode.ctor.call(this);this.Data=data}}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.GamePadDpadLeftRight",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.Value=inputGamePad.DpadRightDown?1:inputGamePad.DpadLeftDown?-1:0}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.GamePadDpadUpDown",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.Value=inputGamePad.DpadDownDown?1:inputGamePad.DpadUpDown?-1:0}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.GamePadLeftStickX",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",fields:{Deadzone:0},ctors:{ctor:function(deadzone){deadzone===void 0&&(deadzone=.1);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node.ctor.call(this);this.Deadzone=deadzone}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.Value=SpineEngine.Maths.Mathf.SignThreshold(inputGamePad.GetLeftStick$1(this.Deadzone).X,this.Deadzone)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.GamePadLeftStickY",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",fields:{Deadzone:0,InvertResult:!1},ctors:{init:function(){this.InvertResult=!0},ctor:function(deadzone){deadzone===void 0&&(deadzone=.1);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node.ctor.call(this);this.Deadzone=deadzone}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var multiplier=this.InvertResult?-1:1;this.Value=multiplier*SpineEngine.Maths.Mathf.SignThreshold(inputGamePad.GetLeftStick$1(this.Deadzone).Y,this.Deadzone)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.GamePadRightStickX",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",fields:{Deadzone:0},ctors:{ctor:function(deadzone){deadzone===void 0&&(deadzone=.1);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node.ctor.call(this);this.Deadzone=deadzone}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.Value=SpineEngine.Maths.Mathf.SignThreshold(inputGamePad.GetRightStick$1(this.Deadzone).X,this.Deadzone)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.GamePadRightStickY",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",fields:{Deadzone:0},ctors:{ctor:function(deadzone){deadzone===void 0&&(deadzone=.1);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node.ctor.call(this);this.Deadzone=deadzone}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.Value=SpineEngine.Maths.Mathf.SignThreshold(inputGamePad.GetRightStick$1(this.Deadzone).Y,this.Deadzone)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.KeyboardKeys",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",fields:{Negative:0,Positive:0},ctors:{ctor:function(negative,positive){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node.ctor.call(this);this.Negative=negative;this.Positive=positive}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.SetValue(inputKeyboard.IsKeyDown(this.Negative),inputKeyboard.IsKeyDown(this.Positive))}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.MouseButtons",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.SetValue(inputMouse.LeftMouseButtonDown,inputMouse.RightMouseButtonDown)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.SettableValue",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",props:{AxisValue:0},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.Value=this.AxisValue}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.TouchHalfRegion",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node],$kind:"nested class",fields:{isVertical:!1,region:null},ctors:{init:function(){this.region=new Microsoft.Xna.Framework.Rectangle},ctor:function(isVertical,region){region===void 0&&(region=null);var $t;this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.Node.ctor.call(this);this.isVertical=isVertical;this.region=($t=region,$t!=null?$t:SpineEngine.Core.Instance.Screen.Bounds)}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){if(!inputTouch.IsConnected||!System.Linq.Enumerable.from(inputTouch.CurrentTouches).any()){this.Value=0;return}var leftTouch,rightTouch;this.isVertical?(leftTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.TouchHalfRegion.f1)),rightTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.TouchHalfRegion.f2))):(leftTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.TouchHalfRegion.f3)),rightTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.TouchHalfRegion.f4)));this.SetValue(leftTouch,rightTouch)}}});Bridge.ns("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.TouchHalfRegion",$asm.$);Bridge.apply($asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.TouchHalfRegion,{f1:function(a){return a.Position.Y<this.region.$clone().Height/2},f2:function(a){return a.Position.Y>=this.region.$clone().Height/2},f3:function(a){return a.Position.X<this.region.$clone().Width/2},f4:function(a){return a.Position.X>=this.region.$clone().Width/2}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.GamePadButton",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",fields:{Button:0},ctors:{ctor:function(button){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node.ctor.call(this);this.Button=button}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputGamePad.IsButtonDown(this.Button)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.GamePadDPadDown",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputGamePad.DpadDownDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.GamePadDPadLeft",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputGamePad.DpadLeftDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.GamePadDPadRight",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputGamePad.DpadRightDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.GamePadDPadUp",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputGamePad.DpadUpDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.GamePadLeftTrigger",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",fields:{Threshold:0},ctors:{ctor:function(threshold){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node.ctor.call(this);this.Threshold=threshold}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputGamePad.IsLeftTriggerDown(this.Threshold)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.GamePadRightTrigger",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",fields:{Threshold:0},ctors:{ctor:function(threshold){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node.ctor.call(this);this.Threshold=threshold}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputGamePad.IsRightTriggerDown(this.Threshold)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.KeyboardKey",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",fields:{Key:0},ctors:{ctor:function(key){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node.ctor.call(this);this.Key=key}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputKeyboard.IsKeyDown(this.Key)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.KeyboardModifiedKey",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",fields:{Key:0,Modifier:0},ctors:{ctor:function(key,modifier){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node.ctor.call(this);this.Key=key;this.Modifier=modifier}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputKeyboard.IsKeyDown(this.Modifier)&&inputKeyboard.IsKeyDown(this.Key)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.MouseLeftButton",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputMouse.LeftMouseButtonDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.MouseMiddleButton",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputMouse.MiddleMouseButtonDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.MouseRightButton",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputMouse.RightMouseButtonDown}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.SettableValue",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",fields:{ButtonValue:!1},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=this.ButtonValue}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.TouchTouched",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualButton.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.IsDown=inputTouch.IsConnected&&System.Linq.Enumerable.from(inputTouch.CurrentTouches).any()}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualIntegerAxis",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis],props:{IntegerValue:{get:function(){return Bridge.Int.sign(this.Value)}}},ctors:{ctor:function(overlap){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.ctor.call(this,overlap)},$ctor1:function(overlap,nodes){nodes===void 0&&(nodes=[]);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualAxis.ctor.call(this,overlap);this.Nodes.AddRange(nodes)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.GamePadDpad",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node],$kind:"nested class",methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.ValueX=inputGamePad.DpadRightDown?1:inputGamePad.DpadLeftDown?-1:0;this.ValueY=inputGamePad.DpadDownDown?1:inputGamePad.DpadUpDown?-1:0}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.GamePadLeftStick",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node],$kind:"nested class",fields:{Deadzone:0},ctors:{ctor:function(deadzone){deadzone===void 0&&(deadzone=.1);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node.ctor.call(this);this.Deadzone=deadzone}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var value=inputGamePad.GetLeftStick$1(this.Deadzone);this.ValueX=value.X;this.ValueY=value.Y}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.GamePadRightStick",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node],$kind:"nested class",fields:{Deadzone:0},ctors:{ctor:function(deadzone){deadzone===void 0&&(deadzone=.1);this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node.ctor.call(this);this.Deadzone=deadzone}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var value=inputGamePad.GetRightStick$1(this.Deadzone);this.ValueX=value.X;this.ValueY=value.Y}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.KeyboardKeys",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node],$kind:"nested class",fields:{Down:0,Left:0,Right:0,Up:0},ctors:{ctor:function(left,right,up,down){this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node.ctor.call(this);this.Left=left;this.Right=right;this.Up=up;this.Down=down}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){var up=inputKeyboard.IsKeyDown(this.Up),down=inputKeyboard.IsKeyDown(this.Down),left=inputKeyboard.IsKeyDown(this.Left),right=inputKeyboard.IsKeyDown(this.Right);this.SetValue(up,down,left,right)}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.SettableValue",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node],$kind:"nested class",fields:{JoysticValue:null},ctors:{init:function(){this.JoysticValue=new Microsoft.Xna.Framework.Vector2}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){this.ValueX=this.JoysticValue.X;this.ValueY=this.JoysticValue.Y}}});Bridge.define("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.TouchHalfRegion",{inherits:[SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node],$kind:"nested class",fields:{region:null},ctors:{init:function(){this.region=new Microsoft.Xna.Framework.Rectangle},ctor:function(region){region===void 0&&(region=null);var $t;this.$initialize();SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.Node.ctor.call(this);this.region=($t=region,$t!=null?$t:SpineEngine.Core.Instance.Screen.Bounds)}},methods:{Update:function(inputKeyboard,inputMouse,inputTouch,inputGamePad){if(!inputTouch.IsConnected||!System.Linq.Enumerable.from(inputTouch.CurrentTouches).any()){this.ValueX=0;this.ValueY=0;return}var leftTouch,rightTouch,upTouch,downTouch;upTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.TouchHalfRegion.f1));downTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.TouchHalfRegion.f2));leftTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.TouchHalfRegion.f3));rightTouch=System.Linq.Enumerable.from(inputTouch.CurrentTouches).any(Bridge.fn.bind(this,$asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.TouchHalfRegion.f4));this.SetValue(upTouch,downTouch,leftTouch,rightTouch)}}});Bridge.ns("SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.TouchHalfRegion",$asm.$);Bridge.apply($asm.$.SpineEngine.ECS.EntitySystems.VirtualInput.VirtualJoystick.TouchHalfRegion,{f1:function(a){return a.Position.Y<this.region.$clone().Height/2},f2:function(a){return a.Position.Y>=this.region.$clone().Height/2},f3:function(a){return a.Position.X<this.region.$clone().Width/2},f4:function(a){return a.Position.X>=this.region.$clone().Width/2}});Bridge.define("SpineEngine.GlobalManagers.Tweens.Tween$1",function(T){return{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITween$1(T)],fields:{fromValue:Bridge.getDefaultValue(T),isFromValueOverridden:!1,TweenTarget:null},props:{ToValue:Bridge.getDefaultValue(T),IsTimeScaleIndependent:!1,TimeScale:0,FromValue:{get:function(){return this.fromValue},set:function(value){this.isFromValueOverridden=!0;this.fromValue=value}},EaseType:0,CompletionHandler:null,LoopCompleteHandler:null,NextTween:null,Delay:0,Duration:0,LoopType:0,Loops:0,DelayBetweenLoops:0,Target:{get:function(){return this.TweenTarget["SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$"+Bridge.getTypeAlias(T)+"$Target"]}}},alias:["FromValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$1$"+Bridge.getTypeAlias(T)+"$FromValue","EaseType","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$EaseType","CompletionHandler","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$1$"+Bridge.getTypeAlias(T)+"$CompletionHandler","LoopCompleteHandler","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$1$"+Bridge.getTypeAlias(T)+"$LoopCompleteHandler","NextTween","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$NextTween","Delay","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Delay","Duration","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Duration","LoopType","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$LoopType","Loops","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Loops","DelayBetweenLoops","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$DelayBetweenLoops","Target","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$1$"+Bridge.getTypeAlias(T)+"$Target","Start","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Start","NotifyLoopCompleted","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$NotifyLoopCompleted","NotifyCompleted","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$NotifyCompleted","Stop","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$Stop"],ctors:{init:function(){this.TimeScale=1},ctor:function(tweenTarget,toValue,duration){this.$initialize();this.TweenTarget=tweenTarget;this.ToValue=toValue;this.Duration=duration}},methods:{Start:function(){this.isFromValueOverridden||(this.FromValue=this.TweenTarget["SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$"+Bridge.getTypeAlias(T)+"$TweenedValue"])},NotifyLoopCompleted:function(){var $t;Bridge.staticEquals($t=this.LoopCompleteHandler,null)?null:$t(this)},NotifyCompleted:function(){var $t;Bridge.staticEquals($t=this.CompletionHandler,null)?null:$t(this)},Stop:function(){this.LoopType=SpineEngine.GlobalManagers.Tweens.LoopType.None;this.Loops=0}}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenTargets.ColorComponentTweenTarget",{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITweenTarget$1(Microsoft.Xna.Framework.Color)],fields:{target:null},props:{TweenedValue:{get:function(){return this.target.Color.$clone()},set:function(value){this.target.Color=value.$clone()}},Target:{get:function(){return this.target}}},alias:["TweenedValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Color$TweenedValue","Target","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Color$Target"],ctors:{ctor:function(target){this.$initialize();this.target=target}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenTargets.PositionComponentTweenTarget",{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITweenTarget$1(Microsoft.Xna.Framework.Vector2)],fields:{target:null},props:{TweenedValue:{get:function(){return this.target.Position.$clone()},set:function(value){this.target.Position=value.$clone()}},Target:{get:function(){return this.target}}},alias:["TweenedValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Vector2$TweenedValue","Target","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Vector2$Target"],ctors:{ctor:function(target){this.$initialize();this.target=target}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenTargets.RotateComponentTweenTarget",{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITweenTarget$1(System.Single)],fields:{target:null},props:{TweenedValue:{get:function(){return this.target.Rotation},set:function(value){this.target.Rotation=value}},Target:{get:function(){return this.target}}},alias:["TweenedValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$System$Single$TweenedValue","Target","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$System$Single$Target"],ctors:{ctor:function(target){this.$initialize();this.target=target}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenTargets.RotateDegreesComponentTweenTarget",{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITweenTarget$1(System.Single)],fields:{target:null},props:{TweenedValue:{get:function(){return this.target.RotationDegrees},set:function(value){this.target.RotationDegrees=value}},Target:{get:function(){return this.target}}},alias:["TweenedValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$System$Single$TweenedValue","Target","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$System$Single$Target"],ctors:{ctor:function(target){this.$initialize();this.target=target}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.TweenTargets.ScaleComponentTweenTarget",{inherits:[SpineEngine.GlobalManagers.Tweens.Interfaces.ITweenTarget$1(Microsoft.Xna.Framework.Vector2)],fields:{target:null},props:{TweenedValue:{get:function(){return this.target.Scale.$clone()},set:function(value){this.target.Scale=value.$clone()}},Target:{get:function(){return this.target}}},alias:["TweenedValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Vector2$TweenedValue","Target","SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Vector2$Target"],ctors:{ctor:function(target){this.$initialize();this.target=target}}});Bridge.define("SpineEngine.Graphics.Drawable.NinePatchDrawable",{inherits:[SpineEngine.Graphics.Drawable.SubtextureDrawable],statics:{fields:{TopLeft:0,TopCenter:0,TopRight:0,MiddleLeft:0,MiddleCenter:0,MiddleRight:0,BottomLeft:0,BottomCenter:0,BottomRight:0},ctors:{init:function(){this.TopLeft=0;this.TopCenter=1;this.TopRight=2;this.MiddleLeft=3;this.MiddleCenter=4;this.MiddleRight=5;this.BottomLeft=6;this.BottomCenter=7;this.BottomRight=8}},methods:{GenerateNinePatchRects:function(renderRect,destArray,marginLeft,marginRight,marginTop,marginBottom){var stretchedCenterWidth=(renderRect.Width-marginLeft|0)-marginRight|0,stretchedCenterHeight=(renderRect.Height-marginTop|0)-marginBottom|0,bottomY=(renderRect.Y+renderRect.Height|0)-marginBottom|0,rightX=(renderRect.X+renderRect.Width|0)-marginRight|0,leftX=renderRect.X+marginLeft|0,topY=renderRect.Y+marginTop|0;destArray[System.Array.index(0,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(renderRect.X,renderRect.Y,marginLeft,marginTop);destArray[System.Array.index(1,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(leftX,renderRect.Y,stretchedCenterWidth,marginTop);destArray[System.Array.index(2,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(rightX,renderRect.Y,marginRight,marginTop);destArray[System.Array.index(3,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(renderRect.X,topY,marginLeft,stretchedCenterHeight);destArray[System.Array.index(4,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(leftX,topY,stretchedCenterWidth,stretchedCenterHeight);destArray[System.Array.index(5,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(rightX,topY,marginRight,stretchedCenterHeight);destArray[System.Array.index(6,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(renderRect.X,bottomY,marginLeft,marginBottom);destArray[System.Array.index(7,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(leftX,bottomY,stretchedCenterWidth,marginBottom);destArray[System.Array.index(8,destArray)]=new Microsoft.Xna.Framework.Rectangle.$ctor2(rightX,bottomY,marginRight,marginBottom)}}},fields:{Bottom:0,destinationRects:null,Left:0,NinePatchRects:null,Right:0,Top:0},alias:["DrawInto$1","SpineEngine$Graphics$Drawable$IDrawable$DrawInto$1"],ctors:{init:function(){this.destinationRects=System.Array.init(9,function(){return new Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Rectangle);this.NinePatchRects=System.Array.init(9,function(){return new Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Rectangle)},ctor:function(texture,sourceRect,left,right,top,bottom){SpineEngine.Graphics.Drawable.NinePatchDrawable.$ctor2.call(this,new SpineEngine.Graphics.Drawable.SubtextureDrawable.$ctor1(texture,sourceRect.$clone()),left,right,top,bottom)},$ctor1:function(texture,left,right,top,bottom){SpineEngine.Graphics.Drawable.NinePatchDrawable.$ctor2.call(this,new SpineEngine.Graphics.Drawable.SubtextureDrawable.ctor(texture),left,right,top,bottom)},$ctor2:function(subtexture,left,right,top,bottom){this.$initialize();SpineEngine.Graphics.Drawable.SubtextureDrawable.ctor.call(this,subtexture.Texture2D);this.Left=left;this.Right=right;this.Top=top;this.Bottom=bottom;SpineEngine.Graphics.Drawable.NinePatchDrawable.GenerateNinePatchRects(subtexture.SourceRect.$clone(),this.NinePatchRects,left,right,top,bottom)}},methods:{DrawInto$1:function(width,height,color,depth,target){var $t,scale=new Microsoft.Xna.Framework.Vector2.$ctor2(width/this.SourceRect.Width,height/this.SourceRect.Height),rects=new(System.Collections.Generic.List$1(System.Tuple$2(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle)).ctor),sourceRects=this.NinePatchRects,i,source,destination,i1;for(SpineEngine.Graphics.Drawable.NinePatchDrawable.GenerateNinePatchRects(this.SourceRect.$clone(),this.destinationRects,Bridge.Int.clip32(this.Left/scale.X),Bridge.Int.clip32(this.Right/scale.X),Bridge.Int.clip32(this.Top/scale.Y),Bridge.Int.clip32(this.Bottom/scale.Y)),i=0;i<9;i=i+1|0)source=sourceRects[System.Array.index(i,sourceRects)].$clone(),destination=this.destinationRects[System.Array.index(i,this.destinationRects)].$clone(),destination.Location=Microsoft.Xna.Framework.Point.op_Subtraction(destination.Location.$clone(),Microsoft.Xna.Framework.Point.op_Addition(this.SourceRect.Location.$clone(),($t=System.Nullable.liftne(Microsoft.Xna.Framework.Vector2.op_Inequality,System.Nullable.lift1("$clone",this.Origin),null)?System.Nullable.getValue(System.Nullable.lift1("$clone",this.Origin)).ToPoint():null,$t!=null?$t:this.SourceRect.Center))),destination.Width=Bridge.Int.clip32(destination.Width*width/this.SourceRect.Width),destination.Height=Bridge.Int.clip32(destination.Height*height/this.SourceRect.Height),rects.add({Item1:source.$clone(),Item2:destination.$clone()});for(i1=0;i1<rects.Count;i1=i1+1|0){var rect=rects.getItem(i1),source1=rect.Item1.$clone(),destination1=rect.Item2.$clone();target.Draw(this.Texture2D,SpineEngine.Maths.RectangleF.op_Implicit$1(destination1.$clone()),SpineEngine.Maths.RectangleF.op_Implicit$1(source1.$clone()),color.$clone(),depth)}}}});Bridge.define("SpineEngine.Graphics.Drawable.TiledDrawable",{inherits:[SpineEngine.Graphics.Drawable.SubtextureDrawable],alias:["DrawInto$1","SpineEngine$Graphics$Drawable$IDrawable$DrawInto$1"],ctors:{$ctor1:function(subtexture){this.$initialize();SpineEngine.Graphics.Drawable.SubtextureDrawable.ctor.call(this,subtexture.Texture2D)},ctor:function(texture){this.$initialize();SpineEngine.Graphics.Drawable.SubtextureDrawable.ctor.call(this,texture)}},methods:{DrawInto$1:function(width,height,color,depth,target){for(var y,destination1,$t,$t1,source=this.SourceRect.$clone(),destination=new SpineEngine.Maths.RectangleF.$ctor2(-($t=System.Nullable.liftne(Microsoft.Xna.Framework.Vector2.op_Inequality,System.Nullable.lift1("$clone",this.Origin),null)?System.Nullable.getValue(System.Nullable.lift1("$clone",this.Origin)).X:null,$t!=null?$t:Bridge.Int.div(source.Width,2)|0),-($t1=System.Nullable.liftne(Microsoft.Xna.Framework.Vector2.op_Inequality,System.Nullable.lift1("$clone",this.Origin),null)?System.Nullable.getValue(System.Nullable.lift1("$clone",this.Origin)).Y:null,$t1!=null?$t1:Bridge.Int.div(source.Height,2)|0),source.Width,source.Height),repeatX=width/this.SourceRect.Width,repeatY=height/this.SourceRect.Height,x=0;x<repeatX;x=x+1|0)for(y=0;y<repeatY;y=y+1|0)destination1=destination.$clone(),destination1.Location=Microsoft.Xna.Framework.Vector2.op_Addition(destination1.Location.$clone(),new Microsoft.Xna.Framework.Vector2.$ctor2(Bridge.Int.mul(x,this.SourceRect.Width),Bridge.Int.mul(y,this.SourceRect.Height))),target.Draw(this.Texture2D,destination1.$clone(),SpineEngine.Maths.RectangleF.op_Implicit$1(source.$clone()),color.$clone(),depth)}}});Bridge.define("SpineEngine.Graphics.Renderers.DefaultRenderer",{inherits:[SpineEngine.Graphics.Renderers.Renderer],methods:{IsApplicable:function(entity){return!0}}});Bridge.define("SpineEngine.Graphics.Renderers.RenderLayerExcludeRenderer",{inherits:[SpineEngine.Graphics.Renderers.Renderer],fields:{ExcludedRenderLayers:null},ctors:{ctor:function(excludedRenderLayers){excludedRenderLayers===void 0&&(excludedRenderLayers=[]);this.$initialize();SpineEngine.Graphics.Renderers.Renderer.ctor.call(this);this.ExcludedRenderLayers=excludedRenderLayers}},methods:{IsApplicable:function(entity){var $t,$t1;return!System.Linq.Enumerable.from(this.ExcludedRenderLayers).contains(($t=($t1=entity.GetComponent(SpineEngine.ECS.Components.RenderLayerComponent))!=null?$t1.Layer:null,$t!=null?$t:0))}}});Bridge.define("SpineEngine.Graphics.Renderers.RenderLayerRenderer",{inherits:[SpineEngine.Graphics.Renderers.Renderer],fields:{RenderLayers:null},ctors:{ctor:function(renderLayers){renderLayers===void 0&&(renderLayers=[]);this.$initialize();SpineEngine.Graphics.Renderers.Renderer.ctor.call(this);System.Array.sort(renderLayers);System.Array.reverse(renderLayers);this.RenderLayers=renderLayers}},methods:{IsApplicable:function(entity){var $t,$t1;return System.Array.contains(this.RenderLayers,($t=($t1=entity.GetComponent(SpineEngine.ECS.Components.RenderLayerComponent))!=null?$t1.Layer:null,$t!=null?$t:0),System.Int32)}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.ColorTween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Color)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Color).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Color$TweenedValue=SpineEngine.Maths.Easing.Lerps.Ease(this.EaseType,this.FromValue.$clone(),this.ToValue.$clone(),elapsedTime,this.Duration)}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.FloatTween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(System.Single)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(System.Single).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$System$Single$TweenedValue=SpineEngine.Maths.Easing.Lerps.Ease$8(this.EaseType,this.FromValue,this.ToValue,elapsedTime,this.Duration)}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.IntTween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(System.Int32)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(System.Int32).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$System$Int32$TweenedValue=Bridge.Int.clip32(SpineEngine.Maths.Easing.Lerps.Ease$8(this.EaseType,this.FromValue,this.ToValue,elapsedTime,this.Duration))}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.QuaternionTween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Quaternion)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Quaternion).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Quaternion$TweenedValue=SpineEngine.Maths.Easing.Lerps.Ease$2(this.EaseType,this.FromValue.$clone(),this.ToValue.$clone(),elapsedTime,this.Duration)}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.RectangleTween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Rectangle)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Rectangle).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Rectangle$TweenedValue=SpineEngine.Maths.Easing.Lerps.Ease$3(this.EaseType,this.FromValue.$clone(),this.ToValue.$clone(),elapsedTime,this.Duration)}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector2Tween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Vector2)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Vector2).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Vector2$TweenedValue=SpineEngine.Maths.Easing.Lerps.Ease$5(this.EaseType,this.FromValue.$clone(),this.ToValue.$clone(),elapsedTime,this.Duration)}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector3Tween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Vector3)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Vector3).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Vector3$TweenedValue=SpineEngine.Maths.Easing.Lerps.Ease$6(this.EaseType,this.FromValue.$clone(),this.ToValue.$clone(),elapsedTime,this.Duration)}}});Bridge.define("SpineEngine.GlobalManagers.Tweens.PrimitiveTweens.Vector4Tween",{inherits:[SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Vector4)],alias:["UpdateValue","SpineEngine$GlobalManagers$Tweens$Interfaces$ITween$UpdateValue"],ctors:{ctor:function(tweenTarget,toValue,duration){this.$initialize();SpineEngine.GlobalManagers.Tweens.Tween$1(Microsoft.Xna.Framework.Vector4).ctor.call(this,tweenTarget,toValue,duration)}},methods:{UpdateValue:function(elapsedTime){this.TweenTarget.SpineEngine$GlobalManagers$Tweens$Interfaces$ITweenTarget$1$Microsoft$Xna$Framework$Vector4$TweenedValue=SpineEngine.Maths.Easing.Lerps.Ease$7(this.EaseType,this.FromValue.$clone(),this.ToValue.$clone(),elapsedTime,this.Duration)}}});Bridge.define("SpineEngine.Graphics.Renderers.ScreenSpaceRenderer",{inherits:[SpineEngine.Graphics.Renderers.RenderLayerRenderer],ctors:{ctor:function(renderLayers){renderLayers===void 0&&(renderLayers=[]);this.$initialize();SpineEngine.Graphics.Renderers.RenderLayerRenderer.ctor.call(this,renderLayers);this.RenderAfterPostProcessors=!0;this.RendererCamera=new SpineEngine.Graphics.Cameras.ScreenSpaceCamera}}})});